[{"/home/pranjul/Desktop/pratham/hello/src/App.js":"1","/home/pranjul/Desktop/pratham/hello/src/ProfilePage/Profile.jsx":"2","/home/pranjul/Desktop/pratham/hello/src/Component/ParentsDashboard/ParentsDashboard.jsx":"3","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/PrincipalDashboard.jsx":"4","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/SectionCards.jsx":"5","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/UpdateandDelete/Card.jsx":"6","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/QuizUpload/QuizResult.jsx":"7","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/Attendence/Attendence.jsx":"8","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/AssignmentShow/AssignmentShow.jsx":"9","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/TimeTable/TimeTable.jsx":"10","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/ResultPage/ResultPage.jsx":"11","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/QuizShow/QuizShow.jsx":"12","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/SchoolDetails/SchoolDetails.jsx":"13","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/AdminEnroll.jsx":"14","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/EnrollSchool.jsx":"15","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/StudentFees.jsx":"16","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ForTeacher/TeacherSchedule.jsx":"17","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/TeacherInfo.jsx":"18","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/TaskList.jsx":"19","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ExamTimeTable/taskList.jsx":"20","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/EnrollCards.jsx":"21","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SadminDashboard.jsx":"22","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/EnrollPrincipal.jsx":"23","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/SectionAndBranchUpload.jsx":"24","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/TeacherDashboard.jsx":"25","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/TimeTable/TimeTableT.jsx":"26","/home/pranjul/Desktop/pratham/hello/src/ForgotPassword/ForgotPassword.jsx":"27","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/StudentDashboard.jsx":"28","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/StudentCard.jsx":"29","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/Calender/StudentSchedule.jsx":"30","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/StudentDetails/StudentDetails.jsx":"31","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/UpdateandDelete/UpdateSchool.jsx":"32","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/EnrollTeacher.jsx":"33","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/StudyMaterial/StudyMaterial.jsx":"34","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ExamTimeTable/ExamTimeTable.jsx":"35","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/PromoteStudent.jsx":"36","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/DeleteSection.jsx":"37","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/QuizUpload/QuizTaskList.jsx":"38","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/StudentUpdate.jsx":"39","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/DailyTimTable/TaskList.jsx":"40","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/AssignmentShow/AssignmentTeacher.jsx":"41","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/AttendenceShow/Attendence.jsx":"42","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/ResultShow/ResultShow.jsx":"43","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/AssignmentUpload/AssignmentUpload.jsx":"44","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/QuizUpload/QuizUpload.jsx":"45","/home/pranjul/Desktop/pratham/hello/src/LoginPage/LoginPage.jsx":"46","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/TeacherCard.jsx":"47","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/TeacherDetails/TeacherDetails.jsx":"48","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ForTeacher/TeacherTasklist.jsx":"49","/home/pranjul/Desktop/pratham/hello/src/reportWebVitals.js":"50","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/ClassTimeTable/ClassTimeTable.jsx":"51","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/AssignClass.jsx":"52","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/DailyTimTable/DailyTIimeTable.jsx":"53","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/ManageMentDashboard.jsx":"54","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/ResultPage.jsx":"55","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/TimeTableCard.jsx":"56","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/TeacherCalender/TeacherCalender.jsx":"57","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/UpdateandDelete/DeletePage.jsx":"58","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/Calender/DateSearcher.jsx":"59"},{"size":1488,"mtime":1610873929771,"results":"60","hashOfConfig":"61"},{"size":2066,"mtime":1610871822105,"results":"62","hashOfConfig":"61"},{"size":3008,"mtime":1610871822097,"results":"63","hashOfConfig":"61"},{"size":21877,"mtime":1611048311144,"results":"64","hashOfConfig":"61"},{"size":1923,"mtime":1610879601095,"results":"65","hashOfConfig":"61"},{"size":1861,"mtime":1610879895689,"results":"66","hashOfConfig":"61"},{"size":3187,"mtime":1610871822105,"results":"67","hashOfConfig":"61"},{"size":5491,"mtime":1610969486155,"results":"68","hashOfConfig":"61"},{"size":6266,"mtime":1610964144969,"results":"69","hashOfConfig":"61"},{"size":3479,"mtime":1610970741299,"results":"70","hashOfConfig":"61"},{"size":16277,"mtime":1611047706823,"results":"71","hashOfConfig":"61"},{"size":11567,"mtime":1610871822101,"results":"72","hashOfConfig":"61"},{"size":10499,"mtime":1610871822101,"results":"73","hashOfConfig":"61"},{"size":10460,"mtime":1610878608351,"results":"74","hashOfConfig":"61"},{"size":12236,"mtime":1610877935164,"results":"75","hashOfConfig":"61"},{"size":15637,"mtime":1611053979770,"results":"76","hashOfConfig":"61"},{"size":10657,"mtime":1611142653062,"results":"77","hashOfConfig":"61"},{"size":24984,"mtime":1611057574737,"results":"78","hashOfConfig":"61"},{"size":1024,"mtime":1610871822101,"results":"79","hashOfConfig":"61"},{"size":1347,"mtime":1610871822097,"results":"80","hashOfConfig":"61"},{"size":2613,"mtime":1610879495367,"results":"81","hashOfConfig":"61"},{"size":6042,"mtime":1610965943485,"results":"82","hashOfConfig":"61"},{"size":11061,"mtime":1610878399615,"results":"83","hashOfConfig":"61"},{"size":7695,"mtime":1610969944367,"results":"84","hashOfConfig":"61"},{"size":28480,"mtime":1611047883251,"results":"85","hashOfConfig":"61"},{"size":6441,"mtime":1611046683740,"results":"86","hashOfConfig":"61"},{"size":2176,"mtime":1610871822105,"results":"87","hashOfConfig":"61"},{"size":25856,"mtime":1610967071340,"results":"88","hashOfConfig":"61"},{"size":7387,"mtime":1610871822097,"results":"89","hashOfConfig":"61"},{"size":4480,"mtime":1610871822101,"results":"90","hashOfConfig":"61"},{"size":29715,"mtime":1611046336794,"results":"91","hashOfConfig":"61"},{"size":14742,"mtime":1610871822101,"results":"92","hashOfConfig":"61"},{"size":22249,"mtime":1611057772365,"results":"93","hashOfConfig":"61"},{"size":8849,"mtime":1610969087086,"results":"94","hashOfConfig":"61"},{"size":8164,"mtime":1611058892672,"results":"95","hashOfConfig":"61"},{"size":22124,"mtime":1611056032334,"results":"96","hashOfConfig":"61"},{"size":7487,"mtime":1610969902747,"results":"97","hashOfConfig":"61"},{"size":2649,"mtime":1610871822105,"results":"98","hashOfConfig":"61"},{"size":28758,"mtime":1611052618762,"results":"99","hashOfConfig":"61"},{"size":2063,"mtime":1610871822097,"results":"100","hashOfConfig":"61"},{"size":5990,"mtime":1610968906048,"results":"101","hashOfConfig":"61"},{"size":2933,"mtime":1610964532499,"results":"102","hashOfConfig":"61"},{"size":5013,"mtime":1610971129719,"results":"103","hashOfConfig":"61"},{"size":10312,"mtime":1610969007845,"results":"104","hashOfConfig":"61"},{"size":12043,"mtime":1610969278917,"results":"105","hashOfConfig":"61"},{"size":7373,"mtime":1610871822105,"results":"106","hashOfConfig":"61"},{"size":3186,"mtime":1610871822097,"results":"107","hashOfConfig":"61"},{"size":24658,"mtime":1611045722407,"results":"108","hashOfConfig":"61"},{"size":1720,"mtime":1610871822097,"results":"109","hashOfConfig":"61"},{"size":362,"mtime":1610871822109,"results":"110","hashOfConfig":"61"},{"size":14001,"mtime":1611050710953,"results":"111","hashOfConfig":"61"},{"size":7595,"mtime":1611057874359,"results":"112","hashOfConfig":"61"},{"size":10428,"mtime":1611058294387,"results":"113","hashOfConfig":"61"},{"size":20630,"mtime":1611051768518,"results":"114","hashOfConfig":"61"},{"size":34673,"mtime":1611057332742,"results":"115","hashOfConfig":"61"},{"size":2726,"mtime":1611058627224,"results":"116","hashOfConfig":"61"},{"size":3753,"mtime":1610871822105,"results":"117","hashOfConfig":"61"},{"size":3244,"mtime":1610871822101,"results":"118","hashOfConfig":"61"},{"size":401,"mtime":1610871822101,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"1m56hal",{"filePath":"124","messages":"125","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"127"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"123"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"127"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"127"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"127"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"123"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"127"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"127"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"127"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"123"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"127"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"127"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"123"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"127"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"127"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"127"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pranjul/Desktop/pratham/hello/src/App.js",["263"],"import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport ManageMentDashboard from './Component/ManageMentDashboard/ManageMentDashboard';\nimport LoginPage from './LoginPage/LoginPage';\nimport TeacherDashboard from './Component/TeacherDashboard/TeacherDashboard';\nimport StudentDashboard from './Component/StudentDashboard/StudentDashboard';\nimport SadminDashboard from './Component/SadminDashboard/SadminDashboard'\nimport ForgotPassword from './ForgotPassword/ForgotPassword';\nimport Profile from './ProfilePage/Profile';\nimport PrincipalDashboard from './Component/PrincipalDashboard/PrincipalDashboard';\nimport ParentsDashboard from './Component/ParentsDashboard/ParentsDashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n\n      {/** \n              \n\n \n\n */}\n\n\n\n      <Router>\n\n        <Switch>\n          <Route exact path=\"/admin\" component={ManageMentDashboard} />\n          <Route exact path=\"/sadmin\" component={SadminDashboard} />\n          <Route exact path=\"/teacher\" component={TeacherDashboard} />\n          <Route exact path=\"/student\" component={StudentDashboard} />\n          <Route exact path=\"/principal\" component={PrincipalDashboard} />\n          <Route exact path=\"/parents\" component={ParentsDashboard} />\n          <Route exact path=\"/forgot\" component={ForgotPassword} />\n\n          <Route exact path=\"/\" component={LoginPage} />\n\n\n        </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n",["264","265"],"/home/pranjul/Desktop/pratham/hello/src/ProfilePage/Profile.jsx",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"import React, { useEffect, useState } from 'react'\nimport './Profile.css';\nimport Axios from 'axios'\n\nimport Cookies from 'js-cookie'\nimport { Tabs, Tab } from 'react-bootstrap'\n\n\nfunction Profile() {\n\n\n    const [profileImg, setProfileImg] = useState('');\n    const [name, setName] = useState('')\n    const [role, setRole] = useState('')\n    const [enrollNo, setEnrollNo] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [dob, setDob] = useState('');\n    const [aadhar, setAadhar] = useState('')\n    const [caste, setCaste] = useState('');\n    const [gender, setGender] = useState('');\n    const [panNo, setPanNo] = useState('');\n    const [religion, setReligion] = useState('');\n    const [address, setAddress] = useState('');\n    const [pincode, setPincode] = useState('');\n\n\n    useEffect(() => {\n        console.log(\"useEffect Called\");\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"everydetail\"), { EnrollmenId: 'UE012100001' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setName(res.data.data.Name)\n            setRole(res.data.data.Role)\n            setEnrollNo(res.data.data.EnrollmentNo)\n            setEmail(res.data.data.EmailId)\n            setPhone(res.data.data.Mobile)\n            setDob(res.data.data.Dob)\n            setAadhar(res.data.data.AadharId)\n            setCaste(res.data.data.Caste)\n            setGender(res.data.data.Gender)\n            setPanNo(res.data.data.Id)\n            setReligion(res.data.data.Religion)\n            setAddress(res.data.data.HomeAddress)\n            setPincode(res.data.data.Pincode)\n\n            let c = new Uint8Array(res.data.file.Body.data)\n            const STR = c.reduce((data, byte) => {\n                return data + String.fromCharCode(byte);\n            }, '');\n            let base64String = btoa(STR)\n            setProfileImg(base64String)\n\n\n\n\n        })\n    }, [])\n\n\n\n    return (\n        <h1>dfs</h1>\n    )\n}\n\nexport default Profile\n",["282","283"],"/home/pranjul/Desktop/pratham/hello/src/Component/ParentsDashboard/ParentsDashboard.jsx",[],["284","285"],"/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/PrincipalDashboard.jsx",["286","287"],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/SectionCards.jsx",[],["288","289"],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/UpdateandDelete/Card.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/QuizUpload/QuizResult.jsx",["290","291","292"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport xlsx from 'xlsx';\nimport { Spin } from 'antd';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cookies from 'js-cookie'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\n\nfunction QuizResult() {\n    const [resultShow, setResultShow] = useState(false);\n    const [quizData, setQuizData] = useState([]);\n    const [spin, setSpin] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        console.log(\"useEffect called\");\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"quizdata\"), { hello: \"dsfds\" }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            res.data.reverse()\n            setQuizData(res.data)\n            setSpin(true)\n        })\n    }, [])\n    const back = () => setResultShow(false)\n\n\n    function submitHandle(e) {\n        console.log(e);\n        setOpen(true)\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat('quizresultshow'), { QuizId: e }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            xl(res.data)\n            setOpen(false)\n        })\n    }\n\n\n    function xl(records) {\n        var worksheet = xlsx.utils.json_to_sheet(records)\n        var wb = xlsx.utils.book_new()\n\n        xlsx.utils.book_append_sheet(wb, worksheet, 'xl')\n        xlsx.writeFile(wb, \"Result.xlsx\")\n\n    }\n\n\n\n\n\n\n    return (\n        <div>\n            {spin ? <table className=\"table\" style={{ border: '3px solid #001529', textAlign: 'center' }}>\n                <thead style={{ backgroundColor: '#001529', color: 'white' }}>\n                    <tr >\n                        <th>Quiz Date</th>\n                        <th>Quiz Name</th>\n                        <th>Class</th>\n                        <th>Branch</th>\n                        <th>Section</th>\n                        <th>See Result</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n\n                    {quizData.map(data => (\n                        <tr key={data.QuizId}>\n                            <td>{data.Date}</td>\n                            <td>{data.Name}</td>\n                            <td>{data.Class}</td>\n                            <td>{data.Branch}</td>\n                            <td>{data.Section}</td>\n                            <td><button className=\"btn btn-info\" disabled={loading} onClick={() => submitHandle(data.QuizId)}>Download Result</button></td>\n\n                        </tr>\n                    ))}\n\n\n                </tbody>\n            </table> : <div style={{ textAlign: 'center' }}> <Spin /> </div>}\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n\n        </div>\n    )\n}\n\nexport default QuizResult\n","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/Attendence/Attendence.jsx",["293","294","295","296"],"import React, { useState, useEffect } from 'react'\nimport { Radio } from 'antd';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { Alert } from 'react-bootstrap'\nimport Axios from 'axios';\nimport { Spin } from 'antd';\nimport Cookies from 'js-cookie'\n\n\nconst attendenceOptions = ['P', 'A', 'L'];\n\nfunction Attendence() {\n    const [data, setData] = useState([])\n    const [attendence, setAttendence] = useState([]);\n    const [wshow, setWshow] = useState(false);\n    const [pClass, setPCLass] = useState('');\n    const [branch, setBranch] = useState('')\n    const [section, setSection] = useState('');\n    const [adisable, setAdisable] = useState(true);\n    const [spin, setSpin] = useState(false)\n\n\n\n    useEffect(() => {\n        console.log(attendence);\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"studentdetails3\"), { hello: 'Dfdsfsa' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setSpin(true)\n            if (res.data.uploaded === true) {\n                alert(\"already uploaded\")\n                setData(res.data.data.data)\n                setPCLass(res.data.data.Class)\n                setBranch(res.data.data.Branch)\n                setSection(res.data.data.Section)\n                setAdisable(true)\n\n                return false\n            } else {\n                setData(res.data.data.data)\n                setPCLass(res.data.data.Class)\n                setBranch(res.data.data.Branch)\n                setSection(res.data.data.Section)\n                setAdisable(false)\n            }\n\n        })\n\n    }, [])\n    function handleSubmit(e) {\n        console.log(\"function called\");\n        e.preventDefault()\n        console.log(attendence);\n        var fr = false\n\n\n        data.map(data => {\n            console.log(data);\n            var d = attendence.find(o => o.RollNo === data.RollNo)\n            console.log(d);\n\n            if (!d) {\n                NotificationManager.warning(`Please Select Any One Field in Attendence Of Roll No ${data.RollNo}`)\n                fr = false\n                return false;\n            } else {\n                fr = true\n            }\n        })\n\n\n        if (fr) {\n            var d = window.confirm(\"Upload Student Attendence\")\n            if (d) {\n\n                var Data = {\n                    Class: pClass,\n                    Branch: branch,\n                    Section: section,\n                    attendence: attendence\n                }\n\n                Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"attendenceupload\"), Data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                    console.log(res.data.msg);\n                    alert(res.data.msg);\n                })\n            } else return false\n        } else return false\n\n\n    }\n\n\n\n\n    return (\n\n\n        <div >\n            {spin ? <div>\n                <label style={{ fontSize: 30 }}>Attendence Page</label>\n                {wshow ? <Alert variant='warning' style={{ fontFamily: 'Allerta Stencil sans-serif' }}>\n                    <NotificationContainer />\n\n                </Alert> : null}<br />\n                <label style={{ color: 'green' }}>Class : <span style={{ color: 'red' }}> {pClass} </span> , Branch : <span> {branch}  </span> , Section : <span style={{ color: 'red' }}> {section} </span> </label>\n                <fieldset disabled={adisable}>    <form onSubmit={handleSubmit}>\n\n\n\n                    <table className=\"table\" style={{ textAlign: 'center', border: '3px solid #001529' }}>\n                        <thead style={{ backgroundColor: '#001529', color: 'white' }}>\n                            <tr>\n                                <th>Name</th>\n                                <th>Roll No</th>\n\n                                <th>Attendence</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {data.map(data => (\n                                <tr>\n                                    <td>{data.Name}</td>\n                                    <td>{data.RollNo}</td>\n\n\n                                    <td>\n                                        <Radio.Group options={attendenceOptions} onChange={(e) => {\n                                            var Find = attendence.find(o => o.RollNo == data.RollNo)\n                                            var Find2 = attendence.indexOf(Find)\n\n\n                                            if (Find) {\n                                                attendence.splice(Find2, 1)\n                                                attendence.push({ RollNo: data.RollNo, Status: e.target.value })\n\n                                            } else {\n                                                attendence.push({ RollNo: data.RollNo, Status: e.target.value })\n                                            }\n\n\n\n\n                                        }} />\n                                    </td>\n                                </tr>\n\n                            ))}\n                        </tbody>\n\n                    </table>\n                    <button type='submit' className={adisable ? \"btn btn-dark\" : \"btn btn-primary\"} style={{width:\"200px\"}} onClick={() => setWshow(true)}  >  submit</button>\n                </form></fieldset>\n            </div> : <Spin />}\n        </div>\n    )\n}\n\nexport default Attendence\n","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/AssignmentShow/AssignmentShow.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/TimeTable/TimeTable.jsx",["297"],"import Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport {Button} from 'react-bootstrap'\n\n\nfunction TimeTable(props) {\n    const [data, setData] = useState([]);\n    const [show, setShow] = useState(false);\n    const [examData, setExamData] = useState([]);\n    const [examName, setExamName] = useState('')\n    console.log(props);\n    let no = 0\n    useEffect(() => {\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"examShow\"), { Class: props.Class, Branch: props.Branch }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setData(res.data)\n        })\n    }, [])\n\n\n    const timetab = (e) => {\n        console.log(e.ExamName);\n        setExamName(e.ExamName)\n        var c = data.find(o => o.ExamId === e.ExamId)\n        console.log(c.ExamDetails);\n        setExamData(c.ExamDetails)\n        setShow(true)\n\n\n    }\n\n    const back = () => setShow(false)\n\n\n    if (show) {\n        return (\n            <div>\n                <Button variant=\"outline-danger\" onClick={back}>back</Button>\n                <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>{examName} Time Table</p><hr />\n\n                <table className=\"table\" style={{ textAlign: 'center' , border: '3px solid #001529'}}>\n                    <thead style={{ backgroundColor: '#001529' , color: 'white' }}>\n                        <tr>\n                            <th>S.No</th>\n                            <th>Subject</th>\n                            <th>Date Of Exam</th>\n                            <th>Time (from)</th>\n                            <th>Time (to)</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {examData.map(data => (\n                            <tr>\n                                <td>{no = no + 1}</td>\n                                <td>{data.subjectName}</td>\n                                <td>{data.dateOfExam}</td>\n                                <td>{data.startTime}</td>\n                                <td>{data.endTime}</td>\n                            </tr>\n                        ))}\n\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}> Time Table</p><hr />\n\n            <table className=\"table\" style={{ textAlign: 'center' , border: '3px solid #001529'}}>\n\n                <thead style={{ backgroundColor: '#001529' , color: 'white' }}>\n                    <tr>\n                        <th>S.no</th>\n                        <th>Name</th>\n                        <th>Timetable</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map(data => {\n                        no = no + 1\n                        return (\n                            <tr>\n                                <td>{no}</td>\n                                <td>{data.ExamName}</td>\n\n                                <td><button onClick={() => timetab(data)} className=\"btn btn-info\">See Timetable</button></td>\n                            </tr>\n                        )\n                    })}\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TimeTable\n","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/ResultPage/ResultPage.jsx",["298","299","300","301","302","303","304","305","306","307","308","309","310"],"/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/QuizShow/QuizShow.jsx",["311","312","313"],"import React, { useEffect, useState, useRef } from 'react';\nimport './Quiz.css'\nimport { Radio } from 'antd';\nimport Axios from 'axios';\nimport CountDownTime from 'react-countdown'\nimport { Spin } from 'antd';\nimport { LoadingOutlined, ClockCircleOutlined } from '@ant-design/icons';\nimport Moment from 'moment';\nimport Cookies from 'js-cookie'\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 100, textAlign: 'center' }} spin />;\n\n\n\nfunction QuizShow() {\n    const [userAnswer, setUserAnswer] = useState([])\n    const [quizData, setQuizData] = useState([])\n    const [data, setData] = useState([])\n    const [mshow, setMshow] = useState(false);\n    const [qid, setQid] = useState('');\n    const [qname, setQname] = useState('');\n    const [quiztime, setQuiztime] = useState('');\n    const [spin, setSpin] = useState(false);\n    const [spin1, setSpin1] = useState(false);\n    const [bdisable, setBdisaable] = useState(true);\n    const [endt, setEndt] = useState('');\n\n\n    var date = new Date();\n    let da = (\"0\" + date.getDate()).slice(-2)\n    let da1 = (\"0\" + date.getMonth() + 1).slice(-2)\n    let da3 = date.getFullYear()\n    let da4 = date.getHours()\n    let da5 = (\"0\" + date.getMinutes()).slice(-2)\n\n    let fulldate = da3 + \"-\" + da1 + \"-\" + da + \"T\" + da4 + \":\" + da5\n\n\n\n\n\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n    };\n\n\n\n    useEffect(() => {\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"quizshow\"), { hello: 'hiii' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            console.log(res.data);\n            if (res.data.success === false) {\n                alert(res.data.msg + \"fdsfafdf\")\n                setSpin(true)\n                return false\n\n            } else {\n\n                res.data.reverse()\n\n                setQuizData(res.data)\n                setSpin(true)\n\n            }\n\n        })\n    }, [])\n\n\n\n\n\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        console.log(userAnswer);\n        var d = window.confirm(\"Finish Quiz\")\n        if (d) {\n            setSpin1(false)\n            var data = {\n                QuizId: qid,\n                Answer: userAnswer\n            }\n            console.log('sdfsadff');\n            Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"quizresultupload\"), data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                console.log(res.data);\n                alert(res.data.msg);\n                setMshow(false)\n            })\n        }\n    }\n\n\n\n\n\n\n    function attemptQuiz(e) {\n\n        var date1 = new Date()\n        let d1 = (\"0\" + date1.getDate()).slice(-2)\n        let d2 = (\"0\" + date1.getMonth() + 1).slice(-2)\n        let d3 = date1.getFullYear()\n        let d4 = date1.getHours()\n        let d5 = (\"0\" + date1.getMinutes()).slice(-2)\n        let fulldate1 = d3 + \"-\" + d2 + \"-\" + d1 + \"T\" + d4 + \":\" + d5\n        console.log(fulldate1);\n\n        if (fulldate1 >= e.End) {\n\n            alert(\"Time Over \")\n\n            return false\n        }\n\n\n\n        var c1 = Moment(date1).add(parseInt(e.Duration), 'm').format()\n        var c2 = c1.split(\"+\")[0]\n        console.log(c2);\n        let c3 = e.End + \":00\"\n        console.log(c3);\n\n        if (c2 > c3) {\n\n            setEndt(c3)\n            setBdisaable(true)\n            var s = window.confirm(\"Are you sure you want to attempt the quiz \")\n            if (s) {\n                setMshow(true)\n                setSpin1(false)\n\n\n                console.log(e.QuizId);\n                setQid(e.QuizId)\n\n                setQname(e.Name)\n\n\n                Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"quizquestions\"), { QuizId: e.QuizId }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                    console.log(res.data);\n                    if (res.data.success === false) {\n                        alert(res.data.msg)\n                        setMshow(false)\n                        return false\n                    } else {\n                        setData(res.data)\n                        setSpin1(true)\n\n                    }\n\n                })\n            }\n        } else {\n            var f = parseInt(e.Duration)\n            setQuiztime(f)\n            setBdisaable(false)\n\n            var d = window.confirm(\"Are you sure you want to attempt the quiz\")\n\n            if (d) {\n                setMshow(true)\n                setSpin1(false)\n\n\n                console.log(e.QuizId);\n                setQid(e.QuizId)\n\n                setQname(e.Name)\n\n\n                Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"quizquestions\"), { QuizId: e.QuizId }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                    console.log(res.data);\n                    if (res.data.success === false) {\n                        alert(res.data.msg)\n                        setMshow(false)\n                        return false\n                    } else {\n                        setData(res.data)\n                        setSpin1(true)\n\n                    }\n\n                })\n            }\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n    }\n\n\n\n    function back() {\n        var d = window.confirm(\"are you sure yout want to leave the page all your progress will be lost\")\n        if (d) {\n            console.log(\"ccasfsdff\");\n            setMshow(false)\n        }\n\n    }\n\n\n    function Completionist() {\n        console.log(\"sdfsdffffsd\");\n\n        alert(\"Time up!!\")\n        setSpin1(false)\n\n        var data = {\n            QuizId: qid,\n            Answer: userAnswer\n        }\n        console.log('sdfsadff');\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"quizresultupload\"), data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            alert(res.data.msg);\n            setMshow(false)\n        })\n\n    }\n\n\n\n    if (mshow) {\n        console.log(quiztime);\n        console.log(endt);\n        console.log(bdisable);\n        return (\n\n            <div>\n                {spin1 ? <div>\n                    <button onClick={back} className=\"btn btn-danger\">back</button><br />\n                    <div style={{ textAlign: 'center', fontSize: 25 }}> <label style={{ color: 'green' }}>Quiz Name : {qname}   </label></div><span style={{ textAlign: 'right' }}>  <CountDownTime date={bdisable ? endt : Date.now() + quiztime * 60 * 1000} renderer={props => (\n                        <div>\n                            Time Left : <ClockCircleOutlined style={{ fontSize: 25, color: '#08c' }} /> {props.formatted.hours}:{props.formatted.minutes}:\n                            {props.formatted.seconds}\n                        </div>\n                    )}\n                        zeroPadTime={2} onComplete={Completionist} /></span>\n\n                    {/**  <label>quiz End in {time.hours}:{time.minutes}:{time.seconds}</label> */}\n\n                    {data.map(data => {\n\n                        return (\n                            <div className=\"card\" style={{ marginTop: '4%' }}>\n\n                                <div className=\"card-header\">  <label>Que No: {data.questionid}</label><br />\n                                    <label>Question :{data.question}</label><br />\n                                </div>\n                                <label className=\"card-header\">Options</label>\n\n                                <div className=\"card-body\" >\n\n\n                                    <Radio.Group onChange={(e) => {\n                                        var Find = userAnswer.find(o => o.QuesNo == data.questionid)\n                                        var Find2 = userAnswer.indexOf(Find)\n\n                                        if (e.target.value === \"Clear My Choice\") {\n                                            userAnswer.splice(Find2, 1)\n                                        } else {\n                                            if (Find) {\n                                                userAnswer.splice(Find2, 1)\n                                                userAnswer.push({ QuesNo: data.questionid, Answer: e.target.value })\n\n                                            } else {\n                                                userAnswer.push({ QuesNo: data.questionid, Answer: e.target.value })\n                                            }\n                                        }\n\n\n\n\n\n                                    }}>\n                                        <Radio style={radioStyle} value={data.option1} >{data.option1}</Radio>\n                                        <Radio style={radioStyle} value={data.option2}>  {data.option2}    </Radio>\n                                        <Radio style={radioStyle} value={data.option3}>{data.option3} </Radio>\n                                        <Radio style={radioStyle} value={data.option4}>{data.option4} </Radio>\n                                        <Radio style={radioStyle} value=\"Clear My Choice\">Clear My Choice </Radio>\n                                    </Radio.Group>\n                                </div>\n                            </div>\n                        )\n                    }\n\n                    )}\n\n                    <br />\n                    <div style={{ textAlign: 'right' }}> <button className=\"btn btn-success\" onClick={handleSubmit} >Submit</button></div>\n\n\n\n                </div> : <div style={{ textAlign: 'center' }}> <Spin indicator={antIcon} /> </div>}\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Quizes</p><hr />\n\n\n            {spin ? <table className=\"table\" style={{ textAlign: \"center\", border: '4px solid #001529' }}>\n                <thead style={{ backgroundColor: '#001529', color: 'white' }}>\n\n                    <tr>\n                        <th>Quiz Name</th>\n                        <th>Quiz Date</th>\n                        <th>Quiz Start Time</th>\n                        <th>Quiz End Time</th>\n                        <th>Quiz Duration</th>\n                        <th>Score</th>\n                        <th>Attempt Quiz</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n\n                    {quizData.map(data => {\n                        let c = true\n                        if (fulldate >= data.Start) {\n                            c = false\n                        } else {\n                            c = true\n                        }\n\n\n\n                        return (\n\n\n                            <tr key={data.QuizId}>\n                                <td>{data.Name}</td>\n                                <td>{data.Date}</td>\n                                <td>{data.QuizStartTime}</td>\n                                <td>{data.QuizEndTime} </td>\n                                <td style={{ color: 'red' }}>{data.Duration} Minutes</td>\n                                <td>{data.Score}</td>\n\n                                <td><button className=\"btn btn-success\" disabled={c} onClick={() => attemptQuiz(data)}>{c ? \"Not Started Yet\" : \"Attempt\"}</button> </td>\n\n                            </tr>\n                        )\n                    })}\n\n\n                </tbody>\n            </table> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div>}   <div>\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default QuizShow\n\n\n","/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/SchoolDetails/SchoolDetails.jsx",["314"],"import React, { useState } from 'react'\nimport './Schooldetails.css'\n\nfunction SchoolDetails(props) {\n    console.log(props);\n\n    let c = new Uint8Array(props.data.file.Body.data)\n    const STR = c.reduce((data, byte) => {\n        return data + String.fromCharCode(byte);\n    }, '');\n    let base64String = btoa(STR)\n\n\n\n\n\n    return (\n\n        <div>\n\n            <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>School Profile</p><hr />\n\n\n            <div className=\"container\" style={{ background: '-webkit-linear-gradient(left, #3931af, #00c6ff)' }}>\n                <div className=\"main-body\">\n\n\n\n\n                    <div className=\"row gutters-sm\">\n                        <div className=\"col-md-4 mb-3\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"d-flex flex-column align-items-center text-center\">\n                                        <img src={`data:image/jpeg;base64,${base64String}`} alt=\"Admin\" className=\"rounded-circle\" width=\"150\" height=\"180\" />\n                                        <div className=\"mt-3\">\n                                            <h4>{props.data.Data.SchoolId}</h4>\n                                            <p className=\"text-secondary mb-1\">{props.data.Data.Name.toUpperCase()}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card mt-4\">\n\n                                <ul className=\"list-group list-group-flush\">\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-globe mr-2 icon-inline\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path></svg>School Id</h6>\n                                        <span className=\"text-secondary\">{props.data.Data.SchoolId}</span>\n                                    </li>\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Director Name</h6>\n                                        <span className=\"text-secondary\">{props.data.Data.Director}</span>\n                                    </li>\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Principal Name </h6>\n                                        <span className=\"text-secondary\">{props.data.Data.PrincipalName}</span>\n                                    </li>\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Vice-Principal Name </h6>\n                                        <span className=\"text-secondary\">{props.data.Data.VicePrincipalName}</span>\n                                    </li>\n\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"card mb-3\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-3\">\n                                            <h6 className=\"mb-0\">School Name</h6>\n                                        </div>\n                                        <div className=\"col-sm-9 text-secondary\">\n                                            {props.data.Data.Name.toUpperCase()}             </div>\n                                    </div>\n                                    <hr />\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-3\">\n                                            <h6 className=\"mb-0\">School Board</h6>\n                                        </div>\n                                        <div className=\"col-sm-9 text-secondary\">\n                                            {props.data.Data.SchoolBoard}                    </div>\n                                    </div>\n                                    <hr />\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-3\">\n                                            <h6 className=\"mb-0\">School Medium</h6>\n                                        </div>\n                                        <div className=\"col-sm-9 text-secondary\">\n                                            {props.data.Data.SchoolMedium}\n                                        </div>\n                                    </div>\n                                    <hr />\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-3\">\n                                            <h6 className=\"mb-0\">Address</h6>\n                                        </div>\n                                        <div className=\"col-sm-9 text-secondary\">\n                                            {props.data.Data.Address}\n                                        </div>\n                                    </div>\n                                    <hr />\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-3\">\n                                            <h6 className=\"mb-0\">Description</h6>\n                                        </div>\n                                        <div className=\"col-sm-9 text-secondary\">\n                                            {props.data.Data.Description}                    </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row gutters-sm\">\n                                <div className=\"col-sm-6 mb-3\">\n                                    <div className=\"card h-100\">\n                                        <div className=\"card-body\">\n                                            <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Email Details</h6>\n                                            <ul className=\"list-group list-group-flush\">\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                    <h6 className=\"mb-0\">Email I</h6>\n                                                    <span className=\"text-secondary\">{props.data.Data.Email[0]}</span>\n                                                </li>\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                    <h6 className=\"mb-0\">Email II</h6>\n                                                    <span className=\"text-secondary\">{props.data.Data.Email[1]}</span>\n                                                </li>\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                    <h6 className=\"mb-0\">Email III</h6>\n                                                    <span className=\"text-secondary\">{props.data.Data.Email[2]}</span>\n                                                </li>\n\n\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-6 mb-3\">\n                                    <div className=\"card h-100\">\n                                        <div className=\"card-body\">\n                                            <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Contact Details</h6>\n                                            <ul className=\"list-group list-group-flush\">\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                    <h6 className=\"mb-0\">Contact I</h6>\n                                                    <span className=\"text-secondary\">{props.data.Data.Contact[0]}</span>\n                                                </li>\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                    <h6 className=\"mb-0\">Contact II</h6>\n                                                    <span className=\"text-secondary\">{props.data.Data.Contact[1]}</span>\n                                                </li>\n                                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                    <h6 className=\"mb-0\">Contact III</h6>\n                                                    <span className=\"text-secondary\">{props.data.Data.Contact[2]}</span>\n                                                </li>\n\n\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n\n\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    )\n}\n\nexport default SchoolDetails\n","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/AdminEnroll.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/EnrollSchool.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/StudentFees.jsx",["315","316","317","318","319","320","321","322","323","324"],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ForTeacher/TeacherSchedule.jsx",["325","326","327","328","329"],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/TeacherInfo.jsx",["330","331","332","333","334","335","336","337"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, MenuItem, Select, FormControl } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Image, Button, Col, Form } from 'react-bootstrap'\nimport Axios from 'axios';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Cookies from 'js-cookie'\n\n\n\n// import Axios from 'axios';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 100, textAlign: 'center' }} spin />;\n\n\nconst useStyles = makeStyles((theme) => ({\n\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }\n\n}));\n\nfunction TeacherUpdate() {\n    const classes = useStyles();\n    const [rollNo, setRollNo] = useState('')\n    const [updateShow, setUpdateShow] = useState(false);\n    const [studentFullName, setStudentFullName] = useState('');\n    const [spin, setSpin] = useState(false);\n    const [spin1, setSpin1] = useState(false);\n    const [data, setData] = useState([]);\n    const [profileImg, setProfileImg] = useState('')\n    const [profileImg1, setProfileImg1] = useState('')\n    const [file, setFile] = useState('')\n    const [edit, setEdit] = useState(true);\n    const [open, setOpen] = useState(false);\n    const [imgShow, setImgShow] = useState(true)\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [dob, setDob] = useState('');\n    const [gender, setGender] = useState('');\n    const [fatherName, setFatherName] = useState('');\n    const [maritalStatus, setMaritalStatus] = useState('Not Married');\n    const [husbandName, setHusbandName] = useState('');\n    const [category, setCategory] = useState('General');\n    const [religion, setReligion] = useState('');\n    const [email, setEmail] = useState('');\n    const [aadhar, setAadhar] = useState('');\n    const [panNo, setPanNo] = useState('');\n    const [mobile, setMobile] = useState('');\n    const [specialSubject, setSpecialSubject] = useState('');\n    const [qualification, setQualification] = useState('');\n    const [experience, setExperience] = useState('');\n    const [designation, setDesignation] = useState('');\n    const [permanentAddress, setPermanentAddress] = useState('');\n    const [currentAddress, setCurrentAddress] = useState('');\n    const [pincode, setPincode] = useState('');\n    const [dateOfJoining, setDateOfJoining] = useState('');\n    const [husbandDisable, setHusbandDisable] = useState(true);\n\n\n\n    useEffect(() => {\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"teacherinfo\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setData(res.data)\n            setSpin(true)\n        })\n    }, [Axios])\n\n\n    function imageHandler(e) {\n\n        const imageFile = e.target.files[0];\n        console.log(imageFile);\n        const isLt2M = imageFile.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            NotificationManager.warning('Image must smaller than 2MB!');\n            setProfileImg1(\"\")\n\n        }\n\n\n        if (!imageFile.name.match(/\\.(jpg|jpeg|png|PNG)$/)) {\n            NotificationManager.warning(\"Please select valid image.\")\n            setProfileImg1(\"\")\n            setImgShow(true)\n\n            return false;\n        }\n        const reader = new FileReader();\n\n        if (imageFile && isLt2M) {\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setProfileImg1(reader.result)\n                    setImgShow(false)\n                    setFile(imageFile)\n                }\n            }\n            reader.readAsDataURL(e.target.files[0])\n\n        }\n\n\n    }\n\n\n\n    function submitHandle(e) {\n        e.preventDefault();\n\n        var mobPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[6789]\\d{9}$/;\n        if (!mobPattern.test(mobile)) {\n            alert(\"Enter Valid no.\")\n            return false\n        } else {\n\n\n            var d = window.confirm(\"Update Teacher  Details\")\n            if (d) {\n                setOpen(true)\n                const formdata = new FormData();\n                formdata.append('Name', firstName + \" \" + lastName)\n                formdata.append('Dob', dob)\n                formdata.append('FatherName', fatherName)\n                formdata.append('HusbandWifeName', husbandName)\n                formdata.append('EmailId', email)\n                formdata.append('MaritalStatus', maritalStatus)\n                formdata.append('Mobile', mobile);\n                formdata.append('HomeAddress', permanentAddress)\n                formdata.append('CurrentAddress', currentAddress)\n                formdata.append('Gender', gender)\n                formdata.append('MainSubject', specialSubject)\n                formdata.append('AadharId', aadhar)\n                formdata.append('PanId', panNo)\n                formdata.append('Pincode', pincode)\n                formdata.append('Qualification', qualification)\n                formdata.append('Designation', designation)\n                formdata.append('Category', category)\n                formdata.append('Religion', religion)\n                formdata.append('Experience', experience)\n                formdata.append('DateOfJoining', dateOfJoining)\n                formdata.append('file', file)\n                formdata.append('EnrollmentNo', rollNo)\n\n\n\n\n                Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"teacherupdate\"), formdata, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                    console.log(res);\n                    alert(res.data.msg)\n                    setOpen(false)\n                    setUpdateShow(false);\n                    setEdit(true)\n                })\n\n            } else {\n                return false\n            }\n\n\n\n\n        }\n\n\n\n\n\n\n\n    }\n\n\n\n    function onDelete(e) {\n\n        console.log(\"function Called\");\n        var d = window.confirm(`Are you sure you want to delete - ${e.Name}  --- ${e.RollNo} - from your school`);\n\n        if (d) {\n            setOpen(true)\n\n\n            Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"deleteteacher\"), { EnrollmentNo: e.RollNo }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                console.log(res.data);\n                alert(res.data.msg)\n                setOpen(false)\n            })\n        }\n\n\n\n    }\n\n    function onUpdate(e) {\n\n\n        setUpdateShow(true)\n        setSpin1(false)\n        setRollNo(e.RollNo)\n        setStudentFullName(e.Name)\n        console.log(e);\n        console.log(\"function Called\");\n\n\n\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"facultydetails\"), { EnrollmentNo: e.RollNo }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n\n            setFirstName(res.data.Name.Name.split(\" \")[0])\n            setLastName(res.data.Name.Name.split(\" \")[1])\n            setFatherName(res.data.Name.FatherName)\n            setHusbandName(res.data.Name.HusbandWife)\n            setAadhar(res.data.Name.AadharId);\n            setEmail(res.data.Name.EmailId)\n            setCategory(res.data.Name.Caste);\n            setCurrentAddress(res.data.Name.CurrentAddress);\n            setDob(res.data.Name.Dob);\n            setGender(res.data.Name.Gender);\n            setPermanentAddress(res.data.Name.HomeAddress);\n            setMobile(res.data.Name.Mobile);\n            setPincode(res.data.Name.Pincode);\n            setReligion(res.data.Name.Religion);\n            setDateOfJoining(res.data.Name.DateOfJoining);\n            setDesignation(res.data.Name.FacultyDesignation);\n            setMaritalStatus(res.data.Name.MaritalStatus);\n            setSpecialSubject(res.data.Name.SubjectSpecialization);\n            setPanNo(res.data.Name.PanId);\n            setQualification(res.data.Name.Qualification)\n            setExperience(res.data.Name.Experience)\n\n\n            let c = new Uint8Array(res.data.file.Body.data)\n            const STR = c.reduce((data, byte) => {\n                return data + String.fromCharCode(byte);\n            }, '');\n            let base64String = btoa(STR)\n            setProfileImg(base64String)\n\n\n            setSpin1(true)\n\n        })\n\n\n\n    }\n\n    function back() {\n        setEdit(true)\n        setUpdateShow(false)\n        return TeacherUpdate\n    }\n\n    if (updateShow) {\n        return (\n            <div>\n                <a className=\"btn btn-link\" style={{ marginLeft: '3%', marginTop: '-5%' }} onClick={back}>/ Previous Page</a><br />\n\n                {spin1 ? <div className=\"mobileHidden\"> <p style={{ fontSize: 20, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529' }}>Update Teacher Details</p><hr />\n\n                    <div style={{ color: 'green', fontWeight: 800 }}>\n                        <label> Name : {studentFullName}  , Roll No : {rollNo}\n                        </label>\n                        <hr />\n\n                    </div>\n                    <div style={{ textAlign: 'right' }}> <button className=\"btn btn-info\" onClick={() => {\n                        setEdit(!edit)\n                        setImgShow(true)\n                    }}> {edit ? \"Edit\" : \"Cancel\"} </button></div>\n                    <fieldset disabled={edit}>\n                        <form onSubmit={submitHandle} style={{ marginTop: '3%' }} id=\"mainForm\"  >\n\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>First Name</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={firstName} onChange={(e) => setFirstName(e.target.value)} placeholder=\"First Name\" />\n\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Last Name</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={lastName} onChange={(e) => setLastName(e.target.value)} placeholder=\"Last Name\" />\n\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label> Marital Status</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <select className=\"form-control\" onChange={(e) => {\n                                        setMaritalStatus(e.target.value)\n                                        if (e.target.value === \"Yes\") {\n                                            setHusbandDisable(false)\n                                        } else {\n                                            setHusbandDisable(true)\n                                            setHusbandName(\"\")\n                                        }\n                                    }\n\n\n                                    } required as=\"select\" defaultValue=\"Choose...\">\n                                        <option value={maritalStatus}>{maritalStatus}</option>\n                                        <option value=\"Yes\" >Yes</option>\n                                        <option value=\"No\">No</option>\n                                    </select>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridCity\">\n                                    <Form.Label>Father's Name</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input className=\"form-control\" pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" defaultValue={fatherName} onChange={(e) => setFatherName(e.target.value)} required type=\"text\" placeholder=\"Enter Father's Name (Full Name)\" />\n\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridCity\">\n                                    <Form.Label>Husband/Wife 's Name</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input disabled={husbandDisable} className=\"form-control\" pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" defaultValue={husbandName} onChange={(e) => setHusbandName(e.target.value)} required type=\"text\" placeholder=\"Enter Husband's Name (Full Name)\" />\n\n                                </Form.Group>\n\n\n\n                            </Form.Row>\n\n\n\n                            <Form.Row>\n\n                                <Form.Group as={Col} controlId=\"formGridCity\">\n                                    <Form.Label>Dob</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input className=\"form-control\" defaultValue={dob} onChange={(e) => setDob(e.target.value)} required type=\"date\" />\n\n                                </Form.Group>\n\n\n\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Gender</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <select className=\"form-control\" onChange={(e) => setGender(e.target.value)} required as=\"select\" defaultValue=\"Choose...\">\n                                        <option value={gender}>{gender}</option>\n                                        <option value=\"Male\" >Male</option>\n                                        <option value=\"Female\">Female</option>\n                                    </select>\n                                </Form.Group>\n\n\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Category</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <select className=\"form-control\" onChange={(e) => setCategory(e.target.value)} required as=\"select\" defaultValue=\"Choose...\">\n                                        <option value={category}>{category}</option>\n                                        <option value=\"General\" >General</option>\n                                        <option value=\"SC\">SC</option>\n                                        <option value=\"ST\">ST</option>\n                                        <option value=\"OBC\">OBC</option>\n                                    </select>\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Row>\n\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Religion</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={religion} onChange={(e) => setReligion(e.target.value)} type=\"text\" placeholder=\"Enter Religion\" />\n\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Qualifications</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={qualification} onChange={(e) => setQualification(e.target.value)} placeholder=\"Enter Qualifications\" />\n\n                                </Form.Group>\n\n                            </Form.Row>\n                            <Form.Row>\n\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Main Subject</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={specialSubject} onChange={(e) => setSpecialSubject(e.target.value)} type=\"text\" placeholder=\"Enter Main Subject\" />\n\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Experience (in years)</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={experience} onChange={(e) => setExperience(e.target.value)} type=\"number\" placeholder=\"Enter Here\" />\n\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Designation in school</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={designation} onChange={(e) => setDesignation(e.target.value)} placeholder=\"Enter Designation Here\" />\n\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Mobile No.</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={mobile} onChange={(e) => setMobile(e.target.value)} type=\"number\" placeholder=\"Enter Mobile No.\" />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Teacher Email</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"Enter Teacher email\" />\n\n                                </Form.Group>\n\n\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Aadhhar No.</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={aadhar} onChange={(e) => setAadhar(e.target.value)} type=\"number\" placeholder=\"Enter Teacher aadhar No.\" />\n\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Pan No.</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={panNo} onChange={(e) => setPanNo(e.target.value)} type=\"number\" placeholder=\"Enter Teacher pan No.\" />\n\n                                </Form.Group>\n\n\n                            </Form.Row>\n\n                            <Form.Row>\n\n\n\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Permanent Address</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={permanentAddress} onChange={(e) => setPermanentAddress(e.target.value)} type=\"text\" placeholder='Enter Permanent Address' />\n\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Current Address</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={currentAddress} onChange={(e) => setCurrentAddress(e.target.value)} type=\"text\" placeholder='Enter Current Address' />\n\n                                </Form.Group>\n\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Pincode </Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={pincode} onChange={(e) => setPincode(e.target.value)} type=\"text\" placeholder='Enter Pincode' />\n\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Date Of Joining </Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                    <input required className=\"form-control\" defaultValue={dateOfJoining} onChange={(e) => setDateOfJoining(e.target.value)} type=\"date\" />\n\n                                </Form.Group>\n\n                            </Form.Row>\n\n\n                            <label> Teacher Photo</label>\n                            {imgShow ? <Col xs={6} md={4}>\n\n                                <Image id=\"img\" style={{ height: '80mm', width: '70mm' }} src={`data:image/jpeg;base64,${profileImg}`} thumbnail />\n\n\n                            </Col> : <Col xs={6} md={4}>\n\n                                    <Image style={{ height: '80mm', width: '70mm' }} src={profileImg1} thumbnail />\n\n\n                                </Col>}\n\n\n\n\n                            <label> Update Teacher Photo    </label>  <input type=\"file\" required={!imgShow} onChange={imageHandler} />\n\n                            <br />\n\n\n                            <br />\n                            <NotificationContainer />\n\n                            <div style={{ textAlign: 'center' }}>\n\n                                <Button style={{ marginLeft: '3%' }} variant=\"success\" type=\"submit\">Update Teacher Details</Button>\n                            </div>\n                        </form>\n\n\n                    </fieldset>\n\n\n\n\n\n\n\n                </div> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div>}\n                <a className=\"btn btn-link\" style={{ marginLeft: '3%', marginBottom: \"-4%\" }} onClick={back}>/ Previous Page</a><br />\n\n\n\n                <Backdrop className={classes.backdrop} open={open} >\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            </div>\n\n\n\n        )\n    }\n\n\n\n    return (\n\n        <div>\n\n\n            <div className=\"mobileVisible\"><h4 style={{ color: 'red' }}> Please Change to Desktop Site or Login from Computer or Desktop </h4> </div>\n\n            <div className=\"mobileHidden\">\n                <label style={{ textAlign: \"center\", fontSize: 25 }} >Update Page</label>  <br />\n\n                {spin ? <table className=\"table\" style={{ textAlign: 'center', marginTop: '2%', border: '5px solid #001529' }}>\n                    <thead style={{ fontSize: 18, backgroundColor: '#001529', color: 'white' }}>\n                        <tr>\n                            <th>Enrollment No</th>\n                            <th>Name</th>\n\n                            <th>Update</th>\n                            <th>Delete</th>\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {data.map(data => (\n                            <tr>\n                                <td key={data.Name}>{data.Name}</td>\n                                <td key={data.RollNo}>{data.RollNo}</td>\n\n                                <td> <button onClick={(e) => {\n                                    e.preventDefault()\n                                    onUpdate(data)\n                                }} className=\"btn btn-primary text-center\" >Update</button> </td>\n                                <td> <button className=\"btn btn-danger text-center\" onClick={(e) => {\n                                    e.preventDefault();\n\n                                    onDelete(data)\n\n                                }}   >Delete</button> </td>\n                            </tr>\n\n                        ))}\n\n                    </tbody>\n                </table> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div>}\n                <br />\n\n\n\n\n\n\n\n                <Backdrop className={classes.backdrop} open={open} >\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n\n\n            </div></div>\n    )\n}\n\nexport default TeacherUpdate\n","/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/TaskList.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ExamTimeTable/taskList.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/EnrollCards.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SadminDashboard.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/EnrollCards/EnrollPrincipal.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/SectionAndBranchUpload.jsx",["338"],"import React from \"react\";\nimport TaskList from \"./TaskList\"\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport Axios from 'axios';\nimport { Spin } from 'antd';\nimport Cookies from 'js-cookie'\n\n\n\n\n\n\n\nclass SectionAndBranch extends React.Component {\n    state = {\n        taskList: [{ index: Math.random(), sectionName: \"\" }],\n        class: '',\n        branch: '',\n        branchShow: false,\n        schoolData: [],\n        open: true,\n        schoolName: ''\n    }\n\n    handleChange = (e) => {\n        if ([\"sectionName\"].includes(e.target.name)) {\n            let taskList = [...this.state.taskList]\n            taskList[e.target.dataset.id][e.target.name] = e.target.value;\n        } else {\n            this.setState({ [e.target.name]: e.target.value })\n        }\n    }\n    addNewRow = () => {\n        this.setState((prevState) => ({\n            taskList: [...prevState.taskList, { index: Math.random(), sectionName: \"\" }],\n        }));\n    }\n\n\n    deteteRow = (index) => {\n        this.setState({\n            taskList: this.state.taskList.filter((s, sindex) => index !== sindex),\n        });\n\n    }\n\n\n    componentDidMount = () => {\n        console.log(\"compo Called\");\n        this.setState({ open: false })\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"getschoolinfo\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            this.setState({ schoolData: res.data, open: true })\n        })\n\n    }\n\n\n\n\n    classClick = (e) => {\n        if (e > 10) {\n            this.setState({ branchShow: true })\n        } else {\n            this.setState({ branchShow: false })\n        }\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ open: false })\n        var ab = []\n        this.state.taskList.map(data => {\n            ab.push(data.sectionName)\n        })\n\n        var Data = {\n            SchoolId: this.state.schoolName.split(\" \")[0].split('(')[1].split(')')[0],\n            Class: this.state.class,\n            Branches: {\n                Branch: this.state.branch,\n                Section: ab\n            }\n\n        }\n        console.log(Data.SchoolId);\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"sectionupload\"), Data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            alert(res.data.msg)\n            this.setState({ open: true })\n\n\n\n        })\n\n\n    }\n    clickOnDelete(record) {\n        this.setState({\n            taskList: this.state.taskList.filter(r => r !== record)\n        });\n    }\n    render() {\n        let { taskList, open, schoolData, schoolName } = this.state\n        console.log(schoolName);\n        return (\n            <div className=\"content\" >\n                {/* <NotificationContainer/> */}\n                {open ? <form onSubmit={this.handleSubmit} onChange={this.handleChange} >\n                    <div className=\"row\">\n                        <div className=\"col-sm-3\"></div>\n                        <div className=\"col-sm-6\">\n                            <div className=\"card\" style={{ border: \"3px solid #001529\" }}>\n                                <div className=\"card-header text-center\" style={{ fontWeight: 'bolder', backgroundColor: '#001529', color: 'white' }}>Upload Section And Branch</div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-5\">\n                                            <select style={{ marginTop: '3%' }} onChange={(e) => this.setState({ schoolName: e.target.value })} required className=\"form-control\" >\n                                                <option value=\"\">Select School ... </option>\n                                                {schoolData.map(data => (\n                                                    <option key={data} value={data}>{data}</option>\n                                                ))}\n\n\n                                            </select> <br />\n                                        </div>\n\n                                        <div className=\"col-sm-4\">\n                                            <select style={{ marginTop: '3%' }} required name=\"class\" className=\"form-control\" onSelect={(e) => this.setState({ class: e.target.value })} onChange={(e) => this.classClick(e.target.value)}>\n                                                <option value=\"\">Select Class... </option>\n\n                                                <option value=\"1\">Class I </option>\n                                                <option value=\"2\">Class II </option>\n                                                <option value=\"3\">Class III </option>\n                                                <option value=\"4\">Class IV </option>\n                                                <option value=\"5\">Class V </option>\n                                                <option value=\"6\">Class VI </option>\n                                                <option value=\"7\">Class VII </option>\n                                                <option value=\"8\">Class VIII </option>\n                                                <option value=\"9\">Class XI </option>\n                                                <option value=\"10\">Class X </option>\n                                                <option value=\"11\">Class XI </option>\n                                                <option value=\"12\">Class XII </option>\n\n                                            </select> <br />\n                                        </div>\n\n\n                                        {this.state.branchShow ? <div className=\"col-sm-4\" >  <input style={{ marginTop: '3%', marginBottom: '3%' }} required name=\"branch\" className=\"form-control\" placeholder=\"Enter BranchName\" /></div> : null}\n                                    </div>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th className=\"required\" > Sections of Class {this.state.class}</th>\n                                                <th className=\"required\" > </th>\n\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <TaskList add={this.addNewRow} delete={this.clickOnDelete.bind(this)} taskList={taskList} />\n                                        </tbody>\n                                        <tfoot>\n                                            <tr><td colSpan=\"4\">\n                                                <PlusSquareOutlined onClick={this.addNewRow} className=\"btn btn-primary\" style={{ fontSize: 20, marginTop: 10 }} />\n                                            </td></tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                                <div className=\"card-footer text-center\"> <button type=\"submit\" style={{width:\"200px\"}} className=\"btn btn-primary text-center\">Submit</button></div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-1\"></div>\n\n\n                    </div>\n                </form> : <div style={{ textAlign: 'center', marginTop: '8%' }}><Spin /></div>}\n            </div>\n        )\n    }\n}\nexport default SectionAndBranch","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/TeacherDashboard.jsx",["339","340","341","342"],"import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../FrontPage/FrontPage.css';\nimport { Layout, Menu, Spin, Avatar } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  LogoutOutlined,\n  ScheduleOutlined,\n  SolutionOutlined,\n  FieldTimeOutlined,\n  UploadOutlined,\n  ProfileOutlined,\n  CalendarOutlined,\n  IdcardOutlined,\n  FormOutlined,\n  SnippetsOutlined\n\n\n} from '@ant-design/icons';\nimport QuizUpload from './QuizUpload/QuizUpload';\nimport QuizResult from './QuizUpload/QuizResult';\nimport AssignmentUpload from './AssignmentUpload/AssignmentUpload';\nimport StudyMaterial from './StudyMaterial/StudyMaterial';\nimport Attendence from './Attendence/Attendence';\nimport TeacherCalender from './TeacherCalender/TeacherCalender';\nimport AssignmentTeacher from './AssignmentShow/AssignmentTeacher';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport queryString from 'query-string'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport TimeTableT from './TimeTable/TimeTableT';\nimport StudentDetails from '../PrincipalDashboard/StudentDetails/StudentDetails';\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 40 }} spin />;\n\n\nconst { Header, Sider, Content, Footer } = Layout;\n\nclass TeacherDashboard extends React.Component {\n  state = {\n    collapsed: true,\n    quiz: false,\n    result: false,\n    assignment: false,\n    study: false,\n    attendenceShow: false,\n    calender: true,\n    ashow: false,\n    schoolName: '',\n    schoolLogo: '',\n    enrollMentid: '',\n    spin: false,\n    profileshow: false,\n    name: '',\n    role: '',\n    enrollNo: '',\n    email: '',\n    phone: '',\n    dob: '',\n    aadhar: '',\n    caste: '',\n    gender: '',\n    childId: '',\n    religion: '',\n    address: '',\n    pincode: '',\n    profileImg: '',\n    currentAddress: '',\n    guardianName: '',\n    guardianMobile: '',\n    class: '',\n    branch: '',\n    section: '',\n    parentsEmail: '',\n    fatherName: '',\n    motherName: '',\n    parentsOccupation: '',\n    changepassword: false,\n    currentPassword: '',\n    password: '',\n    spin1: false,\n    timeTable: false,\n    assignedClass: '',\n    assignedBranch: '',\n    assignedSection: '',\n    StudentShow: false,\n\n  };\n\n\n\n  componentDidMount = () => {\n    console.log(\"component TEacher called\");\n    Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"verification\"), { data: 'verification' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n      console.log(res.status);\n\n      if (res.data === true) {\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"everydetail\"), { hello: 'profile' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n          console.log(res.data);\n          let c = new Uint8Array(res.data.file.Body.data)\n          const STR = c.reduce((data, byte) => {\n            return data + String.fromCharCode(byte);\n          }, '');\n          let base64String = btoa(STR)\n          this.setState({\n            name: res.data.data.Name,\n            role: res.data.data.Role,\n            enrollNo: res.data.data.FacultyId,\n            email: res.data.data.EmailId,\n            phone: res.data.data.Mobile,\n            dob: res.data.data.Dob,\n            aadhar: res.data.data.AadharId,\n            caste: res.data.data.Caste,\n            gender: res.data.data.Gender,\n            childId: res.data.data.PanId,\n            religion: res.data.data.Religion,\n            address: res.data.data.HomeAddress,\n            pincode: res.data.data.Pincode,\n            profileImg: base64String,\n            currentAddress: res.data.data.CurrentAddress,\n            guardianName: res.data.data.Experience,\n            guardianMobile: res.data.data.SubjectSpecialization,\n            class: res.data.data.FacultyDesignation,\n            branch: res.data.data.DateOfJoining,\n            section: res.data.data.Qualification,\n            parentsEmail: res.data.data.ParentEmail,\n            fatherName: res.data.data.FatherName,\n            motherName: res.data.data.HusbandWife,\n            parentsOccupation: res.data.data.MaritalStatus,\n\n            assignedClass: res.data.AssignedClass,\n            assignedBranch: res.data.AssignedBranch,\n            assignedSection: res.data.AssignedSection\n          })\n\n        })\n\n\n\n\n\n\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"getSchooldata\"), { data: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n          console.log(res.data);\n          let c = new Uint8Array(res.data.file.Body.data)\n          const STR = c.reduce((data, byte) => {\n            return data + String.fromCharCode(byte);\n          }, '');\n          let base64String = btoa(STR)\n          this.setState({ schoolLogo: base64String, schoolName: res.data.Name, spin: true })\n\n        })\n\n        const username1 = queryString.parse(window.location.href.split('?')[1])\n        this.setState({ enrollMentid: username1.enrollMentid })\n      }\n    }).catch(err => {\n      if (err) {\n        this.props.history.push(\"/\")\n\n      }\n    })\n\n\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  quizShow = () => {\n    this.setState({\n      quiz: true,\n      result: false,\n      assignment: false,\n      study: false,\n      attendenceShow: false,\n      calender: false,\n      ashow: false,\n      profileshow: false,\n      timeTable: false,\n      StudentShow: false,\n\n\n\n\n\n    })\n  }\n\n  resultShow = () => {\n    this.setState({\n      quiz: false,\n      result: true,\n      assignment: false,\n      study: false,\n      attendenceShow: false,\n      calender: false,\n      ashow: false,\n      profileshow: false,\n      timeTable: false,\n      StudentShow: false,\n\n\n\n\n\n\n    })\n  }\n\n\n  assignmentShow = () => {\n    this.setState({\n      quiz: false,\n      result: false,\n      assignment: true,\n      study: false,\n      attendenceShow: false,\n      calender: false,\n      ashow: false,\n      profileshow: false,\n      timeTable: false,\n      StudentShow: false,\n\n\n\n\n\n\n    })\n  }\n  studyMaterial = () => {\n    this.setState({\n      quiz: false,\n      result: false,\n      assignment: false,\n      study: true,\n      attendenceShow: false,\n      calender: false,\n      ashow: false,\n      profileshow: false,\n      timeTable: false,\n      StudentShow: false,\n\n\n\n\n\n\n    })\n  }\n\n  attendence = () => {\n    this.setState({\n      quiz: false,\n      result: false,\n      assignment: false,\n      study: false,\n      attendenceShow: true,\n      calender: false,\n      ashow: false,\n      profileshow: false,\n      timeTable: false,\n      StudentShow: false,\n\n\n\n\n\n\n    })\n  }\n\n  calenderShow = () => {\n    this.setState({\n      quiz: false,\n      result: false,\n      assignment: false,\n      study: false,\n      attendenceShow: false,\n      calender: true,\n      ashow: false,\n      profileshow: false,\n      timeTable: false,\n      StudentShow: false,\n\n\n\n\n\n\n    })\n  }\n\n  assignment = () => {\n    this.setState({\n      quiz: false,\n      result: false,\n      assignment: false,\n      study: false,\n      attendenceShow: false,\n      calender: false,\n      ashow: true,\n      profileshow: false,\n      timeTable: false,\n      StudentShow: false,\n\n\n\n\n\n\n\n    })\n  }\n\n  Profile = () => {\n    this.setState({\n      quiz: false,\n      result: false,\n      assignment: false,\n      study: false,\n      attendenceShow: false,\n      calender: false,\n      ashow: false,\n\n      profileshow: true,\n      timeTable: false,\n      StudentShow: false,\n\n\n    })\n  }\n\n\n  timeTableShow = () => {\n    this.setState({\n      quiz: false,\n      result: false,\n      assignment: false,\n      study: false,\n      attendenceShow: false,\n      calender: false,\n      ashow: false,\n\n      profileshow: false,\n      timeTable: true,\n      StudentShow: false,\n\n\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    var d = window.confirm(\"Change Password\")\n\n    if (d) {\n      this.setState({ spin1: true })\n      var data = {\n        CurrentPassword: this.state.currentPassword,\n        NewPassword: this.state.password\n      }\n      Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"password\"), data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n        console.log(res.data);\n        alert(res.data.msg)\n        if (res.data.success === true) {\n          this.setState({ changepassword: false, spin1: false })\n        } else {\n          this.setState({ changepassword: true, spin1: false })\n        }\n\n      })\n    }\n\n  }\n  logout = () => {\n    var d = window.confirm(\"Leave Site\")\n    if (d) {\n      this.setState({ spin: false })\n      Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"logout\"), { hello: 'logout' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n        console.log(res.data);\n        Cookies.remove(\"Authorization\")\n        this.props.history.push('/')\n      })\n    } else return false\n\n\n  }\n\n  studentDetails = () => {\n    this.setState({\n      StudentShow: true,\n\n\n\n      quiz: false,\n      result: false,\n      assignment: false,\n      study: false,\n      attendenceShow: false,\n      calender: false,\n      ashow: false,\n\n      profileshow: false,\n      timeTable: false\n\n\n    })\n  }\n\n  render() {\n    const { name, role, enrollNo, email, phone, dob, aadhar, caste, gender, childId, religion, address, pincode, profileImg, changepassword, fatherName, motherName, guardianMobile, guardianName,\n      branch, section, currentAddress, parentsOccupation, parentsEmail, schoolName, assignedClass, assignedBranch, assignedSection } = this.state\n    return (\n      <div>\n        {this.state.spin ? <div>\n          <Layout>\n            <Sider breakpoint=\"xs\" className=\"sider\" trigger={null} collapsible collapsed={this.state.collapsed}>\n              <div className=\"logo\" style={{ color: \"white\", paddingBottom: 80 }} > {this.state.collapsed ? <img src={`data:image/jpeg;base64,${this.state.schoolLogo}`} style={{ marginTop: '20%', height: '50px', width: '50px' }} /> : <div style={{ textAlign: 'center', fontFamily: 'cursive' }}> {this.state.enrollMentid}   Teacher Dashboard </div>} </div>\n              <Menu className='nav' theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                <Menu.Item key=\"8\" onClick={this.Profile} icon={<UserOutlined />}>Profile </Menu.Item>\n                <Menu.Item key=\"1\" onClick={this.calenderShow} icon={<ScheduleOutlined />}>Schedule</Menu.Item>\n                <Menu.Item key=\"5\" onClick={this.attendence} icon={<CalendarOutlined />}>Attendence </Menu.Item>\n                <Menu.Item key=\"6\" onClick={this.quizShow} icon={<FormOutlined />}> Upload Quiz</Menu.Item>\n                <Menu.Item key=\"2\" onClick={this.resultShow} icon={<SnippetsOutlined />}> Quiz Result</Menu.Item>\n                <Menu.Item key=\"4\" onClick={this.studyMaterial} icon={<IdcardOutlined />}> Study Material</Menu.Item>\n                <Menu.Item key=\"3\" onClick={this.assignmentShow} icon={<UploadOutlined />}> Upload Assignment</Menu.Item>\n                <Menu.Item key=\"7\" onClick={this.assignment} icon={<ProfileOutlined />}>Assignment Result</Menu.Item>\n                <Menu.Item key=\"11\" onClick={this.studentDetails} icon={<SolutionOutlined />}>Student Details</Menu.Item>\n                <Menu.Item key=\"9\" onClick={this.timeTableShow} icon={<FieldTimeOutlined />}>Exam Time Table </Menu.Item>\n                <Menu.Item key=\"10\" onClick={this.logout} icon={<LogoutOutlined />}>Sign out </Menu.Item>\n              </Menu>\n\n\n            </Sider>\n            <Layout className=\"site-layout\">\n              <div className=\"mobileHidden\">    <Header className=\"site-layout-background\" style={{ padding: 0, color: '#373737', fontFamily: 'fantasy', fontSize: 20, textAlign: 'left' }}>\n                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                  className: 'trigger',\n                  onClick: this.toggle,\n                  style: { fontSize: 30, zIndex: 10 }\n                })}\n\n\n                <p style={{ padding: 0, color: '#373737', fontFamily: 'fantasy', fontSize: 25, marginTop: -50, textAlign: 'center' }} >  <img src={`data:image/jpeg;base64,${this.state.schoolLogo}`} style={{ height: '50px', width: '50px', marginRight: '1%' }} />{this.state.schoolName}  <span style={{ float: 'right', marginRight: '2%', cursor: 'pointer' }} onClick={this.Profile}> <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }} size=\"large\" src={`data:image/jpeg;base64,${profileImg}`} icon={<UserOutlined />} /></span></p>\n\n              </Header></div>\n              <div className=\"mobileVisible\" style={{ backgroundColor: 'white' }}>\n                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                  className: 'trigger',\n                  onClick: this.toggle,\n                  style: { fontSize: 25, zIndex: 10, marginTop: '4%' }\n                })} <p style={{ padding: 0, color: '#373737', fontFamily: 'fantasy', fontSize: 20, marginTop: -27, marginLeft: 60 }} >Teacher Dashboard </p>\n              </div>\n\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                  margin: '30px 16px',\n                  padding: 24,\n                  minHeight: 280,\n                }}\n              >\n\n                {this.state.quiz ? <QuizUpload /> : null}\n                {this.state.result ? <QuizResult /> : null}\n                {this.state.assignment ? <AssignmentUpload /> : null}\n                {this.state.study ? <StudyMaterial /> : null}\n                {this.state.attendenceShow ? <Attendence /> : null}\n                {this.state.calender ? <TeacherCalender /> : null}\n                {this.state.ashow ? <AssignmentTeacher /> : null}\n                {this.state.timeTable ? <TimeTableT /> : null}\n                {this.state.StudentShow ? <StudentDetails schoolName={schoolName} /> : null}\n\n\n\n                {this.state.profileshow ?\n\n\n\n\n\n\n\n\n                  <div>\n\n                    <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Profile Page</p><hr />\n\n                    <div className=\"container\" style={{ background: '-webkit-linear-gradient(left, #3931af, #00c6ff)' }}>\n                      <div className=\"main-body\">\n\n\n\n\n                        <div className=\"row gutters-sm\">\n                          <div className=\"col-md-4 mb-3\">\n                            <div className=\"card\">\n                              <div className=\"card-body\">\n                                <div className=\"d-flex flex-column align-items-center text-center\">\n                                  <img src={`data:image/jpeg;base64,${profileImg}`} alt=\"Admin\" className=\"rounded-circle\" width=\"150\" height=\"200\" />\n                                  <div className=\"mt-3\">\n                                    <h4>{name.toLocaleUpperCase()}</h4>\n                                    <p className=\"text-secondary mb-1\">{role}</p>\n                                    <p className=\"text-muted font-size-sm\">{enrollNo}</p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"card mt-3 \" >\n\n                              <ul className=\"list-group list-group-flush\">\n                                <br />\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\" >\n                                  <h6 className=\"d-flex align-items-center mb-3\"> <i className=\"material-icons text-info mr-2\">assignment</i>School Details</h6>\n\n                                </li>\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\" >\n                                  <h6 className=\"mb-0\">School Name</h6>\n                                  <span className=\"text-secondary\">{schoolName}</span>\n                                </li>\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                  <h6 className=\"mb-0\">Designation </h6>\n                                  <span className=\"text-secondary\">{this.state.class}</span>\n                                </li>\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                  <h6 className=\"mb-0\">Assigned Class   </h6>\n                                  <span className=\"text-secondary\">{assignedClass}</span>\n                                </li>\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                  <h6 className=\"mb-0\">Assigned Branch </h6>\n                                  <span className=\"text-secondary\">{assignedBranch}</span>\n                                </li>\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                  <h6 className=\"mb-0\">Assigned Section </h6>\n                                  <span className=\"text-secondary\">{assignedSection}</span>\n                                </li>\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"col-md-8\">\n                            <div className=\"card mb-3\">\n                              <div className=\"card-body\">\n                                <div className=\"row\">\n                                  <div className=\"col-sm-3\">\n                                    <h6 className=\"mb-0\">Full Name</h6>\n                                  </div>\n                                  <div className=\"col-sm-9 text-secondary\">\n                                    {name}             </div>\n                                </div>\n                                <hr />\n                                <div className=\"row\">\n                                  <div className=\"col-sm-3\">\n                                    <h6 className=\"mb-0\">Email</h6>\n                                  </div>\n                                  <div className=\"col-sm-9 text-secondary\">\n                                    {email}                    </div>\n                                </div>\n                                <hr />\n                                <div className=\"row\">\n                                  <div className=\"col-sm-3\">\n                                    <h6 className=\"mb-0\">Phone</h6>\n                                  </div>\n                                  <div className=\"col-sm-9 text-secondary\">\n                                    {phone}\n                                  </div>\n                                </div>\n                                <hr />\n                                <div className=\"row\">\n                                  <div className=\"col-sm-3\">\n                                    <h6 className=\"mb-0\">Dob</h6>\n                                  </div>\n                                  <div className=\"col-sm-9 text-secondary\">\n                                    {dob}\n                                  </div>\n                                </div>\n                                <hr />\n                                <div className=\"row\">\n                                  <div className=\"col-sm-3\">\n                                    <h6 className=\"mb-0\"> Address</h6>\n                                  </div>\n                                  <div className=\"col-sm-9 text-secondary\">\n                                    {address}                    </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"row gutters-sm\">\n                              <div className=\"col-sm-6 mb-3\">\n                                <div className=\"card h-100\">\n                                  <div className=\"card-body\">\n                                    <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Personal Details</h6>\n                                    <ul className=\"list-group list-group-flush\">\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Father Name</h6>\n                                        <span className=\"text-secondary\">{fatherName}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Marital Status</h6>\n                                        <span className=\"text-secondary\">{parentsOccupation}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Husband/Wife Name</h6>\n                                        <span className=\"text-secondary\">{motherName}</span>\n                                      </li>\n\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Gender</h6>\n                                        <span className=\"text-secondary\">{gender}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Caste</h6>\n                                        <span className=\"text-secondary\">{caste}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Religion</h6>\n                                        <span className=\"text-secondary\">{religion}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Qualification</h6>\n                                        <span className=\"text-secondary\">{section}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Date Of Joining</h6>\n                                        <span className=\"text-secondary\">{branch}</span>\n                                      </li>\n\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-sm-6 mb-3\">\n                                <div className=\"card h-100\">\n                                  <div className=\"card-body\">\n                                    <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Other Details</h6>\n                                    <ul className=\"list-group list-group-flush\">\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Experience </h6>\n                                        <span className=\"text-secondary\">{guardianName}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Main Subject </h6>\n                                        <span className=\"text-secondary\">{guardianMobile}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Aadhar Id</h6>\n                                        <span className=\"text-secondary\">{aadhar}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Pan No</h6>\n                                        <span className=\"text-secondary\">{childId}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Current Address</h6>\n                                        <span className=\"text-secondary\">{currentAddress}</span>\n                                      </li>\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Permanent Address</h6>\n                                        <span className=\"text-secondary\">{address}</span>\n                                      </li>\n\n                                      <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                        <h6 className=\"mb-0\">Pincode</h6>\n                                        <span className=\"text-secondary\">{pincode}</span>\n                                      </li>\n\n\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n\n\n\n\n\n\n\n                    <br />\n                    <button onClick={() => this.setState({ changepassword: !changepassword })} className=\"btn btn-primary\"> {changepassword ? \"Cancel\" : \"Change Password\"}</button>\n\n\n                    {changepassword ? <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                      <div className=\"card\" style={{ width: '40%', boxShadow: '0 1px 3px 0 rgba(0,0,0,.1), 0 1px 2px 0 rgba(0,0,0,.06)' }}>\n                        <form className=\"card-body\" onSubmit={this.handleSubmit}>\n                          <h5 className=\"d-flex align-items-center mb-3\">Change Password</h5>\n\n                          <label>Enter Current Password</label>\n                          <input placeholder=\"Enter Here\" className=\"form-control\" required onChange={(e) => this.setState({ currentPassword: e.target.value })} /><br />\n                          <label>Enter New Password </label>\n                          <input placeholder=\"Enter Here\" className=\"form-control\" required onChange={(e) => this.setState({ password: e.target.value })} /><br />\n                          {this.state.spin1 ? <div style={{ textAlign: 'center' }}><Spin /></div> : <div style={{ textAlign: 'center' }}><button className=\"btn btn-success\" type=\"submit\">Submit</button></div>}\n                        </form>\n                      </div></div> : null}\n                  </div> : null}\n\n\n\n\n              </Content>\n            </Layout>\n\n\n          </Layout>\n\n          <div>\n\n            <Footer>Student Footer</Footer>\n          </div>\n        </div> : <div style={{\n          textAlign: 'center', position: \"fixed\",\n          top: '50%',\n          left: '50%',\n\n          transform: \"translate(-50%, -50%)\"\n        }}> <Spin indicator={antIcon} /></div>}\n      </div>\n\n\n    );\n  }\n}\n\nexport default TeacherDashboard\n\n","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/TimeTable/TimeTableT.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/ForgotPassword/ForgotPassword.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/StudentDashboard.jsx",["343","344","345","346"],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/StudentCard.jsx",["347"],"import React, { useState } from 'react';\nimport { CardDeck, Card, Button } from 'react-bootstrap';\nimport EnrollStudent from './EnrollStudent';\nimport { LeftCircleFilled } from '@ant-design/icons'\nimport StudentUpdate from './StudentUpdate';\nimport StudentPromotion from './PromoteStudent';\nimport StudentFees from './StudentFees';\nimport ResultPage from './ResultPage';\nimport StudentDetails from '../../PrincipalDashboard/StudentDetails/StudentDetails';\nimport './style.css'\n\nfunction StudentCard() {\n\n  const [enrollshow, setEnrollShow] = useState(false);\n  const [updateShow, setUpdateShow] = useState(false);\n  const [promoteShow, setPromoteShow] = useState(false);\n  const [feeShow, setFeeShow] = useState(false);\n  const [resultShow, setResultShow] = useState(false);\n  const [studentDetails, setStudentDetails] = useState(false)\n\n  function cardShow() {\n    console.log(\"function Called\");\n    setEnrollShow(false)\n    setUpdateShow(false)\n    setPromoteShow(false)\n    setFeeShow(false)\n    setResultShow(false)\n    setStudentDetails(false)\n    return StudentCard\n\n  }\n\n  if (enrollshow) {\n    return (\n      <div>\n        <LeftCircleFilled onClick={cardShow} style={{ fontSize: 30, zIndex: 10 }} />\n        <EnrollStudent />\n\n      </div>\n\n    )\n  }\n  if (updateShow) {\n    return (\n      <div>\n        <LeftCircleFilled onClick={cardShow} style={{ fontSize: 30, zIndex: 10 }} />\n        <StudentUpdate />\n\n      </div>\n\n    )\n  }\n  if (promoteShow) {\n    return (\n      <div>\n        <LeftCircleFilled onClick={cardShow} style={{ fontSize: 30, zIndex: 10 }} />\n        <StudentPromotion />\n\n      </div>\n\n    )\n  }\n  if (feeShow) {\n    return (\n      <div>\n        <LeftCircleFilled onClick={cardShow} style={{ fontSize: 30, zIndex: 10 }} />\n        <StudentFees />\n\n      </div>\n\n    )\n  }\n\n  if (resultShow) {\n    return (\n      <div>\n        <LeftCircleFilled onClick={cardShow} style={{ fontSize: 30, zIndex: 10 }} />\n        <ResultPage />\n        <br />\n\n      </div>\n\n    )\n  }\n  if (studentDetails) {\n    return (\n      <div>\n        <LeftCircleFilled onClick={cardShow} style={{ fontSize: 30, zIndex: 10 }} />\n        <StudentDetails />\n        <br />\n\n      </div>\n\n    )\n  }\n\n\n  return (\n    <div style={{ width: '80%' }}>\n\n\n      {/**           <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n*/}\n\n      <div >\n        <CardDeck>\n          {/* firstCard */}\n          <Card className=\"card\">\n            <div className=\"inner\">\n              <Card.Img variant=\"top\" src=\"/enrolls.jpg\" />\n            </div>\n            <Card.Body>\n              <Card.Title style={{ textAlign: \"center\" }}>ENROLL NEW STUDENT</Card.Title>\n\n              <div style={{ textAlign: \"center\" }}>\n                <Button onClick={() => setEnrollShow(true)} >Enroll Now</Button>\n              </div>\n            </Card.Body>\n          </Card>\n          {/* second Card */}\n\n\n          <Card className=\"card\">\n            <div className=\"inner\">\n              <Card.Img variant=\"top\" src=\"/s.jpg\" />\n            </div>\n            <Card.Body>\n              <Card.Title style={{ textAlign: \"center\" }}>STUDENT UPDATE AND DELETE</Card.Title>\n              <div style={{ textAlign: \"center\" }}>\n                <Button onClick={() => setUpdateShow(true)} >Fetch Details</Button>\n              </div>\n            </Card.Body>\n          </Card>\n          {/* third Card */}\n          <Card className=\"card\">\n            <div className=\"inner\">\n              <Card.Img variant=\"top\" src=\"/details.jpeg\" />\n            </div>\n            <Card.Body>\n              <Card.Title style={{ textAlign: \"center\" }}>STUDENT DETAILS</Card.Title>\n              <div style={{ textAlign: \"center\" }}>\n                <Button onClick={() => setStudentDetails(true)} >Fetch Details</Button>\n              </div>\n            </Card.Body>\n          </Card>\n\n        </CardDeck>\n        <br />\n        <CardDeck>\n\n          {/* fourth Card */}\n\n          <Card className=\"card\">\n            <div className=\"inner\">\n              <Card.Img variant=\"top\" src=\"/Promotion.jpg\" />\n            </div>\n            <Card.Body>\n              <Card.Title style={{ textAlign: \"center\" }}>STUDENT PROMOION</Card.Title>\n              <div style={{ textAlign: \"center\" }}>\n                <Button onClick={() => setPromoteShow(true)} variant=\"dark\" >Fetch Details</Button>\n              </div>\n            </Card.Body>\n          </Card>\n          {/* fifth Card */}\n\n          <Card className=\"card\">\n            <div className=\"inner\">\n              <Card.Img variant=\"top\" src=\"/Fees.jpeg\" />\n            </div>\n            <Card.Body>\n              <Card.Title style={{ textAlign: \"center\" }}>FEES PORTAL</Card.Title>\n              <div style={{ textAlign: \"center\" }}>\n                <Button onClick={() => setFeeShow(true)} >Fetch Details</Button>\n              </div>\n            </Card.Body>\n          </Card>\n          {/* sixth Card */}\n\n          <Card className=\"card\">\n            <div className=\"inner\">\n              <Card.Img variant=\"top\" src=\"/Result.jpg\" />\n            </div>\n            <Card.Body>\n              <Card.Title style={{ textAlign: \"center\" }}>RESULT PAGE</Card.Title>\n              <div style={{ textAlign: \"center\" }}>\n                <Button onClick={() => setResultShow(true)} >Fetch Details</Button>\n              </div>\n            </Card.Body>\n          </Card>\n\n        </CardDeck>\n      </div>\n\n\n\n    </div>\n  )\n}\n\nexport default StudentCard\n\n\n\n\n{/**\n\n <CardDeck>\n      \n        <Card style={{ backgroundColor: '#8bc8cb' }}>\n          <Card.Body>\n            <Card.Title>Enroll New Student</Card.Title>\n\n          </Card.Body>\n          <Card.Footer>\n            <Button onClick={() => setEnrollShow(true)} >Enroll Now</Button>\n          </Card.Footer>\n        </Card>\n      \n\n\n        <Card style={{ backgroundColor: '#EA3E7A  ' }}>\n          <Card.Body>\n            <Card.Title>Student Update And Delete</Card.Title>\n\n          </Card.Body>\n          <Card.Footer>\n            <Button onClick={() => setUpdateShow(true)} >Fetch Details</Button>\n          </Card.Footer>\n        </Card>\n        <Card style={{ backgroundColor: '#EA3E7A  ' }}>\n          <Card.Body>\n            <Card.Title>Student Details</Card.Title>\n\n          </Card.Body>\n          <Card.Footer>\n            <Button onClick={() => setStudentDetails(true)} >Fetch Details</Button>\n          </Card.Footer>\n        </Card>\n       \n\n        <Card style={{ backgroundColor: '#e9da89' }}>\n          <Card.Body>\n            <Card.Title>Student Promotion</Card.Title>\n\n          </Card.Body>\n          <Card.Footer>\n            <Button onClick={() => setPromoteShow(true)} variant=\"dark\" >Fetch Details</Button>\n          </Card.Footer>\n        </Card>\n\n\n      </CardDeck>\n      <br />\n      <CardDeck>\n\n        <Card style={{ backgroundColor: '#e9da89' }}>\n          <Card.Body>\n            <Card.Title>Fees Portal</Card.Title>\n\n          </Card.Body>\n          <Card.Footer>\n            <Button onClick={() => setFeeShow(true)} >Fetch Details</Button>\n          </Card.Footer>\n        </Card>\n        <Card style={{ backgroundColor: '#8bc8cb' }}>\n          <Card.Body>\n            <Card.Title>Result Page</Card.Title>\n\n          </Card.Body>\n          <Card.Footer>\n            <Button onClick={() => setResultShow(true)} >Fetch Details</Button>\n          </Card.Footer>\n        </Card>\n\n      </CardDeck>\n\n\n\n\n*/}","/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/Calender/StudentSchedule.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/StudentDetails/StudentDetails.jsx",["348","349","350","351","352","353","354"],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/UpdateandDelete/UpdateSchool.jsx",["355","356"],"import React, { useState } from 'react';\nimport { Form, Col, Button, Image } from 'react-bootstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\n\n\nfunction UpdateSchool() {\n\n    const [profileImg, setProfileImg] = useState('');\n    const [profileImg1, setProfileImg1] = useState('');\n    const [file, setFile] = useState('')\n    const [schoolName, setSchoolName] = useState('');\n    const [schoolDescription, setSchoolDescription] = useState('');\n    const [schoolCode, setSchoolCode] = useState('');\n    const [schoolBoard, setSchoolBoard] = useState('');\n    const [schoolMedium, setSchoolMedium] = useState('');\n    const [email, setEmail] = useState('');\n    const [email1, setEmail1] = useState('');\n    const [email2, setEmail2] = useState('');\n    const [phone, setPhone] = useState('');\n    const [phone1, setPhone1] = useState('');\n    const [phone2, setPhone2] = useState('');\n    const [directorName, setDirectorName] = useState('');\n    const [principal, setPrincipal] = useState('');\n    const [vicep, setViceP] = useState('');\n    const [address, setAddress] = useState('');\n    const [timing, setTiming] = useState('');\n    const [go, setGo] = useState(false);\n    const [updateShow, setUpdateShow] = useState(false)\n    const [edit, setEdit] = useState(true);\n    const [imgShow, setImgShow] = useState(true);\n\n\n\n\n    function imageHandler(e) {\n\n        const imageFile = e.target.files[0];\n        console.log(imageFile);\n        const isLt2M = imageFile.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            NotificationManager.warning('Image must smaller than 2MB!');\n            setProfileImg1(\"\")\n            setGo(false)\n\n        }\n\n\n        if (!imageFile.name.match(/\\.(jpg|jpeg|png|PNG)$/)) {\n            NotificationManager.warning(\"Please select valid image.\")\n            setProfileImg1(\"\")\n            setImgShow(true)\n\n            setGo(false)\n            return false;\n        }\n        const reader = new FileReader();\n\n        if (imageFile && isLt2M) {\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setProfileImg1(reader.result)\n                    setImgShow(false)\n                    setFile(imageFile)\n                    setGo(true)\n                }\n            }\n            reader.readAsDataURL(e.target.files[0])\n\n        }\n\n\n    }\n\n\n    function submitHandle(e) {\n        e.preventDefault();\n\n\n        if (go) {\n\n            var mobPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;\n            if (!mobPattern.test(phone && phone1)) {\n                alert(\"Enter Valid no.\")\n                return false\n            } else {\n                var d = window.confirm(\" Enroll School\")\n\n\n                if (d === true) {\n                    const formdata = new FormData();\n\n                    formdata.append(\"SchoolName\", schoolName)\n                    formdata.append(\"SchoolDes\", schoolDescription)\n\n                    formdata.append(\"SchoolBoard\", schoolBoard)\n                    formdata.append(\"SchoolMedium\", schoolMedium)\n                    formdata.append(\"Email\", email)\n                    formdata.append(\"Email1\", email1)\n                    formdata.append(\"Email2\", email2)\n                    formdata.append(\"Phone\", phone)\n                    formdata.append(\"Phone1\", phone1)\n                    formdata.append(\"Phone2\", phone2)\n                    formdata.append(\"DirectorName\", directorName)\n                    formdata.append(\"Principal\", principal)\n                    formdata.append(\"ViceP\", vicep)\n                    formdata.append(\"Address\", address)\n                    formdata.append(\"timing\", timing)\n                    formdata.append(\"file\", file)\n                    Axios.post(process.env.REACT_APP_SUPERADMIN_API.concat(\"schoolenroll\"), formdata, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                        console.log(res);\n\n                    })\n                } else {\n                    return false\n                }\n\n            }\n\n\n\n\n\n\n        }\n\n\n\n\n    }\n\n\n    function fetchSchoolDetails(e) {\n        e.preventDefault()\n        console.log(schoolCode);\n\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"schooldetails\"), { SchoolId: schoolCode }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n        })\n    }\n\n\n    if (updateShow) {\n        return (\n            <div>\n\n\n                <h3>School Enrollment Form</h3>\n                <div style={{ textAlign: 'right' }}> <button className=\"btn btn-info\" onClick={() => setEdit(!edit)}> {edit ? \"Edit\" : \"Cancel\"} </button></div>\n                <fieldset disabled={edit}>\n\n                    <form onSubmit={submitHandle} style={{ marginTop: '3%' }}>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>School Name</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <input className=\"form-control\" required defaultValue={schoolName} onChange={(e) => setSchoolName(e.target.value)} pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" placeholder=\"Enter School Name\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                                <Form.Label>School Description</Form.Label>\n                                <input className=\"form-control\" defaultValue={schoolDescription} onChange={(e) => setSchoolDescription(e.target.value)} type=\"text\" placeholder=\"Enter Description\" />\n\n                            </Form.Group>\n                        </Form.Row>\n\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School Code</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <input className=\"form-control\" defaultValue={schoolCode} disabled />\n\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridState\">\n                                <Form.Label>Board</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <select className=\"form-control\" onChange={(e) => setSchoolBoard(e.target.value)} required as=\"select\" defaultValue=\"Choose...\">\n                                    <option value=''>{schoolBoard}</option>\n                                    <option value=\"CBSE\" >CBSE</option>\n                                    <option value=\"ICSE\">ICSE</option>\n                                    <option value=\"State Board\">State Board</option>\n                                </select>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridState\">\n                                <Form.Label>Medium</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <select className=\"form-control\" onChange={(e) => setSchoolMedium(e.target.value)} required as=\"select\" defaultValue=\"Choose...\">\n                                    <option value=\"\">{schoolMedium}</option>\n                                    <option value=\"English Medium\">English Medium</option>\n                                    <option value=\"Hindi Medium\">Hindi Medium</option>\n                                    <option value=\"Both Hindi And English Medium\">Both Hindi And English Medium</option>\n                                </select>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School Email Address</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <input className=\"form-control\" defaultValue={email} onChange={(e) => setEmail(e.target.value)} required type=\"email\" placeholder=\"Enter Email Address\" />\n\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School Alternate Email Address</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <input className=\"form-control\" defaultValue={email1} onChange={(e) => setEmail1(e.target.value)} required type=\"email\" placeholder=\"Enter Email Address\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School Email Address </Form.Label>\n                                <input className=\"form-control\" defaultValue={email2} onChange={(e) => setEmail2(e.target.value)} type=\"email\" placeholder=\"Enter Email Address\" />\n                            </Form.Group>\n\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School Phone No.</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <input className=\"form-control\" defaultValue={phone} onChange={(e) => setPhone(e.target.value)} required type=\"number\" placeholder=\"Enter Phone No.\" />\n\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School alternate Phone No. </Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <input className=\"form-control\" defaultValue={phone1} onChange={(e) => setPhone1(e.target.value)} required type=\"number\" placeholder=\"Enter Phone No.\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School alternate Phone No. </Form.Label>\n                                <input className=\"form-control\" defaultValue={phone2} onChange={(e) => setPhone2(e.target.value)} type=\"number\" placeholder=\"Enter Phone No.\" />\n                            </Form.Group>\n\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>Director's Name</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n\n                                <input className=\"form-control\" defaultValue={directorName} onChange={(e) => setDirectorName(e.target.value)} pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" required type=\"text\" placeholder=\"Enter Director's Name\" />\n\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>Principal Name </Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                                <input className=\"form-control\" defaultValue={principal} onChange={(e) => setPrincipal(e.target.value)} pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" required type=\"text\" placeholder=\"Enter Principal's Name\" />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>Vice-Principal Name </Form.Label>\n                                <input className=\"form-control\" defaultValue={vicep} onChange={(e) => setViceP(e.target.value)} pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" type=\"text\" placeholder=\"Enter Vice-Principal's Name\" />\n                            </Form.Group>\n\n                        </Form.Row>\n\n\n\n                        <Form.Group controlId=\"formGridAddress1\">\n                            <Form.Label>Address</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                            <input className=\"form-control\" defaultValue={address} onChange={(e) => setAddress(e.target.value)} required type=\"text\" placeholder=\"Full Address\" />\n                        </Form.Group>\n\n\n\n                        <Col xs={6} md={4}>\n                            <Form.Group as={Col} controlId=\"formGridCity\">\n                                <Form.Label>School Timing (from - to  )</Form.Label>\n                                <input className=\"form-control\" defaultValue={timing} onChange={(e) => setTiming(e.target.value)} type=\"text\" placeholder=\"Full Timing\" />\n                            </Form.Group>\n                        </Col>\n\n\n\n\n                        <label> School Logo</label>\n                        {imgShow ? <Col xs={6} md={4}>\n\n                            <Image id=\"img\" style={{ height: '80mm', width: '70mm' }} src={`data:image/jpeg;base64,${profileImg}`} thumbnail />\n\n\n                        </Col> : <Col xs={6} md={4}>\n\n                                <Image style={{ height: '80mm', width: '70mm' }} src={profileImg1} thumbnail />\n\n\n                            </Col>}\n\n\n\n\n                        <label> Update School Logo    </label>  <input type=\"file\" onChange={imageHandler} />\n\n                        <br />\n                        <Col xs={6} md={4}><Form.Label > School Logo </Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                            <Image style={{ maxWidth: '20%' }} src={profileImg} thumbnail placeholder=\"Logo\" /><br />\n                            <input required type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={imageHandler} />\n                        </Col>\n                        <NotificationContainer />\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n</Button>\n                    </form></fieldset></div>\n\n        )\n    }\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div className=\"card\" style={{ width: '40%' }}>\n\n                <label className='card-header' style={{ textAlign: 'center' }}>Find School Details</label>\n\n\n                <form className=\"card-body\" style={{ textAlign: 'center' }} onClick={fetchSchoolDetails}>\n                    <input required className=\"form-control\" placeholder=\"Enter School Code\" onChange={(e) => setSchoolCode(e.target.value.toUpperCase())} /> <br />\n                    <button type=\"submit\" style={{ width: '30%' }} className=\"btn btn-info\">Find </button>\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateSchool\n\n\n\n\n","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/EnrollTeacher.jsx",["357","358","359","360","361","362","363","364"],"/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/StudyMaterial/StudyMaterial.jsx",["365"],"import React from \"react\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Axios from 'axios';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport Cookies from 'js-cookie'\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 100, textAlign: 'center' }} spin />;\n\nclass StudyMaterial extends React.Component {\n    state = {\n        class: '',\n        branch: '',\n        branchShow: false,\n        classData: [],\n        branchName: [],\n        open: false,\n        studentSection: '',\n        file: '',\n        subject: '',\n        go: false,\n        topicName: ''\n\n\n    }\n\n    imageHandler = (e) => {\n\n        const imageFile = e.target.files[0];\n        console.log(imageFile);\n        const isLt2M = imageFile.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            NotificationManager.warning('Image must smaller than 2MB!');\n            this.setState({ file: '' })\n            return false\n        }\n\n\n        if (!imageFile.name.match(/\\.(pdf|PDF)$/)) {\n            NotificationManager.warning(\"Please select valid pdf file.\")\n            this.setState({ file: '' })\n\n            return false;\n        }\n\n        if (imageFile && isLt2M) {\n            console.log(\"hello\");\n            this.setState({ file: imageFile, go: true })\n        }\n\n\n    }\n\n\n    handleChange = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value })\n\n    }\n\n\n\n\n\n    componentDidMount = () => {\n        console.log(\"compo Called\");\n\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"section\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            this.setState({ classData: res.data, open: true })\n        })\n\n    }\n\n\n\n    classClick = (e) => {\n        console.log(e);\n        this.setState({ class: e })\n        const { classData, branchName } = this.state\n        console.log(classData);\n\n        branchName.splice(0)\n        console.log(e);\n        if (e > 10) {\n            var branchFind = classData.find(o => o.Class === e)\n            console.log(branchFind);\n            if (branchFind === undefined) {\n                alert(\"No branch found\")\n                this.setState({ branchShow: false })\n\n                return false\n            } else {\n\n                branchFind.Branches.map(data => {\n                    console.log(data.Branch); branchName.push(data.Branch)\n                })\n                console.log(branchName);\n                this.setState({ branchShow: true })\n            }\n        } else {\n            this.setState({ branchShow: false })\n\n        }\n    }\n\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { branch, studentSection, subject, file, topicName } = this.state\n\n\n        if (this.state.go) {\n            var d = window.confirm(`Upload Study Material --${subject}`)\n            if (d) {\n                console.log(this.state.class);\n                this.setState({ open: false })\n                console.log(branch);\n                console.log(studentSection);\n                console.log(file);\n                console.log(subject);\n                const formdata = new FormData()\n                formdata.append(\"Class\", this.state.class)\n                formdata.append(\"Branch\", branch)\n                formdata.append(\"Subject\", subject)\n                formdata.append(\"file\", file)\n                formdata.append(\"Name\", topicName)\n\n\n                Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"studymaterialupload\"), formdata, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                    console.log(res);\n                    alert(res.data.msg)\n                    this.setState({ open: true, branch: '', class: '', assignmentTitle: '' })\n                    document.getElementById(\"formreset\").reset()\n\n                })\n\n            } else return false\n\n\n        } else return false\n\n\n\n\n    }\n\n    render() {\n        let { branchName, open } = this.state\n        return (\n            <div className=\"content\">\n                <div style={{ color: 'red' }}> <NotificationContainer /></div>\n                {open ? <form onSubmit={this.handleSubmit} onChange={this.handleChange} id=\"formreset\" >\n                    <div className=\"row\" style={{ marginTop: 20 }}>\n                        <div className=\"col-sm-1 \"></div>\n                        <div className=\"col-sm-10\">\n                            <div className=\"card\" style={{ border: '4px solid #001529' }} >\n                                <div className=\"card-header text-center\" style={{ fontWeight: 'bolder', backgroundColor: '#001529', color: 'white' }}><label> Upload Study Material </label></div>\n                                <div className=\"card-body\" >\n                                    <div className=\"row\" >\n\n                                        <div className=\"col-sm-5\">\n                                            <label> Class  </label>\n\n                                            <select required name=\"class\" className=\"form-control\" onChange={(e) => this.classClick(e.target.value)}>\n                                                <option value=\"\">Select Class... </option>\n\n                                                <option value=\"1\">Class I </option>\n                                                <option value=\"2\">Class II </option>\n                                                <option value=\"3\">Class III </option>\n                                                <option value=\"4\">Class IV </option>\n                                                <option value=\"5\">Class V </option>\n                                                <option value=\"6\">Class VI </option>\n                                                <option value=\"7\">Class VII </option>\n                                                <option value=\"8\">Class VIII </option>\n                                                <option value=\"9\">Class IX </option>\n                                                <option value=\"10\">Class X </option>\n                                                <option value=\"11\">Class XI </option>\n                                                <option value=\"12\">Class XII </option>\n\n                                            </select> <br />\n                                        </div>\n\n\n                                        {this.state.branchShow ? <div className=\"col-sm-5\" >\n                                            <label> Branch  </label>\n\n                                            <select required name=\"branch\" className=\"form-control\" >\n                                                <option value=\"\">Select Branch ... </option>\n                                                {branchName.map(data => (\n                                                    <option key={data} value={data}>{data}</option>\n                                                ))}\n\n\n                                            </select></div> : null}\n\n\n                                    </div>\n                                    <div className=\"row\">\n\n                                        <div className=\"col-sm-4\">\n                                            <label> Subject  </label>\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Enter  Here\" name=\"subject\" required />\n\n                                            <br />\n                                        </div>\n\n                                        <div className=\"col-sm-4\">\n                                            <label> Topic Name  </label>\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Enter topic Here\" name=\"topicName\" required />\n\n\n                                        </div>\n\n\n                                        <div className=\"col-sm-4\" >\n                                            <label>Upload file  </label>\n\n                                            <input className=\"form-control\" type=\"file\" onChange={this.imageHandler} required />\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                                <div className=\"card-footer text-center\">\n                                    <button type=\"submit\" style={{width:\"200px\"}} className=\"btn btn-primary text-center\">Submit</button></div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-1\"></div>\n\n\n                    </div>\n                </form> : <div style={{ textAlign: 'center', marginTop: '8%' }}><Spin indicator={antIcon} /></div>\n                }\n            </div>\n        )\n    }\n}\nexport default StudyMaterial","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ExamTimeTable/ExamTimeTable.jsx",["366","367"],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/PromoteStudent.jsx",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/SectionAndBranch/DeleteSection.jsx",["387"],"/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/QuizUpload/QuizTaskList.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/StudentUpdate.jsx",["388","389","390","391","392","393","394","395","396","397"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, MenuItem, Select, FormControl } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Image, Button, Col, Form } from 'react-bootstrap'\nimport Axios from 'axios';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Cookies from 'js-cookie'\n\n\n\n// import Axios from 'axios';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 100, textAlign: 'center' }} spin />;\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  }\n\n}));\n\nfunction StudentUpdate() {\n  const classes = useStyles();\n  const [rollNo, setRollNo] = useState('')\n  const [studentClass, setStudentClass] = useState('');\n  const [studentSection, setStudentSection] = useState('');\n  const [studentBranch, setStudentBranch] = useState('');\n  const [updateShow, setUpdateShow] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [dob, setDob] = useState('');\n  const [gender, setGender] = useState('');\n  const [fatherName, setFatherName] = useState('');\n  const [motherName, setMotherName] = useState('');\n  const [section, setSection] = useState('');\n  const [studentEmail, setStudentEmail] = useState('');\n  const [parentEmail, setParentEmail] = useState('');\n  const [aadhar, setAadhar] = useState('');\n  const [childiId, setChildId] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [occupation, setOccupation] = useState('');\n  const [category, setCategory] = useState('');\n  const [religion, setReligion] = useState('');\n  const [guardian, setGuardian] = useState('');\n  const [permanentAddress, setPermanentAddress] = useState('');\n  const [currentAddress, setCurrentAddress] = useState('');\n  const [pincode, setPincode] = useState('');\n  const [guardianMobile, setGuardianMobile] = useState('');\n  const [previousSchool, setPreviousSchool] = useState('');\n  const [previousPercent, setPreviousPercent] = useState('');\n  const [studentFullName, setStudentFullName] = useState('');\n  const [classData, setClassData] = useState([]);\n  const [spin, setSpin] = useState(false);\n  const [spin1, setSpin1] = useState(false);\n  const [spin2, setSpin2] = useState(false);\n  const [spin3, setSpin3] = useState(false);\n  const [sectionName, setSectionName] = useState([]);\n  const [branchName, setBranchName] = useState([]);\n  const [branchDisable, setbranchDisable] = useState(true);\n  const [data, setData] = useState([]);\n  const [branch, setBranch] = useState('');\n  const [profileImg, setProfileImg] = useState('')\n  const [profileImg1, setProfileImg1] = useState('')\n  const [file, setFile] = useState('')\n  const [go, setGo] = useState(false);\n  const [edit, setEdit] = useState(true);\n  const [sClass, setSclass] = useState('')\n  const [open, setOpen] = useState(false);\n  const [imgShow, setImgShow] = useState(true)\n\n\n\n  useEffect(() => {\n    Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"section\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n      console.log(res.data);\n      setClassData(res.data)\n      setSpin(true)\n    })\n  }, [])\n\n\n  function imageHandler(e) {\n\n    const imageFile = e.target.files[0];\n    console.log(imageFile);\n    const isLt2M = imageFile.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      NotificationManager.warning('Image must smaller than 2MB!');\n      setProfileImg1(\"\")\n      setGo(false)\n\n    }\n\n\n    if (!imageFile.name.match(/\\.(jpg|jpeg|png|PNG)$/)) {\n      NotificationManager.warning(\"Please select valid image.\")\n      setProfileImg1(\"\")\n      setImgShow(true)\n\n      setGo(false)\n      return false;\n    }\n    const reader = new FileReader();\n\n    if (imageFile && isLt2M) {\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setProfileImg1(reader.result)\n          setImgShow(false)\n          setFile(imageFile)\n          setGo(true)\n        }\n      }\n      reader.readAsDataURL(e.target.files[0])\n\n    }\n\n\n  }\n\n  function classClick(e) {\n    setStudentBranch(\"\")\n    setSpin2(false)\n    branchName.splice(0)\n    setStudentClass(e)\n    if (e > 10) {\n\n      setbranchDisable(false)\n      var classFind = classData.find(o => o.Class == e)\n      if (!classFind) {\n        alert(\"No Branch \")\n        return false\n      } else {\n        classFind.Branches.map((data) => {\n          branchName.push(data.Branch);\n        })\n      }\n\n    } else {\n      setbranchDisable(true)\n\n      var classFind1 = classData.find(o => o.Class == e)\n      if (!classFind1) {\n        alert(\"No Section\")\n        return false\n      } else {\n        classFind1.Branches.map((data) => {\n          setSectionName(data.Section)\n        })\n\n      }\n    }\n\n  }\n  function branchClick(e) {\n\n    var branchName = classData.find(o => o.Class == studentClass);\n    var branchFind = branchName.Branches.find(o => o.Branch == e);\n    if (!branchFind) {\n      alert(\"No Section\")\n      return false\n    } else {\n      setSectionName(branchFind.Section)\n\n    }\n\n\n\n\n  }\n\n\n  function fetchClassDetails(e) {\n    setSpin2(true)\n    setSpin3(false)\n\n    e.preventDefault();\n    var DATA = {\n      Class: studentClass,\n      Branch: studentBranch,\n      Section: studentSection\n    }\n\n\n    Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"studentdetails\"), DATA, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n      console.log(res.data);\n      setData(res.data)\n      setSpin3(true)\n    })\n  }\n\n\n  function submitHandle(e) {\n    e.preventDefault();\n\n    var mobPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[6789]\\d{9}$/;\n    if (!mobPattern.test(mobile && guardianMobile)) {\n      alert(\"Enter Valid no.\")\n      return false\n    } else {\n\n      if (mobile === guardianMobile) {\n        alert(\" Mobile No. cannot be same\")\n        return false\n      } else {\n\n        var d = window.confirm(\"Update Student Details\")\n        if (d) {\n          setOpen(true)\n          const formdata = new FormData();\n          formdata.append('Name', firstName + \" \" + lastName)\n          formdata.append('Dob', dob)\n          formdata.append('FatherName', fatherName)\n          formdata.append('MotherName', motherName)\n          formdata.append('StudentEmail', studentEmail)\n          formdata.append('ParentsEmail', parentEmail)\n          formdata.append('Mobile', mobile);\n          formdata.append('HomeAddress', permanentAddress)\n          formdata.append('CurrentAddress', currentAddress)\n          formdata.append('Gender', gender)\n          formdata.append('Class', sClass)\n          formdata.append('Branch', branch)\n          formdata.append('Section', section)\n          formdata.append('PreviousSchool', previousSchool)\n          formdata.append('AadharId', aadhar)\n          formdata.append('ChildId', childiId)\n          formdata.append('Pincode', pincode)\n          formdata.append('GuardianName', guardian)\n          formdata.append('GuardianMobile', guardianMobile)\n          formdata.append('Category', category)\n          formdata.append('Religion', religion)\n          formdata.append('LastYearPercentage', previousPercent)\n          formdata.append('ParentsOccupation', occupation)\n          formdata.append('RollNo', rollNo)\n          formdata.append('file', file)\n\n\n          Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"studentupdate\"), formdata, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res);\n            alert(res.data.msg)\n            setOpen(false)\n            setUpdateShow(false);\n            setEdit(true)\n          })\n\n        }\n      }\n\n\n\n    }\n\n\n\n\n\n\n\n  }\n\n\n\n  function onDelete(e) {\n    console.log(studentBranch);\n\n    console.log(\"function Called\");\n    var d = window.confirm(`Are you sure you want to delete - ${e.Name}  --- ${e.RollNo} - from your school`);\n\n    if (d) {\n      setOpen(true)\n      var data = {\n        Class: studentClass,\n        Branch: studentBranch,\n        Section: studentSection,\n        RollNo: e.RollNo\n      }\n\n      Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"deletestudent\"), data).then((res) => {\n        console.log(res.data);\n        alert(res.data.msg)\n        setOpen(false)\n      })\n    }\n\n\n\n  }\n\n  function onUpdate(e) {\n\n\n    setUpdateShow(true)\n    setSpin1(false)\n    setRollNo(e.RollNo)\n    setStudentFullName(e.Name)\n    console.log(e);\n    console.log(\"function Called\");\n    var data = {\n      RollNo: e.RollNo,\n      Branch: studentBranch,\n      Section: studentSection,\n\n    }\n\n\n    Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"studentdetails1\"), data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n      console.log(res.data);\n\n      setFirstName(res.data.Name.Name.split(\" \")[0])\n      setLastName(res.data.Name.Name.split(\" \")[1])\n      setFatherName(res.data.Name.FatherName)\n      setMotherName(res.data.Name.MotherName)\n      setStudentEmail(res.data.Name.StudentEmail);\n      setAadhar(res.data.Name.AadharId);\n      setBranch(res.data.Name.Branch);\n      setCategory(res.data.Name.Category);\n      setChildId(res.data.Name.ChildId);\n      setSclass(res.data.Name.Class);\n      setCurrentAddress(res.data.Name.CurrentAddress);\n      setDob(res.data.Name.Dob);\n      setGender(res.data.Name.Gender);\n      setGuardianMobile(res.data.Name.GuardianMobile);\n      setGuardian(res.data.Name.GuardianName);\n      setPermanentAddress(res.data.Name.HomeAddress);\n      setPreviousPercent(res.data.Name.LastYearPercentage)\n      setMobile(res.data.Name.Mobile);\n      setParentEmail(res.data.Name.ParentEmail);\n      setOccupation(res.data.Name.ParentsOccupation);\n      setPincode(res.data.Name.Pincode);\n      setPreviousSchool(res.data.Name.PreviousSchool);\n      setReligion(res.data.Name.Religion);\n      setSection(res.data.Name.Section)\n\n      let c = new Uint8Array(res.data.file.Body.data)\n      const STR = c.reduce((data, byte) => {\n        return data + String.fromCharCode(byte);\n      }, '');\n      let base64String = btoa(STR)\n      setProfileImg(base64String)\n\n      if (res.data.Name.Class > 10) {\n        setbranchDisable(true)\n      } else {\n        setbranchDisable(false)\n      }\n      setSpin1(true)\n\n    })\n\n\n\n  }\n\n  function back() {\n    setEdit(true)\n    setUpdateShow(false)\n    return StudentUpdate\n  }\n\n  if (updateShow) {\n    return (\n      <div>\n        <a className=\"btn btn-link\" style={{ marginLeft: '3%', marginTop: '-5%' }} onClick={back}>/ Previous Page</a><br />\n\n        {spin1 ? <div className=\"mobileHidden\"> <p style={{ fontSize: 20, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529' }}>Update Student Details</p><hr />\n\n          <div style={{ color: 'green', fontWeight: 800 }}>\n            <label> Name : {studentFullName}  , Roll No : {rollNo}\n            </label>\n            <hr />\n\n          </div>\n          <div style={{ textAlign: 'right' }}> <button className=\"btn btn-info\" onClick={() => setEdit(!edit)}> {edit ? \"Edit\" : \"Cancel\"} </button></div>\n          <fieldset disabled={edit}>\n            <form aria-readonly=\"true\" onSubmit={submitHandle} style={{ marginTop: '3%' }} id=\"mainForm\"  >\n\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>First Name</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" defaultValue={firstName} onChange={(e) => setFirstName(e.target.value)} placeholder=\"First Name\" />\n\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Last Name</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" defaultValue={lastName} onChange={(e) => setLastName(e.target.value)} placeholder=\"Last Name\" />\n\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                  <Form.Label>Father's Name</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input className=\"form-control\" pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" defaultValue={fatherName} onChange={(e) => setFatherName(e.target.value)} required type=\"text\" placeholder=\"Enter Father's Name (Full Name)\" />\n\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                  <Form.Label>Mother's Name</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input className=\"form-control\" pattern=\"[a-zA-Z][a-zA-Z ]{2,}\" defaultValue={motherName} onChange={(e) => setMotherName(e.target.value)} required type=\"text\" placeholder=\"Enter Mother's Name (Full Name)\" />\n\n                </Form.Group>\n\n              </Form.Row>\n\n\n\n              <Form.Row>\n\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                  <Form.Label>Dob</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input className=\"form-control\" defaultValue={dob} onChange={(e) => setDob(e.target.value)} required type=\"date\" />\n\n                </Form.Group>\n\n\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Gender</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <select className=\"form-control\" onChange={(e) => setGender(e.target.value)} required as=\"select\" >\n                    <option value={gender} disabled>{gender}</option>\n                    <option value=\"Male\" >Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Class</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <select className=\"form-control\" onChange={(e) => {\n                    setSclass(e.target.value)\n                    classClick(e.target.value)\n                  }} required as=\"select\" defaultValue={sClass}>\n                    <option value={sClass} disabled>Class {sClass}</option>\n                    <option value={\"1\"}>Class I</option>\n                    <option value={\"2\"}>Class II</option>\n                    <option value={\"3\"}>Class III</option>\n                    <option value={\"4\"}>Class IV</option>\n                    <option value={\"5\"}>Class V</option>\n                    <option value={\"6\"}>Class VI</option>\n                    <option value={\"7\"}>Class VII</option>\n                    <option value={\"8\"}>Class VIII</option>\n                    <option value={\"9\"}>Class IX</option>\n                    <option value={\"10\"}>Class X</option>\n                    <option value={\"11\"}>Class XI</option>\n                    <option value={\"12\"}>Class XII</option>\n                  </select>\n                </Form.Group>\n                {branchDisable ? <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Branch</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <select className=\"form-control\" onChange={(e) => {\n                    setBranch(e.target.value)\n                    branchClick(e.target.value)\n                  }} required as=\"select\" >\n                    <option value={branch} disabled>{branch}</option>\n\n                    {branchName.map(data => (\n                      <option key={data} value={data}>{data}</option>\n                    ))}\n                  </select>\n                </Form.Group> : null}\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Section</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <select className=\"form-control\" onChange={(e) => setSection(e.target.value)} required as=\"select\" >\n                    <option value={section} disabled>{section}</option>\n                    {sectionName.map(data => (\n                      <option key={data} value={data}>{data}</option>\n                    ))}\n                  </select>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Religion</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setReligion(e.target.value)} defaultValue={religion} type=\"text\" placeholder=\"Enter Religion\" />\n\n                </Form.Group>\n\n\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Category</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <select className=\"form-control\" onChange={(e) => setCategory(e.target.value)} required as=\"select\" defaultValue='Choose'>\n                    <option disabled>{category}</option>\n                    <option value=\"General\" >General</option>\n                    <option value=\"SC\">SC</option>\n                    <option value=\"ST\">ST</option>\n                    <option value=\"OBC\">OBC</option>\n                  </select>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Mobile No.</Form.Label><Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setMobile(e.target.value)} type=\"number\" placeholder=\"Enter Mobile No.\" defaultValue={mobile} />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Student Email</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setStudentEmail(e.target.value)} type=\"email\" placeholder=\"Enter student email\" defaultValue={studentEmail} />\n\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Parent's Email</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setParentEmail(e.target.value)} type=\"email\" placeholder=\"Enter parent's email\" defaultValue={parentEmail} />\n\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Aadhar No.</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setAadhar(e.target.value)} type=\"number\" placeholder=\"Enter student aadhar No.\" defaultValue={aadhar} />\n\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Child Id</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setChildId(e.target.value)} type=\"number\" placeholder=\"Enter child id No.\" defaultValue={childiId} />\n\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Father's Occupation</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setOccupation(e.target.value)} type=\"text\" placeholder=\"Enter Father's Occupation\" defaultValue={occupation} />\n\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Gaurdian Name</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setGuardian(e.target.value)} type=\"text\" placeholder=\"Enter Guardian's Name\" defaultValue={guardian} />\n\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Gaurdian Mobile No.</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setGuardianMobile(e.target.value)} type=\"number\" placeholder=\"Enter Mobile No.\" defaultValue={guardianMobile} />\n\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Permanent Address</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setPermanentAddress(e.target.value)} type=\"text\" placeholder='Enter Permanent Address' defaultValue={permanentAddress} />\n\n                </Form.Group>\n\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Current Address</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setCurrentAddress(e.target.value)} type=\"text\" placeholder='Enter Current Address' defaultValue={currentAddress} />\n\n                </Form.Group>\n\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Pincode </Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setPincode(e.target.value)} type=\"text\" placeholder='Enter Pincode' defaultValue={pincode} />\n\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Previous School</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setPreviousSchool(e.target.value)} type=\"text\" placeholder='Enter Previous School' defaultValue={previousSchool} />\n\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Previous Class %</Form.Label>  <Form.Label style={{ color: \"red\" }}>  *</Form.Label>\n                  <input required className=\"form-control\" onChange={(e) => setPreviousPercent(e.target.value)} type=\"text\" placeholder='Enter  Percentage' defaultValue={previousPercent} />\n\n                </Form.Group>\n\n              </Form.Row>\n              <label> Student Photo</label>\n              {imgShow ? <Col xs={6} md={4}>\n\n                <Image id=\"img\" style={{ height: '80mm', width: '70mm' }} src={`data:image/jpeg;base64,${profileImg}`} thumbnail />\n\n\n              </Col> : <Col xs={6} md={4}>\n\n                  <Image style={{ height: '80mm', width: '70mm' }} src={profileImg1} thumbnail />\n\n\n                </Col>}\n\n\n\n\n              <label> Update Student Photo    </label>  <input type=\"file\" onChange={imageHandler} />\n\n              <br />\n\n\n              <br />\n              <NotificationContainer />\n\n              <div style={{ textAlign: 'center' }}>\n\n                <Button style={{ marginLeft: '3%' }} variant=\"success\" type=\"submit\">Update Student Details</Button>\n              </div>\n            </form>\n\n\n          </fieldset>\n\n        </div> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div>}\n        <br />\n\n\n\n        <Backdrop className={classes.backdrop} open={open} >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n\n\n\n    )\n  }\n\n\n\n  return (\n\n    <div>\n\n\n      <div className=\"mobileVisible\"><h4 style={{ color: 'red' }}> Please Change to Desktop Site or Login from Computer or Desktop </h4> </div>\n\n      <div className=\"mobileHidden\">\n        <p style={{ fontSize: 25, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Update Page</p>\n\n        {spin ? <Card className=\"text-center\" style={{ width: \"50%\", marginLeft: '25%' }}>\n          <Card.Header > <label> Student Information</label></Card.Header>\n          <div>   <form id=\"resetform\" onSubmit={fetchClassDetails}  >\n            <Card.Body>\n              <FormControl id=\"class\" required className={classes.formControl}>\n                <InputLabel id=\"demo-controlled-open-select-label\">Class</InputLabel>\n                <Select\n                  onChange={(e) => {\n                    classClick(e.target.value)\n                  }\n                  }\n                >\n                  <MenuItem value={'1'}>Class I</MenuItem>\n                  <MenuItem value={'2'}>Class II</MenuItem>\n                  <MenuItem value={'3'}>Class III</MenuItem>\n                  <MenuItem value={'4'}>Class IV</MenuItem>\n                  <MenuItem value={'5'}>Class V</MenuItem>\n                  <MenuItem value={'6'}>Class VI</MenuItem>\n                  <MenuItem value={'7'}>Class VII</MenuItem>\n                  <MenuItem value={'8'}>Class VIII</MenuItem>\n                  <MenuItem value={'9'}>Class IX</MenuItem>\n                  <MenuItem value={'10'}>Class X</MenuItem>\n                  <MenuItem value={'11'}>Class XI</MenuItem>\n                  <MenuItem value={'12'}>Class XII</MenuItem>\n                </Select>\n              </FormControl>\n              <FormControl id=\"branch\" disabled={branchDisable} required={!branchDisable} className={classes.formControl}>\n                <InputLabel >Branch</InputLabel>\n                <Select onChange={(e) => {\n                  branchClick(e.target.value)\n                  setStudentBranch(e.target.value)\n                }}\n                >{branchName.map(data => (<MenuItem key={data} value={data}>{data}</MenuItem>))}\n                </Select>\n              </FormControl>\n              <FormControl id=\"section\" required className={classes.formControl}>\n                <InputLabel id=\"demo-controlled-open-select-label\">Section</InputLabel>\n                <Select labelId=\"demo-controlled-open-select-label\"\n                  id=\"demo-controlled-open-select\"\n                  value={studentSection}\n                  onChange={(e) => {\n                    setStudentSection(e.target.value)\n                  }}\n                >\n                  {sectionName.map(data => (\n\n                    <MenuItem key={data} value={data}>{data}</MenuItem>\n                  ))}\n\n                </Select>\n              </FormControl>\n              <br />\n            </Card.Body>\n            <Card.Footer >\n              <button type=\"submit\" className=\"btn btn-primary text-center\">Fetch Class Details</button>\n            </Card.Footer>\n          </form></div>\n        </Card> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div>}\n        <br />\n\n\n\n        {spin2 ? spin3 ? <table className=\"table\" style={{ textAlign: 'center', marginTop: '2%', border: '5px solid #001529' }}>\n          <thead style={{ fontSize: 18, backgroundColor: '#001529', color: 'white' }}>\n            <tr>\n              <th>Name</th>\n              <th>Roll No</th>\n              <th>Update</th>\n              <th>Delete</th>\n\n            </tr>\n          </thead>\n\n          <tbody>\n            {data.map(data => (\n              <tr>\n                <td>{data.Name}</td>\n                <td>{data.RollNo}</td>\n\n                <td> <button onClick={(e) => {\n                  e.preventDefault()\n                  onUpdate(data)\n                }} className=\"btn btn-primary text-center\" >Update</button> </td>\n                <td> <button className=\"btn btn-danger text-center\" onClick={(e) => {\n                  e.preventDefault();\n\n                  onDelete(data)\n\n                }}   >Delete</button> </td>\n              </tr>\n\n            ))}\n\n          </tbody>\n        </table> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div> : null}\n\n        <hr />\n\n\n\n\n\n\n        <Backdrop className={classes.backdrop} open={open} >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n\n\n      </div></div>\n  )\n}\n\nexport default StudentUpdate\n","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/DailyTimTable/TaskList.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/AssignmentShow/AssignmentTeacher.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/AttendenceShow/Attendence.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/ResultShow/ResultShow.jsx",["398"],"import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie'\nimport { Spin } from 'antd';\nimport {Button} from 'react-bootstrap'\n\nfunction ResultShow(props) {\n    const [studentMarks, setStudentMarks] = useState([]);\n    const [totalObtainedMarks, setTotalObtainedMarks] = useState('');\n    const [totalMarks, setTotalMarks] = useState('');\n    const [result, setResult] = useState(false);\n    const [data, setData] = useState([]);\n    const [branchShow, setBranchShow] = useState(true)\n    const [spin, setSpin] = useState(false)\n\n\n\n    useEffect(() => {\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"studentresultshow\"), { hello: 'result' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setData(res.data)\n\n\n            if (props.Class > 10) {\n                setBranchShow(false)\n            } else setBranchShow(true)\n\n            setSpin(true)\n        })\n    }, [])\n\n\n\n    function fetch(e) {\n        console.log(e);\n        var c = data.find(o => o.ExamId === e)\n        console.log(c)\n        setStudentMarks(c.Marks)\n        setTotalObtainedMarks(c.ObtainedMarks)\n        setTotalMarks(c.MaximumMarks)\n        setResult(true)\n\n\n    }\n\n    console.log(studentMarks);\n    const back = () => setResult(false)\n\n    if (result) {\n        return (\n            <div> <Button variant=\"outline-danger\" onClick={back}>back</Button>\n                <div style={{ textAlign: 'center' }}>\n\n                    <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Result</p><hr />\n\n\n                    <table className=\"table\" >\n                        <tbody style={{ fontSize: 18, backgroundColor: '#001529', color: 'white' }}>\n                            <tr>\n                                <th>Name : </th>\n                                <th>{props.Name.toUpperCase()}</th>\n                                <th> Roll No. :</th>\n                                <th>{props.EnrollmentNo}</th>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <div >    <table className=\"table\" style={{ border: '3px solid #001529' }}>\n                        <thead >\n                            <tr>\n                                <th>Subject</th>\n                                <th>Obtained Marks</th>\n                                <th>Practical Marks</th>\n                                <th>Maximum Marks</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {studentMarks.map(data => (\n                                <tr>\n                                    <td>{data.Subject}</td>\n                                    <td>{data.obtainedMarks}</td>\n                                    <td>{data.MaximumMarks}</td>\n                                    <td>{data.MaximumMarks}</td>\n                                </tr>\n\n                            ))}\n\n\n                        </tbody>\n                        <tfoot  >\n                            <tr style={{ color: 'red' }} >\n\n                                <td></td>\n                                <td></td>\n                                <td >Total Marks </td>\n                                <td>{totalObtainedMarks}/{totalMarks}</td>\n\n                            </tr>\n                        </tfoot>\n                    </table></div>\n\n\n                </div>\n\n\n            </div>\n        )\n    }\n\n    return (\n        <div>{spin ? <div>\n\n            <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Result</p><hr />\n\n            <label style={{ color: 'red' }}>Class : {props.Class} {branchShow ? null : { \",Branch\": props.Branch }} , Section : {props.Section}</label><br /><br />\n            <table className=\"table\" style={{ textAlign: 'center', border: '3px solid #001529' }}>\n                <thead style={{ backgroundColor: '#001529' , color: 'white' }}>\n                    <tr>\n                        <th>Exam Name</th>\n                        <th>Exam Id</th>\n                        <th>Fetch Result</th>\n                    </tr>\n\n                </thead>\n\n                <tbody>\n\n                    {data.map(data => (\n                        <tr>\n                            <td>{data.ExamName}</td>\n                            <td>{data.ExamId}</td>\n                            <td><button onClick={() => fetch(data.ExamId)} className=\"btn btn-info\">Fetch </button></td>\n                        </tr>\n                    ))}\n\n                </tbody>\n            </table>\n\n        </div> : <div style={{\n            textAlign: 'center', position: \"fixed\",\n            top: '30%',\n            left: '50%',\n\n            transform: \"translate(-50%, -50%)\"\n        }}><Spin /></div>}\n\n\n        </div>\n    )\n}\n\nexport default ResultShow\n","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/AssignmentUpload/AssignmentUpload.jsx",["399","400","401","402","403"],"import React from \"react\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Axios from 'axios';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport Cookies from 'js-cookie'\n\n\n\n\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 100, textAlign: 'center' }} spin />;\n\n\n\nclass AssignmentUpload extends React.Component {\n    state = {\n        class: '',\n        branch: '',\n        branchShow: false,\n        classData: [],\n        branchName: [],\n        open: false,\n        studentSection: '',\n        sectionName: [],\n        file: '',\n        assignmentTitle: '',\n        dateOfSubmission: '',\n        go: false\n\n\n    }\n\n    imageHandler = (e) => {\n\n        const imageFile = e.target.files[0];\n        console.log(imageFile);\n        const isLt2M = imageFile.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            NotificationManager.warning('Image must smaller than 2MB!');\n            this.setState({ file: '' })\n            return false\n        }\n\n\n        if (!imageFile.name.match(/\\.(pdf|PDF)$/)) {\n            NotificationManager.warning(\"Please select valid pdf file.\")\n            this.setState({ file: '' })\n\n            return false;\n        }\n\n        if (imageFile && isLt2M) {\n            console.log(\"hello\");\n            this.setState({ file: imageFile, go: true })\n        }\n\n\n    }\n\n\n    handleChange = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value })\n\n    }\n\n\n\n\n\n    componentDidMount = () => {\n        console.log(\"compo Called\");\n\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"section\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            this.setState({ classData: res.data, open: true })\n        })\n\n    }\n\n\n\n    classClick = (e) => {\n        console.log(e);\n        this.setState({ class: e })\n        const { classData, branchName } = this.state\n        console.log(classData);\n\n        branchName.splice(0)\n        console.log(e);\n        if (e > 10) {\n            var branchFind = classData.find(o => o.Class === e)\n            console.log(branchFind);\n            if (branchFind === undefined) {\n                alert(\"No branch found\")\n                this.setState({ branchShow: false, sectionName: [] })\n\n                return false\n            } else {\n                branchFind.Branches.map(data => {\n                    console.log(data.Branch); branchName.push(data.Branch)\n                })\n                console.log(branchName);\n                this.setState({ branchShow: true })\n            }\n\n        } else {\n\n            var classFind1 = classData.find(o => o.Class == e)\n\n            if (classFind1 === undefined) {\n                alert(\"No section found\")\n                this.setState({ branchShow: false, sectionName: [] })\n\n                return false\n            } else {\n                classFind1.Branches.map((data) => {\n                    this.setState({ sectionName: data.Section })\n                })\n                this.setState({ branchShow: false })\n            }\n\n        }\n    }\n\n\n\n    branchClick = (e) => {\n        console.log(e);\n        var branchName = this.state.classData.find(o => o.Class == this.state.class);\n        var branchFind = branchName.Branches.find(o => o.Branch == e);\n        this.setState({\n            sectionName: branchFind.Section\n        })\n\n        console.log(this.state.sectionName);\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { branch, studentSection, assignmentTitle, file, dateOfSubmission } = this.state\n\n\n        if (this.state.go) {\n            var d = window.confirm(\"Upload Assignment\")\n            if (d) {\n                this.setState({ open: false })\n                const formdata = new FormData()\n                formdata.append(\"Class\", this.state.class)\n                formdata.append(\"Branch\", branch)\n                formdata.append(\"Section\", studentSection)\n                formdata.append(\"AssignmentName\", assignmentTitle)\n                formdata.append(\"Date\", dateOfSubmission)\n                formdata.append(\"file\", file)\n\n                Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"assignmentupload\"), formdata, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                    console.log(res);\n                    alert(res.data.msg)\n                    this.setState({ open: true, branch: '', class: '', assignmentTitle: '' })\n                    document.getElementById(\"formreset\").reset()\n\n                })\n\n            }\n\n        } else {\n            return false\n        }\n\n\n    }\n\n    render() {\n        let { branchName, open } = this.state\n        return (\n            <div className=\"content\">\n                <div style={{ color: 'red' }}> <NotificationContainer /></div>\n                {open ? <form onSubmit={this.handleSubmit} onChange={this.handleChange} id=\"formreset\" >\n                    <div className=\"row\" style={{ marginTop: 20 }}>\n                        <div className=\"col-sm-1\"></div>\n                        <div className=\"col-sm-10\">\n                            <div className=\"card\" style={{ border: '4px solid #001529' }} >\n                                <div className=\"card-header text-center\" style={{ fontWeight: 'bolder', backgroundColor: '#001529', color: 'white' }}><label> Upload Assignment </label></div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n\n                                        <div className=\"col-sm-3\">\n                                            <label> Class  </label>\n\n                                            <select required name=\"class\" className=\"form-control\" onChange={(e) => this.classClick(e.target.value)}>\n                                                <option value=\"\">Select Class... </option>\n\n                                                <option value=\"1\">Class I </option>\n                                                <option value=\"2\">Class II </option>\n                                                <option value=\"3\">Class III </option>\n                                                <option value=\"4\">Class IV </option>\n                                                <option value=\"5\">Class V </option>\n                                                <option value=\"6\">Class VI </option>\n                                                <option value=\"7\">Class VII </option>\n                                                <option value=\"8\">Class VIII </option>\n                                                <option value=\"9\">Class IX </option>\n                                                <option value=\"10\">Class X </option>\n                                                <option value=\"11\">Class XI </option>\n                                                <option value=\"12\">Class XII </option>\n\n                                            </select> <br />\n                                        </div>\n\n\n                                        {this.state.branchShow ? <div className=\"col-sm-3\" >\n                                            <label> Branch  </label>\n\n                                            <select onChange={(e) => this.branchClick(e.target.value)} required name=\"branch\" className=\"form-control\" >\n                                                <option value=\"\">Select Branch ... </option>\n                                                {branchName.map(data => (\n                                                    <option key={data} value={data}>{data}</option>\n                                                ))}\n\n\n                                            </select></div> : null}\n\n                                        <div className=\"col-sm-3\">\n                                            <label> Section  </label>\n\n                                            <select required className=\"form-control\" name=\"studentSection\" >\n                                                <option value=\"\">Select Section... </option>\n                                                {this.state.sectionName.map(data => (\n                                                    <option key={data}>{data}</option>\n                                                ))}\n\n\n\n                                            </select> <br />\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n\n                                        <div className=\"col-sm-3\">\n                                            <label>Assignment Title  </label>\n                                            <input className=\"form-control\" type=\"text\" placeholder=\"Enter Title Here\" name=\"assignmentTitle\" required />\n\n                                            <br />\n                                        </div>\n\n\n                                        <div className=\"col-sm-5\" >\n                                            <label>Upload file  </label>\n\n                                            <input className=\"form-control\" type=\"file\" onChange={this.imageHandler} required />\n                                        </div>\n\n                                        <div className=\"col-sm-3\">\n                                            <label>Submission date  </label>\n\n                                            <input className=\"form-control\" type=\"date\" name=\"dateOfSubmission\" required />\n                                            <br />\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"card-footer text-center\">\n                                    <button type=\"submit\" style={{width:\"200px\"}} className=\"btn btn-primary text-center\">Submit</button></div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-1\"></div>\n\n\n                    </div>\n                </form> : <div style={{ textAlign: 'center', marginTop: '8%' }}><Spin indicator={antIcon} /></div>}\n            </div>\n        )\n    }\n}\nexport default AssignmentUpload","/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/QuizUpload/QuizUpload.jsx",["404","405","406","407","408"],"/home/pranjul/Desktop/pratham/hello/src/LoginPage/LoginPage.jsx",["409","410"],"import React, { useState, useEffect } from 'react'\nimport { Card, CardGroup } from 'react-bootstrap';\nimport { Layout } from 'antd';\nimport img from '../Untitled-22.png';\nimport './Login.css'\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst { Header, Footer, Content } = Layout;\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\n\nfunction LoginPage() {\n    const [userName, setUserName] = useState('');\n    const [password, setPassWord] = useState('');\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const history = useHistory();\n    const a = Cookies.get(\"Authorization\")\n\n    useEffect(() => {\n        console.log(\"useEffect Caleed\");\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"direct\"), { data: 'check' }, { headers: { Authorization: a } }).then((res) => {\n            console.log(res.data);\n\n            if (res.data.success === true) {\n                switch (res.data.msg.Role) {\n                    case \"Admin\":\n                        history.push(`/admin?enrollMentid=${res.data.msg.EnrollmentNo}?id`)\n                        break;\n                    case \"Teacher\":\n                        history.push(`/teacher?enrollMentid=${res.data.msg.EnrollmentNo}?id`)\n                        break;\n                    case \"Student\":\n                        history.push(`/student?enrollMentid=${res.data.msg.EnrollmentNo}?id`)\n                        break;\n                    case \"SuperAdmin\":\n                        history.push(`/sadmin`)\n                        break;\n                    case \"Principal\":\n                        history.push(`/principal?enrollMentid=${res.data.msg.EnrollmentNo}?id`)\n                        break;\n                    case \"Parents\":\n                        history.push(`/parents?enrollMentid=${res.data.msg.EnrollmentNo}?id`)\n                        break;\n                    default:\n                        history.push(\"/\")\n\n\n                }\n            } else history.push(\"/\")\n        })\n\n    }, [])\n\n\n\n    function submitHandle(e) {\n        e.preventDefault();\n        setOpen(true)\n        console.log(userName);\n        console.log(password);\n        var Data = {\n            username: userName,\n            password: password\n        }\n\n        var d = JSON.stringify(Data).length\n        var e = d.toString();\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat('login'), Data).then((res) => {\n            console.log(res.data);\n\n\n            if (res.data.success === true) {\n                switch (res.data.msg.Role) {\n                    case \"Admin\":\n                        Cookies.set(\"Authorization\", res.data.msg.token)\n\n                        history.push(`/admin?enrollMentid=${userName}?id`)\n                        break;\n                    case \"Teacher\":\n                        Cookies.set(\"Authorization\", res.data.msg.token)\n\n                        history.push(`/teacher?enrollMentid=${userName}?id`)\n                        break;\n                    case \"Student\":\n                        Cookies.set(\"Authorization\", res.data.msg.token)\n\n                        history.push(`/student?enrollMentid=${userName}?id`)\n                        break;\n                    case \"SuperAdmin\":\n                        Cookies.set(\"Authorization\", res.data.msg.token)\n\n                        history.push(`/sadmin`)\n                        break;\n\n                    case \"Principal\":\n                        Cookies.set(\"Authorization\", res.data.msg.token)\n                        history.push(`/principal?enrollMentid=${userName}?id`)\n                        break;\n                    case \"Parents\":\n                        Cookies.set(\"Authorization\", res.data.msg.token)\n                        history.push(`/parents?enrollMentid=${userName}?id`)\n                        break;\n                    default:\n                        history.push(\"/\")\n\n\n                }\n            } else {\n                alert(res.data.msg)\n                setOpen(false)\n                return false\n            }\n        }).catch(err => {\n            if (err) {\n                alert(\"Something went wrong\")\n                setOpen(false)\n                return false\n            }\n        })\n\n\n\n    }\n\n\n    return (\n        <div >\n\n            <Layout className=\"time\">\n                <div  >    <Header style={{ color: 'white', paddingBottom: '4%', fontSize: 30 }} >\n                    <img src={img} alt=\"\"\n                        style={{ marginLeft: '20%' }}\n                        width=\"140\"\n                        height=\"90\"\n                    />  <span style={{}} >Urban</span><span style={{ color: 'orange' }}> Educate</span>\n                </Header></div>\n                <Content>\n                    <div style={{ display: 'flex', justifyContent: \"center\", alignItems: 'center', marginTop: '10%' }}>\n                        <div style={{ width: '50%', }}>\n\n\n\n\n                            <CardGroup>\n                                <Card>\n                                    <Card.Header className=\"he\" style={{ textAlign: 'center' }}>Sign In   </Card.Header>\n                                    <form onSubmit={submitHandle}> <Card.Body>\n                                        <label>Username  </label>  <input required onChange={(e) => setUserName(e.target.value.toUpperCase())} style={{ height: '25%' }} className=\"form-control\" />\n                                        <label>Password </label> <input required onChange={(e) => setPassWord(e.target.value)} style={{ height: '25%' }} className=\"form-control\" /><br />\n\n\n                                    </Card.Body><br />\n                                        <Card.Footer style={{ textAlign: 'center' }}>\n                                            <button type=\"submit\" className=\"btn  \" style={{ width: '100%', fontFamily: \"'Merriweather', serif\", backgroundColor: '#001529', color: 'white' }}>Sign In</button>\n\n                                            <div style={{ textAlign: 'left' }}><a className=\"btn btn-link\" href=\"/forgot\" >Forgot password ? </a></div>\n\n                                        </Card.Footer>\n                                    </form> </Card>\n                                <Card style={{ backgroundColor: '#001529' }} >\n\n                                    <span style={{ fontSize: 25, color: 'white', marginTop: '20%', textAlign: 'center', fontFamily: \"'Merriweather', serif\" }}>Welcome Back</span>\n                                </Card>\n                            </CardGroup>\n\n                        </div></div>\n\n\n\n\n                </Content>\n                <br /><br /><br /><br /><br /><br />\n                <Footer>\n                    Footer<p></p>\n                Footer<p></p>\n                Footer<p></p>\n                Footer<p></p>\n\n                </Footer>\n            </Layout>\n\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    )\n}\n\nexport default LoginPage\n\n\n\n","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/TeacherCard.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/TeacherDetails/TeacherDetails.jsx",["411","412","413","414"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button} from 'react-bootstrap'\nimport Axios from 'axios';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport Cookies from 'js-cookie'\n\n\n\n// import Axios from 'axios';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 100, textAlign: 'center' }} spin />;\n\n\nconst useStyles = makeStyles((theme) => ({\n\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }\n\n}));\n\nfunction TeacherDetails(props) {\n    const classes = useStyles();\n    const [rollNo, setRollNo] = useState('')\n    const [updateShow, setUpdateShow] = useState(false);\n    const [studentFullName, setStudentFullName] = useState('');\n    const [spin, setSpin] = useState(false);\n    const [spin1, setSpin1] = useState(false);\n    const [data, setData] = useState([]);\n    const [profileImg, setProfileImg] = useState('')\n    const [edit, setEdit] = useState(true);\n    const [firstName, setFirstName] = useState('');\n    const [dob, setDob] = useState('');\n    const [gender, setGender] = useState('');\n    const [fatherName, setFatherName] = useState('');\n    const [maritalStatus, setMaritalStatus] = useState('Not Married');\n    const [husbandName, setHusbandName] = useState('');\n    const [category, setCategory] = useState('General');\n    const [religion, setReligion] = useState('');\n    const [email, setEmail] = useState('');\n    const [aadhar, setAadhar] = useState('');\n    const [panNo, setPanNo] = useState('');\n    const [mobile, setMobile] = useState('');\n    const [specialSubject, setSpecialSubject] = useState('');\n    const [qualification, setQualification] = useState('');\n    const [experience, setExperience] = useState('');\n    const [designation, setDesignation] = useState('');\n    const [permanentAddress, setPermanentAddress] = useState('');\n    const [currentAddress, setCurrentAddress] = useState('');\n    const [pincode, setPincode] = useState('');\n    const [dateOfJoining, setDateOfJoining] = useState('');\n    const [assignedClass, setAssignedClass] = useState('')\n    const [assignedsection, setAssignedSection] = useState('');\n    const [assignedbranch, setAssignedBranch] = useState('');\n    const [role, setRole] = useState('')\n\n    var no = 0\n\n    useEffect(() => {\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"teacherinfo1\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setData(res.data)\n            setSpin(true)\n        })\n    }, [Axios])\n\n\n\n\n\n\n    function onUpdate(e) {\n\n        console.log(e.Role);\n        setUpdateShow(true)\n        setSpin1(false)\n        setRollNo(e.RollNo)\n        setStudentFullName(e.Name)\n        console.log(e);\n        console.log(\"function Called\");\n        if (e.Role === \"Admin\") {\n            Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"admindetail\"), { EnrollmentNo: e.RollNo }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                console.log(res.data);\n\n\n\n\n                setFirstName(res.data.data.Name)\n                setFatherName(res.data.data.FatherName)\n                setHusbandName(res.data.data.HusbandWife)\n                setAadhar(res.data.data.AadharId);\n                setEmail(res.data.data.EmailId)\n                setCategory(res.data.data.Caste);\n                setCurrentAddress(res.data.data.CurrentAddress);\n                setDob(res.data.data.Dob);\n                setGender(res.data.data.Gender);\n                setPermanentAddress(res.data.data.HomeAddress);\n                setMobile(res.data.data.Mobile);\n                setPincode(res.data.data.Pincode);\n                setReligion(res.data.data.Religion);\n                setDateOfJoining(res.data.data.DateOfJoining);\n                setDesignation(res.data.data.FacultyDesignation);\n                setMaritalStatus(res.data.data.MaritalStatus);\n                setSpecialSubject(res.data.data.SubjectSpecialization);\n                setPanNo(res.data.data.PanId);\n                setQualification(res.data.data.Qualification)\n                setExperience(res.data.data.Experience)\n                setAssignedClass(res.data.AssignedClass)\n                setAssignedBranch(res.data.AssignedBranch)\n                setAssignedSection(res.data.AssignedSection)\n                setRole(res.data.data.Role)\n\n\n                let c = new Uint8Array(res.data.file.Body.data)\n                const STR = c.reduce((data, byte) => {\n                    return data + String.fromCharCode(byte);\n                }, '');\n                let base64String = btoa(STR)\n                setProfileImg(base64String)\n\n\n                setSpin1(true)\n\n            })\n\n        } else {\n            Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"teacherdetail\"), { EnrollmentNo: e.EnrollmentNo }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                console.log(res.data);\n\n                setFirstName(res.data.data.Name)\n                setFatherName(res.data.data.FatherName)\n                setHusbandName(res.data.data.HusbandWife)\n                setAadhar(res.data.data.AadharId);\n                setEmail(res.data.data.EmailId)\n                setCategory(res.data.data.Caste);\n                setCurrentAddress(res.data.data.CurrentAddress);\n                setDob(res.data.data.Dob);\n                setGender(res.data.data.Gender);\n                setPermanentAddress(res.data.data.HomeAddress);\n                setMobile(res.data.data.Mobile);\n                setPincode(res.data.data.Pincode);\n                setReligion(res.data.data.Religion);\n                setDateOfJoining(res.data.data.DateOfJoining);\n                setDesignation(res.data.data.FacultyDesignation);\n                setMaritalStatus(res.data.data.MaritalStatus);\n                setSpecialSubject(res.data.data.SubjectSpecialization);\n                setPanNo(res.data.data.PanId);\n                setQualification(res.data.data.Qualification)\n                setExperience(res.data.data.Experience)\n                setAssignedClass(res.data.AssignedClass)\n                setAssignedBranch(res.data.AssignedBranch)\n                setAssignedSection(res.data.AssignedSection)\n                setRole(res.data.data.Role)\n\n\n                let c = new Uint8Array(res.data.file.Body.data)\n                const STR = c.reduce((data, byte) => {\n                    return data + String.fromCharCode(byte);\n                }, '');\n                let base64String = btoa(STR)\n                setProfileImg(base64String)\n\n\n                setSpin1(true)\n\n            })\n\n\n\n        }\n\n\n\n    }\n\n    function back() {\n        setEdit(true)\n        setUpdateShow(false)\n        return TeacherDetails\n    }\n\n    if (updateShow) {\n\n        if (assignedbranch === \"\") {\n            setAssignedBranch('Null')\n        }\n        if (husbandName === \"\") {\n            setHusbandName('Null')\n\n\n        }\n\n\n\n        return (\n            <div>\n                <br />\n                <Button variant=\"outline-danger\" className=\"btn\" onClick={back}> Previous Page</Button><br />\n\n                {spin1 ? <div className=\"mobileHidden\"> <p style={{ fontSize: 20, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529' }}> Teacher Details</p><hr />\n\n\n                    <div className=\"container\" style={{ background: '-webkit-linear-gradient(left, #3931af, #00c6ff)' }}>\n                        <div className=\"main-body\">\n\n\n\n\n                            <div className=\"row gutters-sm\">\n                                <div className=\"col-md-4 mb-3\">\n                                    <div className=\"card\">\n                                        <div className=\"card-body\">\n                                            <div className=\"d-flex flex-column align-items-center text-center\">\n                                                <img src={`data:image/jpeg;base64,${profileImg}`} alt=\"Admin\" className=\"rounded-circle\" width=\"180\" height=\"200\" />\n                                                <div className=\"mt-3\">\n                                                    <h4>{firstName[0].toUpperCase() +\n                                                        firstName.slice(1)}</h4>\n                                                    <p className=\"text-secondary mb-1\">{role}</p>\n                                                    <p className=\"text-muted font-size-sm\">{rollNo}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"card mt-3 \" >\n\n                                        <ul className=\"list-group list-group-flush\" style={{ marginBottom: '7%' }}>\n                                            <br />\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\" >\n                                                <h6 className=\"d-flex align-items-center mb-3\"> <i className=\"material-icons text-info mr-2\">assignment</i>School Details</h6>\n\n                                            </li>\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\" >\n                                                <h6 className=\"mb-0\">School Name</h6>\n                                                <span className=\"text-secondary\">{props.schoolName}</span>\n                                            </li>\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                <h6 className=\"mb-0\">Designation </h6>\n                                                <span className=\"text-secondary\">{designation}</span>\n                                            </li>\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                <h6 className=\"mb-0\">Assigned Class   </h6>\n                                                <span className=\"text-secondary\">{assignedClass}</span>\n                                            </li>\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                <h6 className=\"mb-0\">Assigned Branch </h6>\n                                                <span className=\"text-secondary\">{assignedbranch}</span>\n                                            </li>\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                <h6 className=\"mb-0\">Assigned Section </h6>\n                                                <span className=\"text-secondary\">{assignedsection}</span>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <div className=\"card mb-3\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-3\">\n                                                    <h6 className=\"mb-0\">Full Name</h6>\n                                                </div>\n                                                <div className=\"col-sm-9 text-secondary\">\n                                                    {firstName}             </div>\n                                            </div>\n                                            <hr />\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-3\">\n                                                    <h6 className=\"mb-0\">Email</h6>\n                                                </div>\n                                                <div className=\"col-sm-9 text-secondary\">\n                                                    {email}                    </div>\n                                            </div>\n                                            <hr />\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-3\">\n                                                    <h6 className=\"mb-0\">Phone</h6>\n                                                </div>\n                                                <div className=\"col-sm-9 text-secondary\">\n                                                    {mobile}\n                                                </div>\n                                            </div>\n                                            <hr />\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-3\">\n                                                    <h6 className=\"mb-0\">Dob</h6>\n                                                </div>\n                                                <div className=\"col-sm-9 text-secondary\">\n                                                    {dob}\n                                                </div>\n                                            </div>\n                                            <hr />\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-3\">\n                                                    <h6 className=\"mb-0\"> Address</h6>\n                                                </div>\n                                                <div className=\"col-sm-9 text-secondary\">\n                                                    {permanentAddress}                    </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row gutters-sm\">\n                                        <div className=\"col-sm-6 mb-3\">\n                                            <div className=\"card h-100\">\n                                                <div className=\"card-body\">\n                                                    <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Personal Details</h6>\n                                                    <ul className=\"list-group list-group-flush\">\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Father Name</h6>\n                                                            <span className=\"text-secondary\">{fatherName}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Marital Status</h6>\n                                                            <span className=\"text-secondary\">{maritalStatus}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Husband/Wife Name</h6>\n                                                            <span className=\"text-secondary\">{husbandName}</span>\n                                                        </li>\n\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Gender</h6>\n                                                            <span className=\"text-secondary\">{gender}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Caste</h6>\n                                                            <span className=\"text-secondary\">{category}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Religion</h6>\n                                                            <span className=\"text-secondary\">{religion}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Qualification</h6>\n                                                            <span className=\"text-secondary\">{qualification}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Date Of Joining</h6>\n                                                            <span className=\"text-secondary\">{dateOfJoining}</span>\n                                                        </li>\n\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-6 mb-3\">\n                                            <div className=\"card h-100\">\n                                                <div className=\"card-body\">\n                                                    <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Other Details</h6>\n                                                    <ul className=\"list-group list-group-flush\">\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Experience </h6>\n                                                            <span className=\"text-secondary\">{experience}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Main Subject </h6>\n                                                            <span className=\"text-secondary\">{specialSubject}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Aadhar Id</h6>\n                                                            <span className=\"text-secondary\">{aadhar}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Pan No</h6>\n                                                            <span className=\"text-secondary\">{panNo}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Current Address</h6>\n                                                            <span className=\"text-secondary\">{currentAddress}</span>\n                                                        </li>\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Permanent Address</h6>\n                                                            <span className=\"text-secondary\">{permanentAddress}</span>\n                                                        </li>\n\n                                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                                            <h6 className=\"mb-0\">Pincode</h6>\n                                                            <span className=\"text-secondary\">{pincode}</span>\n                                                        </li>\n\n\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n\n\n\n\n\n\n\n                </div> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div>}\n\n\n\n\n            </div>\n\n\n\n        )\n    }\n\n\n\n    return (\n\n        <div>\n\n\n            <div className=\"mobileVisible\"><h4 style={{ color: 'red' }}> Please Change to Desktop Site or Login from Computer or Desktop </h4> </div>\n\n            <div className=\"mobileHidden\">\n                <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Teacher Details </p><hr />\n                <br />\n\n                {spin ? <table className=\"table\" style={{ textAlign: 'center', marginTop: '2%', border: '5px solid #001529' }}>\n                    <thead style={{ fontSize: 18, backgroundColor: '#001529', color: 'white' }}>\n                        <tr>\n                            <th> S.no</th>\n                            <th>Enrollment No</th>\n                            <th>Name</th>\n                            <th>Role</th>\n\n                            <th>Details</th>\n\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {data.map(data => {\n                            no = no + 1\n                            return (\n                                <tr key={data.EnrollmentNo}>\n\n                                    <td >{no}</td>\n                                    <td >{data.EnrollmentNo}</td>\n\n                                    <td >{data.Name}</td>\n                                    <td >{data.Role}</td>\n\n                                    <td> <button onClick={(e) => {\n                                        e.preventDefault()\n                                        onUpdate(data)\n                                    }} className=\"btn btn-primary text-center\" >See Details</button> </td>\n\n                                </tr>\n\n                            )\n                        })}\n\n                    </tbody>\n                </table> : <div style={{ textAlign: 'center' }}><Spin indicator={antIcon} /> </div>}\n                <br />\n\n\n\n\n\n\n\n\n\n            </div></div>\n    )\n}\n\nexport default TeacherDetails\n","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/ForTeacher/TeacherTasklist.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/reportWebVitals.js",[],"/home/pranjul/Desktop/pratham/hello/src/Component/PrincipalDashboard/ClassTimeTable/ClassTimeTable.jsx",["415","416","417","418","419","420","421"],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TeacherMenu/AssignClass.jsx",["422","423","424","425","426","427","428","429","430","431"],"import React, { useState, useEffect } from 'react';\nimport { Form, Col, Card } from 'react-bootstrap';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie'\nimport { Spin } from 'antd';\n\n\nfunction AssignClass() {\n\n    const [classData, setClassData] = useState([]);\n    const [branchName, setBranchName] = useState([]);\n    const [sectionName, setSectionName] = useState([]);\n    const [branchDisable, setbranchDisable] = useState(false)\n    const [studentClass, setStudentClass] = useState('');\n    const [section, setSection] = useState('');\n    const [branch, setBranch] = useState('');\n    const [data, setData] = useState([]);\n    const [enrollmentNo, setEnrollmentNo] = useState('');\n    const [spin, setSpin] = useState(false);\n    const [spin1, setSpin1] = useState(false);\n\n\n\n\n    useEffect(async () => {\n\n\n        await Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"section\"), { hello: \"hello0\" }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setClassData(res.data)\n        })\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"teacherinfo\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setData(res.data)\n            setSpin(true)\n\n        })\n    }, [Axios])\n\n\n\n\n    function classClick(e) {\n        branchName.splice(0)\n        setStudentClass(e)\n        if (e > 10) {\n\n            setbranchDisable(true)\n            var classFind = classData.find(o => o.Class == e)\n            if (!classFind) {\n                alert(\"No Branch\")\n                setbranchDisable(false)\n                return false\n            } else {\n                classFind.Branches.map((data) => {\n                    branchName.push(data.Branch);\n\n                })\n            }\n\n        } else {\n            setbranchDisable(false)\n\n            var classFind1 = classData.find(o => o.Class == e)\n            if (!classFind1) {\n                alert(\"No Section\")\n                return false\n            } else {\n                classFind1.Branches.map((data) => {\n                    setSectionName(data.Section)\n                })\n            }\n\n\n\n        }\n\n\n\n    }\n\n    function branchClick(e) {\n        console.log(e);\n        var branchName = classData.find(o => o.Class == studentClass);\n        var branchFind = branchName.Branches.find(o => o.Branch == e);\n        if (!branchFind) {\n            alert(\"No Section\")\n            return false\n        } else {\n            setSectionName(branchFind.Section)\n\n        }\n\n    }\n\n\n    function handleSubmit(e) {\n        console.log(enrollmentNo);\n        console.log(studentClass);\n        console.log(branch);\n        console.log(section);\n        e.preventDefault()\n        console.log(\"sdfasdf\");\n\n        var d = window.confirm(`Assign Class ${studentClass},Branch ${branch},Section ${section} to ${enrollmentNo}`)\n\n        if (d) {\n            setSpin1(true)\n            var DATA = {\n                EnrollmentNo: enrollmentNo,\n                Class: studentClass,\n                Branch: branch,\n                Section: section\n            }\n\n\n            Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"assignclass\"), DATA, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                console.log(res.data);\n                alert(res.data.msg);\n                document.getElementById(\"reset\").reset()\n                setSpin1(false)\n\n            })\n        } else return false\n    }\n\n\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\n\n\n            {spin ? <div className=\"card\" style={{ width: '40%', border: '2px solid #001529' }} >\n                <label style={{ textAlign: 'center', backgroundColor: \"#001529\", color: 'white' }} className=\"card-header\"> Assign Class For Attendence</label>\n                <form id=\"reset\" className=\"card-body\" onSubmit={handleSubmit}>\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label> Teacher </Form.Label>\n                        <select required className=\"form-control\" onChange={(e) => setEnrollmentNo(e.target.value)} as=\"select\" defaultValue=\"Choose...\">\n                            <option value=\"\">Choose...</option>\n                            {data.map(data => (\n                                <option value={data.RollNo}>({data.RollNo}) {data.Name}</option>\n                            ))}\n                        </select>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label> Class </Form.Label>\n                        <select required className=\"form-control\" onChange={(e) => {\n                            setStudentClass(e.target.value)\n                            classClick(e.target.value)\n                        }} as=\"select\" defaultValue=\"Choose...\">\n                            <option value=\"\">Choose...</option>\n                            <option value={\"1\"}>Class I</option>\n                            <option value={\"2\"}>Class II</option>\n                            <option value={\"3\"}>Class III</option>\n                            <option value={\"4\"}>Class IV</option>\n                            <option value={\"5\"}>Class V</option>\n                            <option value={\"6\"}>Class VI</option>\n                            <option value={\"7\"}>Class VII</option>\n                            <option value={\"8\"}>Class VIII</option>\n                            <option value={\"9\"}>Class IX</option>\n                            <option value={\"10\"}>Class X</option>\n                            <option value={\"11\"}>Class XI</option>\n                            <option value={\"12\"}>Class XII</option>\n                        </select>\n                    </Form.Group>\n                    {branchDisable ? <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label> Branch</Form.Label>\n                        <select required className=\"form-control\" onChange={(e) => {\n                            setBranch(e.target.value)\n                            branchClick(e.target.value)\n                        }} as=\"select\" defaultValue=\"Choose...\">\n                            <option value=\"\">Choose...</option>\n\n                            {branchName.map(data => (\n                                <option key={data} value={data}>{data}</option>\n                            ))}\n                        </select>\n                    </Form.Group> : null}\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label> Section</Form.Label>\n                        <select required className=\"form-control\" onChange={(e) => setSection(e.target.value)} as=\"select\" defaultValue=\"Choose...\">\n                            <option value=\"\">Choose...</option>\n                            {sectionName.map(data => (\n                                <option key={data} value={data}>{data}</option>\n                            ))}\n                        </select>\n                    </Form.Group>\n                    {spin1 ? <div style={{ textAlign: 'center' }}><Spin />  </div> : <div style={{ textAlign: 'center' }} ><button style={{ width: \"30%\" }} type=\"submit\" className=\"btn btn-primary\">Assign</button></div>}\n                </form>\n\n\n\n            </div> : <div style={{ textAlign: 'center' }}><Spin />  </div>}\n\n        </div>\n    )\n}\n\nexport default AssignClass\n","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/DailyTimTable/DailyTIimeTable.jsx",["432","433","434","435","436"],"/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/ManageMentDashboard.jsx",["437","438"],"import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../FrontPage/FrontPage.css';\nimport { Layout, Menu, Spin, Avatar } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  UploadOutlined,\n  LogoutOutlined,\n  ProfileOutlined,\n  FieldTimeOutlined,\n  IdcardOutlined\n} from '@ant-design/icons';\nimport StudentCard from './StudentMenu/StudentCard';\nimport TeacherCard from './TeacherMenu/TeacherCard';\nimport TimeTableCard from './TImeTableMenu/TimeTableCard';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport queryString from 'query-string'\nimport { LoadingOutlined } from '@ant-design/icons';\n\n\n\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 40 }} spin />;\n\n\nconst { Header, Sider, Content, Footer } = Layout;\n\n\nclass ManageMentDashboard extends React.Component {\n  state = {\n    collapsed: false,\n    Studentclick: true,\n    TeacherClick: false,\n    updatestudent: false,\n    timeTable: false,\n    photo: '',\n    schoolName: '',\n    schoolLogo: '',\n    enrollMentid: '',\n    spin: false,\n    profileshow: false,\n    name: '',\n    role: '',\n    enrollNo: '',\n    email: '',\n    phone: '',\n    dob: '',\n    aadhar: '',\n    caste: '',\n    gender: '',\n    panNo: '',\n    religion: '',\n    address: '',\n    pincode: '',\n    profileImg: '',\n    changepassword: false,\n    currentPassword: '',\n    password: '',\n    spin1: false,\n    schoolEmail: '',\n    schoolPhone: '',\n    schoolCode: ''\n  };\n\n\n\n\n\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  enrollClicked = () => {\n    this.setState({\n      Studentclick: true,\n      TeacherClick: false,\n      updatestudent: false,\n      timeTable: false,\n      profileshow: false\n    })\n  }\n  enrollteacher = () => {\n    this.setState({\n      Studentclick: false,\n      TeacherClick: true,\n      updatestudent: false,\n      timeTable: false,\n      profileshow: false\n\n    })\n  }\n  updateStudent = () => {\n    this.setState({\n      Studentclick: false,\n      TeacherClick: false,\n      updatestudent: true,\n      timeTable: false,\n      profileshow: false\n    })\n  }\n  timeTableUpload = () => {\n    this.setState({\n      Studentclick: false,\n      TeacherClick: false,\n      updatestudent: false,\n      timeTable: true,\n      profileshow: false\n    })\n  }\n  Profile = () => {\n    this.setState({\n      Studentclick: false,\n      TeacherClick: false,\n      updatestudent: false,\n      timeTable: false,\n      profileshow: true\n    })\n  }\n\n  componentDidMount = () => {\n    console.log(\"component MAnagement called\");\n    Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"verification\"), { data: 'verification' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n      console.log(res.data);\n      console.log(res.status);\n\n      if (res.data === true) {\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"everydetail\"), { hello: 'profile' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n          console.log(res.data);\n          let c = new Uint8Array(res.data.file.Body.data)\n          const STR = c.reduce((data, byte) => {\n            return data + String.fromCharCode(byte);\n          }, '');\n          let base64String = btoa(STR)\n          this.setState({\n            name: res.data.data.Name,\n            role: res.data.data.Role,\n            enrollNo: res.data.data.EnrollmentNo,\n            email: res.data.data.EmailId,\n            phone: res.data.data.Mobile,\n            dob: res.data.data.Dob,\n            aadhar: res.data.data.AadharId,\n            caste: res.data.data.Caste,\n            gender: res.data.data.Gender,\n            panNo: res.data.data.Id,\n            religion: res.data.data.Religion,\n            address: res.data.data.HomeAddress,\n            pincode: res.data.data.Pincode,\n            profileImg: base64String\n          })\n\n        })\n\n        Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"getSchooldata\"), { data: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n          console.log(res.data);\n          let c = new Uint8Array(res.data.file.Body.data)\n          const STR = c.reduce((data, byte) => {\n            return data + String.fromCharCode(byte);\n          }, '');\n          let base64String = btoa(STR)\n          this.setState({\n            schoolLogo: base64String, schoolName: res.data.Name, spin: true, schoolEmail: res.data.Email,\n            schoolPhone: res.data.Contact, schoolCode: res.data.SchoolId\n          })\n\n        })\n\n        const username1 = queryString.parse(window.location.href.split('?')[1])\n        this.setState({ enrollMentid: username1.enrollMentid })\n      }\n\n\n    }).catch(err => {\n      if (err) {\n        this.props.history.push(\"/\")\n\n      }\n    }\n\n    )\n\n\n\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    var d = window.confirm(\"Change Password\")\n\n    if (d) {\n      this.setState({ spin1: true })\n      var data = {\n        CurrentPassword: this.state.currentPassword,\n        NewPassword: this.state.password\n      }\n      Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"password\"), data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n        console.log(res.data);\n        alert(res.data.msg)\n        if (res.data.success === true) {\n          this.setState({ changepassword: false, spin1: false })\n        } else {\n          this.setState({ changepassword: true, spin1: false })\n        }\n\n      })\n    }\n\n  }\n  logout = () => {\n    var d = window.confirm(\"Leave Site\")\n    if (d) {\n      this.setState({ spin: false })\n      Axios.post(process.env.REACT_APP_SECURITY_API.concat(\"logout\"), { hello: 'logout' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n        console.log(res.data);\n        Cookies.remove(\"Authorization\")\n        this.props.history.push('/')\n      })\n    } else return false\n\n\n  }\n\n  render() {\n\n\n\n    const { name, role, enrollNo, email, phone, dob, aadhar, caste, gender, panNo, religion, address, pincode, profileImg, changepassword, schoolEmail, schoolName, schoolPhone, schoolCode } = this.state\n    return (\n      <div>\n\n        {this.state.spin ? <div>     <Layout>\n          <Sider breakpoint=\"xs\" className=\"sider\" trigger={null} collapsible collapsed={this.state.collapsed} >\n            <div className=\"logo\" style={{ color: \"white\", paddingBottom: 80 }} > {this.state.collapsed ? <img src={`data:image/jpeg;base64,${this.state.schoolLogo}`} style={{ marginTop: '20%', height: '50px', width: '50px' }} /> : <div style={{ textAlign: 'center', fontFamily: 'cursive' }}> {this.state.enrollMentid}   Management Dashboard </div>} </div>\n            <Menu className='nav' theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"5\" onClick={this.Profile} icon={<UserOutlined />}>\n                Profile       \n            </Menu.Item>  \n            <Menu.Item key=\"1\" onClick={this.enrollClicked} icon={<ProfileOutlined />}>\n                Student Menu\n            </Menu.Item>\n              <Menu.Item key=\"2\" onClick={this.enrollteacher} icon={<IdcardOutlined />}>\n                Teacher Menu\n            </Menu.Item>\n              <Menu.Item key=\"3\" onClick={this.updateStudent} icon={<UploadOutlined />}>\n                Update Student Details\n            </Menu.Item>\n              <Menu.Item key=\"4\" onClick={this.timeTableUpload} icon={<FieldTimeOutlined />}>\n                Time Table\n            </Menu.Item>\n            <Menu.Item key=\"6\" onClick={this.logout} icon={<LogoutOutlined />}>\n                Sign Out\n            </Menu.Item>\n           </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <div className=\"mobileHidden\">    <Header className=\"site-layout-background\" style={{ padding: 0, color: '#373737', fontFamily: 'fantasy', fontSize: 20, textAlign: 'left' }}>\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: this.toggle,\n                style: { fontSize: 30, zIndex: 10 }\n              })}\n\n\n              <p style={{ padding: 0, color: '#373737', fontFamily: 'fantasy', fontSize: 25, marginTop: -50, textAlign: 'center' }} >  <img src={`data:image/jpeg;base64,${this.state.schoolLogo}`} style={{ height: '50px', width: '50px', marginRight: '1%' }} />{this.state.schoolName}  <span style={{ float: 'right', marginRight: '2%', cursor: 'pointer' }} onClick={this.Profile}> <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }} size=\"large\" src={`data:image/jpeg;base64,${profileImg}`} icon={<UserOutlined />} /></span> </p>\n\n            </Header></div>\n            <div className=\"mobileVisible\" style={{ backgroundColor: 'white' }}>\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: this.toggle,\n                style: { fontSize: 25, zIndex: 10, marginTop: '4%' }\n              })} <p style={{ padding: 0, color: '#373737', fontFamily: 'fantasy', fontSize: 20, marginTop: -32, marginLeft: 60 }} >{this.state.schoolName} </p>\n            </div>\n\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: '30px 16px',\n                padding: 24,\n                minHeight: 280,\n\n              }}\n            >\n              <div>\n                {this.state.Studentclick ? <StudentCard /> : null}\n                {this.state.TeacherClick ? <TeacherCard schoolName={this.state.schoolName} /> : null}\n                {this.state.timeTable ? <TimeTableCard /> : null}\n                {this.state.profileshow ? <div>\n\n                  <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Profile Page</p><hr />\n\n                  <div className=\"container\" style={{ background: '-webkit-linear-gradient(left, #3931af, #00c6ff)' }}>\n                    <div className=\"main-body\">\n\n\n\n\n                      <div className=\"row gutters-sm\">\n                        <div className=\"col-md-4 mb-3\">\n                          <div className=\"card\">\n                            <div className=\"card-body\">\n                              <div className=\"d-flex flex-column align-items-center text-center\">\n                                <img src={`data:image/jpeg;base64,${profileImg}`} alt=\"Admin\" className=\"rounded-circle\" width=\"150\" height=\"150\" />\n                                <div className=\"mt-3\">\n                                  <h4>{name[0].toUpperCase() +\n                                    name.slice(1)}</h4>\n                                  <p className=\"text-secondary mb-1\">{role}</p>\n                                  <p className=\"text-muted font-size-sm\">{enrollNo}</p>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"card mt-3\">\n\n                            <ul className=\"list-group list-group-flush\">\n                              <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-globe mr-2 icon-inline\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path></svg>School Id</h6>\n                                <span className=\"text-secondary\">{schoolCode}</span>\n                              </li>\n                              <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                <h6 className=\"mb-0\">School Name</h6>\n                                <span className=\"text-secondary\">{schoolName}</span>\n                              </li>\n                              <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                <h6 className=\"mb-0\">School Email </h6>\n                                <span className=\"text-secondary\">{schoolEmail}</span>\n                              </li>\n                              <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                <h6 className=\"mb-0\">School Phone </h6>\n                                <span className=\"text-secondary\">{schoolPhone}</span>\n                              </li>\n\n                            </ul>\n                          </div>\n                        </div>\n                        <div className=\"col-md-8\">\n                          <div className=\"card mb-3\">\n                            <div className=\"card-body\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-3\">\n                                  <h6 className=\"mb-0\">Full Name</h6>\n                                </div>\n                                <div className=\"col-sm-9 text-secondary\">\n                                  {name}             </div>\n                              </div>\n                              <hr />\n                              <div className=\"row\">\n                                <div className=\"col-sm-3\">\n                                  <h6 className=\"mb-0\">Email</h6>\n                                </div>\n                                <div className=\"col-sm-9 text-secondary\">\n                                  {email}                    </div>\n                              </div>\n                              <hr />\n                              <div className=\"row\">\n                                <div className=\"col-sm-3\">\n                                  <h6 className=\"mb-0\">Phone</h6>\n                                </div>\n                                <div className=\"col-sm-9 text-secondary\">\n                                  {phone}\n                                </div>\n                              </div>\n                              <hr />\n                              <div className=\"row\">\n                                <div className=\"col-sm-3\">\n                                  <h6 className=\"mb-0\">Dob</h6>\n                                </div>\n                                <div className=\"col-sm-9 text-secondary\">\n                                  {dob}\n                                </div>\n                              </div>\n                              <hr />\n                              <div className=\"row\">\n                                <div className=\"col-sm-3\">\n                                  <h6 className=\"mb-0\">Address</h6>\n                                </div>\n                                <div className=\"col-sm-9 text-secondary\">\n                                  {address}                    </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"row gutters-sm\">\n                            <div className=\"col-sm-6 mb-3\">\n                              <div className=\"card h-100\">\n                                <div className=\"card-body\">\n                                  <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Personal Details</h6>\n                                  <ul className=\"list-group list-group-flush\">\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                      <h6 className=\"mb-0\">Gender</h6>\n                                      <span className=\"text-secondary\">{gender}</span>\n                                    </li>\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                      <h6 className=\"mb-0\">Caste</h6>\n                                      <span className=\"text-secondary\">{caste}</span>\n                                    </li>\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                      <h6 className=\"mb-0\">Religion</h6>\n                                      <span className=\"text-secondary\">{religion}</span>\n                                    </li>\n\n\n                                  </ul>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-sm-6 mb-3\">\n                              <div className=\"card h-100\">\n                                <div className=\"card-body\">\n                                  <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-info mr-2\">assignment</i>Other Details</h6>\n                                  <ul className=\"list-group list-group-flush\">\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                      <h6 className=\"mb-0\">Aadhar Id</h6>\n                                      <span className=\"text-secondary\">{aadhar}</span>\n                                    </li>\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                      <h6 className=\"mb-0\">Pan No</h6>\n                                      <span className=\"text-secondary\">{panNo}</span>\n                                    </li>\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                                      <h6 className=\"mb-0\">Pincode</h6>\n                                      <span className=\"text-secondary\">{pincode}</span>\n                                    </li>\n\n\n                                  </ul>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n\n\n\n\n\n\n\n                  <br />\n                  <button onClick={() => this.setState({ changepassword: !changepassword })} className=\"btn btn-primary\"> {changepassword ? \"Cancel\" : \"Change Password\"}</button>\n\n\n                  {changepassword ? <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <div className=\"card\" style={{ width: '40%', boxShadow: '0 1px 3px 0 rgba(0,0,0,.1), 0 1px 2px 0 rgba(0,0,0,.06)' }}>\n                      <form className=\"card-body\" onSubmit={this.handleSubmit}>\n                        <h5 className=\"d-flex align-items-center mb-3\">Change Password</h5>\n\n                        <label>Enter Current Password</label>\n                        <input placeholder=\"Enter Here\" className=\"form-control\" required onChange={(e) => this.setState({ currentPassword: e.target.value })} /><br />\n                        <label>Enter New Password </label>\n                        <input placeholder=\"Enter Here\" className=\"form-control\" required onChange={(e) => this.setState({ password: e.target.value })} /><br />\n                        {this.state.spin1 ? <div style={{ textAlign: 'center' }}><Spin /></div> : <div style={{ textAlign: 'center' }}><button className=\"btn btn-success\" type=\"submit\">Submit</button></div>}\n                      </form>\n                    </div></div> : null}\n\n                </div> : null}\n\n\n              </div>\n\n\n            </Content>\n          </Layout>\n        </Layout>\n          <div  >\n            <Footer>ManageMent Footer</Footer>\n          </div>\n\n\n        </div> : <div style={{\n\n          textAlign: 'center', position: \"fixed\",\n          top: '50%',\n          left: '50%',\n\n          transform: \"translate(-50%, -50%)\"\n        }}> <Spin indicator={antIcon} /></div>}\n      </div>\n\n    );\n  }\n}\n\nexport default ManageMentDashboard\n\n\n\n\n// footer.style\n// style={{\n//   position: 'absolute',\n//   bottom: 0,\n//   width: '100%',\n//   height: '2.5rem'\n// }}","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/StudentMenu/ResultPage.jsx",["439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"import React, { useState, useEffect, createRef } from 'react';\nimport { InputLabel, MenuItem, Select, FormControl, TextField, Backdrop, CircularProgress } from '@material-ui/core';\nimport { CardDeck, Card, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport Cookies from 'js-cookie'\n\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 40 }} spin />;\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}\n))\nfunction ResultPage() {\n    //*************STATES************************ */\n    const classes = useStyles();\n    const wrapper = createRef();\n    const [ResultShow, setResultShow] = useState(false);\n    const [studentResultShow, setStudentResultShow] = useState(false);\n    const [uploadShow, setUploadShow] = useState(false);\n    const [uploadResultShow, setUploadResultShow] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [open1, setOpen1] = useState(false);\n    const [open2, setOpen2] = useState(false);\n    const [studentClass, setStudentClass] = useState('');\n    const [studentSection, setStudentSection] = useState('');\n    const [studentBranch, setStudentBranch] = useState('');\n    const [studentName, setStudentName] = useState('');\n    const [studentRollNo, setStudentRollNo] = useState('');\n    const [obtainedMarks, setObtainedMarks] = useState([])\n    const [maximumMarks, setMaximumMarks] = useState([]);\n    const [finalMarks, setFinalMarks] = useState([]);\n    const [classData, setClassData] = useState([]);\n    const [branchDisable, setbranchDisable] = useState(true);\n    const [branchName, setBranchName] = useState([]);\n    const [sectionName, setSectionName] = useState([]);\n    const [examName, setExamName] = useState([]);\n    const [examName1, setExamName1] = useState([]);\n    const [studentData, setStudentData] = useState([])\n    const [examSelect, setExamSelect] = useState('');\n    const [examSelectId, setExamSelectId] = useState('');\n    const [studentDetails, setStudentDetails] = useState(false);\n    const [backdrop, setBackDrop] = useState(false);\n    const [subjectName, setSubjectName] = useState([]);\n    const [studentFind, setStudentFind] = useState([]);\n    const [studentMarks, setStudentMarks] = useState([]);\n    const [totalObtainedMarks, setTotalObtainedMarks] = useState('');\n    const [totalMarks, setTotalMarks] = useState('');\n    const [spin, setSpin] = useState(false);\n    const [spin1, setSpin1] = useState(false)\n\n\n    useEffect(() => {\n\n        classData.splice(0)\n        examName.splice(0)\n        console.log(\"useEffect Called\");\n        axios.post(process.env.REACT_APP_SECURITY_API.concat(\"section\"), { hello: 'hello' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setClassData(res.data)\n        })\n\n        axios.post(process.env.REACT_APP_SECURITY_API.concat(\"exam\"), { hello: 'heelo' }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            setExamName(res.data)\n        })\n    }, [axios])\n    //********************Menu Functions And Back Function*******************/\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n\n\n\n    const handleClose1 = () => {\n        setOpen1(false);\n    };\n\n    const handleOpen1 = () => {\n        setOpen1(true);\n    };\n\n    const handleClose2 = () => {\n        setOpen2(false);\n    };\n\n    const handleOpen2 = () => {\n        setOpen2(true);\n    };\n\n    function back() {\n        setSpin1(false)\n        setResultShow(false)\n        setStudentResultShow(false)\n        setUploadShow(false);\n        setUploadResultShow(false);\n        setStudentDetails(false)\n        return ResultPage\n    }\n    function back2() {\n        setResultShow(false)\n        setStudentResultShow(false)\n        setUploadShow(true);\n        setUploadResultShow(false);\n        setStudentDetails(false)\n        return ResultPage\n    }\n    function back1() {\n        setSpin1(false)\n\n        setUploadResultShow(false)\n        setStudentResultShow(false)\n        return ResultPage\n    }\n    function classClick(e) {\n        console.log(e);\n        setSpin1(false)\n\n        branchName.splice(0);\n        setStudentBranch('')\n\n\n        if (e > 10) {\n\n            setbranchDisable(false)\n            var classFind = classData.find(o => o.Class == e)\n            if (!classFind) {\n                alert(\"No Branch\")\n                setbranchDisable(false)\n\n                return false\n            } else {\n                classFind.Branches.map((data) => {\n                    branchName.push(data.Branch);\n                })\n            }\n\n\n\n        } else {\n            setbranchDisable(true)\n            var classFind1 = classData.find(o => o.Class == e)\n            if (!classFind1) {\n                alert(\"No Section\")\n                return false\n            } else {\n                classFind1.Branches.map((data) => {\n                    setSectionName(data.Section)\n                })\n\n                var examFind = examName.filter((f) => {\n                    return f.Class === e\n                })\n                setExamName1(examFind)\n            }\n\n\n\n\n\n        }\n    }\n    function branchClick(e) {\n        var branchName = classData.find(o => o.Class == studentClass);\n        var branchFind = branchName.Branches.find(o => o.Branch == e);\n\n        if (!branchFind) {\n            alert(\"No Section\")\n            return false\n        } else {\n            setSectionName(branchFind.Section)\n\n            var examFind1 = examName.filter((el) => { return el.Class === studentClass && el.Branch === e })\n\n            setExamName1(examFind1)\n        }\n\n    }\n\n\n    function fetchClassDetails(e) {\n        setStudentDetails(true)\n        setSpin(false)\n        console.log(examSelect);\n        console.log(examSelect.split(\"/\")[0]);\n        e.preventDefault()\n\n\n        var DATA = {\n            Class: studentClass,\n            Branch: studentBranch,\n            Section: studentSection,\n\n        }\n        axios.post(process.env.REACT_APP_SECURITY_API.concat(\"studentdetails\"), DATA, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setStudentData(res.data)\n\n\n        })\n\n        axios.post(process.env.REACT_APP_SECURITY_API.concat(\"checkentry\"), { ExamId: examSelect.split(\"/\")[0] }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            setStudentFind(res.data)\n\n            setSpin(true)\n\n        })\n\n\n\n\n\n    }\n\n\n    function fetchSubjectName(e) {\n        e.preventDefault();\n        setExamSelect(e.target.value)\n        console.log(e.target.value);\n        console.log(examName1);\n        var subName = examName1.filter((o) => { return o.ExamId === e.target.value.split(\"/\")[0] })\n        console.log(subName);\n        subName.map(data => setSubjectName(data.Subjecs))\n    }\n\n    //********************Menu Functions And Back Function Ended*******************/\n    console.log(subjectName);\n    //**********************Upload FUNCTIONS AREA *************************/\n\n    function uploadGo(e) {\n        console.log(e.RollNo);\n\n        setStudentRollNo(e.RollNo)\n        setStudentName(e.Name);\n        setUploadResultShow(true)\n\n\n    }\n    async function uploadResult(e) {\n        var d = window.confirm(\"Upload Result\")\n\n        if (d) {\n            setBackDrop(true)\n            finalMarks.splice(0);\n            e.preventDefault();\n\n            obtainedMarks.map(data => {\n                var max = maximumMarks.find(o => o.Subject == data.Subject)\n                console.log(max);\n                var final = {\n                    Subject: data.Subject,\n                    obtainedMarks: data.Marks,\n                    MaximumMarks: max.maximumMarks,\n\n                }\n\n                finalMarks.push(final)\n            })\n\n\n\n\n            var Data = {\n                Marks: finalMarks,\n                ExamId: examSelect.split(\"/\")[0],\n                StudentRollNo: studentRollNo,\n                StudentClass: studentClass,\n                StudentBranch: studentBranch,\n                StudentSection: studentSection\n\n            }\n            console.log(Data);\n\n            await axios.post(process.env.REACT_APP_SECURITY_API.concat(\"resultupload\"), Data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                console.log(res.data);\n                alert(res.data.msg)\n                setBackDrop(false)\n                setUploadResultShow(false)\n                setSpin(false)\n                studentFind.splice(0);\n            })\n\n\n            axios.post(process.env.REACT_APP_SECURITY_API.concat(\"checkentry\"), { ExamId: examSelect.split(\"/\")[0] }, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n                console.log(res.data);\n                setStudentFind(res.data)\n\n                setSpin(true)\n\n            }\n            )\n        }\n\n\n\n\n    }\n\n    //**********************Upload FUNCTIONS AREA ENDED  *************************/\n\n    // **********************UPLOAD RESULT PAGE AREA********************************//\n    if (uploadResultShow) {\n\n        return (\n            <div ref={wrapper}>\n                <a className=\"btn btn-link\" style={{ marginLeft: '4%', marginTop: '-4%' }} onClick={back1}>/ back</a>\n\n                <div>\n\n                    <label style={{ textAlign: 'center', fontSize: 25 }} >{examSelect.split(\"/\")[1]} Result Upload</label>\n\n\n                    <div style={{ color: 'green', fontWeight: 800 }}>\n                        <p> Name : {studentName}         ,            Section : {studentRollNo}\n                        </p>\n\n\n                    </div>\n\n                    <form onSubmit={uploadResult} style={{ textAlign: 'center' }}>\n\n\n                        <table className=\"table\" style={{ border: '2px solid grey' }}>\n                            <thead>\n                                <tr>\n                                    <th>Subject</th>\n                                    <th>Obtained Marks</th>\n                                    <th>Maximum Marks</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {subjectName.map(data => (\n                                    <tr>\n                                        <td>{data}</td>\n                                        <td>\n\n\n                                            <TextField type=\"number\" onChange={(e) => {\n                                                var Find = obtainedMarks.find(o => o.Subject === data)\n                                                var Find2 = obtainedMarks.indexOf(Find)\n\n\n                                                if (Find) {\n                                                    obtainedMarks.splice(Find2, 1)\n                                                    obtainedMarks.push({ Subject: data, Marks: e.target.value })\n\n                                                } else {\n                                                    obtainedMarks.push({ Subject: data, Marks: e.target.value })\n                                                }\n                                            }} required style={{ width: '20%' }} /> </td>\n                                        <td>\n                                            <TextField type=\"number\" onChange={(e) => {\n                                                var mFind = maximumMarks.find(o => o.Subject === data)\n                                                var mFind2 = maximumMarks.indexOf(mFind)\n\n\n                                                if (mFind) {\n                                                    maximumMarks.splice(mFind2, 1)\n                                                    maximumMarks.push({ Subject: data, maximumMarks: e.target.value })\n\n                                                } else {\n                                                    maximumMarks.push({ Subject: data, maximumMarks: e.target.value })\n                                                }\n                                            }} style={{ width: '20%' }} />\n                                        </td>\n\n\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n\n                        <button className=\"btn btn-primary\" type='submit' style={{ textAlign: \"center\" }}>Upload </button>\n                    </form>\n                </div>\n                <Backdrop className={classes.backdrop} open={backdrop} >\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n\n            </div>\n\n        )\n    }\n    // **********************UPLOAD RESULT PAGE ENDED********************************//\n\n    if (studentDetails) {\n\n\n        return (\n            <div>\n                {spin ? <div>\n                    <Button style={{ marginLeft: '4%', marginTop: '-4%' }} variant=\"outline-danger\" onClick={back2}>Previous Page</Button>\n                    <br />\n                    <p style={{ textAlign: 'center', fontSize: 25 ,fontWeight: 'bolder', fontFamily: 'initial', color: '#001529'}}>{examSelect.split(\"/\")[1]} Result Upload</p>\n                    <table className=\"table\" style={{ textAlign: 'center', border: '5px solid #001529' }} >\n                        <thead style={{ fontSize: 18, backgroundColor: '#001529', color: 'white' }}>\n                            <tr>\n                                <th>Name</th>\n                                <th>Roll No</th>\n                                <th>Upload Result</th>\n\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {studentData.map(data => {\n\n                                var max = studentFind.find(o => o === data.RollNo);\n                                console.log(max);\n                                if (max === data.RollNo) {\n                                    return (<tr>\n                                        <td key={data.Name}>{data.Name}</td>\n                                        <td key={data.RollNo}>{data.RollNo}</td>\n\n\n                                        <td>  <button className=\"btn btn-success text-center\" >   Uploaded  </button> </td>\n\n                                    </tr>)\n                                }\n                                return (\n                                    <tr>\n                                        <td key={data.Name}>{data.Name}</td>\n                                        <td key={data.RollNo}>{data.RollNo}</td>\n\n\n                                        <td>  <button key={data.RollNo} value={data.RollNo} onClick={(e) => {\n                                            e.preventDefault()\n                                            uploadGo(data)\n\n                                        }} className=\"btn btn-primary text-center\" >  Upload  </button></td>\n\n                                    </tr>\n                                )\n\n\n\n\n\n\n\n                            })}\n\n                        </tbody>\n                    </table></div> : <div style={{ textAlign: 'center', marginTop: '4%' }}><Spin indicator={antIcon} /></div>}\n            </div>\n        )\n    }\n\n    //***********UPLOAD FETCH DATA**************/\n    if (uploadShow) {\n        return (\n            <div ref={wrapper}>\n                <Button style={{ marginLeft: '3%', marginTop: '-4%' }} variant=\"outline-danger\" onClick={back}>Previous Page</Button>\n\n                <div >\n\n\n\n                    <Card className=\"text-center\" style={{ width: \"50%\", marginLeft: '25%', border: '2px solid grey' }}>\n                        <Card.Header> Upload Student Result</Card.Header>\n                        <form onSubmit={fetchClassDetails}   >\n                            <Card.Body>\n\n\n\n                                <FormControl ref={wrapper} required className={classes.formControl}>\n                                    <InputLabel id=\"demo-controlled-open-select-label\">Class</InputLabel>\n                                    <Select\n                                        labelId=\"demo-controlled-open-select-label\"\n                                        id=\"demo-controlled-open-select\"\n                                        open={open}\n                                        onClose={handleClose}\n                                        onOpen={handleOpen}\n                                        value={studentClass}\n                                        onChange={(e) => {\n                                            setStudentClass(e.target.value)\n                                            classClick(e.target.value)\n                                        }\n                                        }\n                                    >\n\n                                        <MenuItem value={\"1\"}>Class I</MenuItem>\n                                        <MenuItem value={\"2\"}>Class II</MenuItem>\n                                        <MenuItem value={\"3\"}>Class III</MenuItem>\n                                        <MenuItem value={\"4\"}>Class IV</MenuItem>\n                                        <MenuItem value={\"5\"}>Class V</MenuItem>\n                                        <MenuItem value={\"6\"}>Class VI</MenuItem>\n                                        <MenuItem value={\"7\"}>Class VII</MenuItem>\n                                        <MenuItem value={\"8\"}>Class VIII</MenuItem>\n                                        <MenuItem value={\"9\"}>Class IX</MenuItem>\n                                        <MenuItem value={\"10\"}>Class X</MenuItem>\n                                        <MenuItem value={\"11\"}>Class XI</MenuItem>\n                                        <MenuItem value={\"12\"}>Class XII</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <FormControl disabled={branchDisable} required={!branchDisable} className={classes.formControl}>\n                                    <InputLabel id=\"demo-controlled-open-select-label\">Branch</InputLabel>\n                                    <Select\n                                        labelId=\"demo-controlled-open-select-label\"\n                                        id=\"demo-controlled-open-select\"\n                                        open={open2}\n                                        onClose={handleClose2}\n                                        onOpen={handleOpen2}\n                                        value={studentBranch}\n                                        onChange={(e) => {\n                                            setStudentBranch(e.target.value)\n                                            branchClick(e.target.value)\n                                        }}\n                                    >\n                                        {branchName.map(data => (\n\n                                            <MenuItem key={data} value={data}>{data}</MenuItem>\n                                        ))}\n\n                                    </Select>\n                                </FormControl>\n                                <br />\n                                <FormControl required className={classes.formControl}>\n                                    <InputLabel id=\"demo-controlled-open-select-label\">Section</InputLabel>\n                                    <Select\n                                        labelId=\"demo-controlled-open-select-label\"\n                                        id=\"demo-controlled-open-select\"\n                                        open={open1}\n                                        onClose={handleClose1}\n                                        onOpen={handleOpen1}\n                                        value={studentSection}\n                                        onChange={(e) => setStudentSection(e.target.value)}\n                                    >\n                                        {sectionName.map(data => (\n\n                                            <MenuItem key={data} value={data}>{data}</MenuItem>\n                                        ))}\n\n                                    </Select>\n                                </FormControl>\n                                <FormControl required className={classes.formControl}>\n                                    <InputLabel id=\"demo-controlled-open-select-label\">Exam Name</InputLabel>\n                                    <Select\n                                        onChange={(e) => fetchSubjectName(e)}\n\n                                    >\n                                        {examName1.map(data => (\n\n                                            <MenuItem key={data.ExamId} value={data.ExamId + \"/\" + data.ExamName}>{data.ExamName}  </MenuItem>\n                                        ))}\n\n                                    </Select>\n                                </FormControl>\n\n                                <br />\n\n\n\n                            </Card.Body>\n                            <Card.Footer >\n                                <button type=\"submit\" className=\"btn btn-primary text-center\">Fetch Class Details</button>\n\n                            </Card.Footer>\n                        </form>\n                    </Card>\n\n                </div>\n\n\n\n\n\n\n\n            </div>\n        )\n    }\n\n\n\n\n\n\n    //***********UPLOAD FETCH DATA ENDED**************/\n\n\n    //**************Result Show ********************** */\n\n    //***************ResultShow Functions *******************/\n    function resultShow(e) {\n        setStudentResultShow(false)\n        setStudentRollNo('')\n        studentMarks.splice(0)\n        console.log(e);\n        setStudentName(e.Name);\n        setStudentRollNo(e.RollNo)\n\n        var da2 = studentData.find(o => o.RollNo === e.RollNo)\n        console.log(da2);\n\n\n        if (da2.found === false) {\n            console.log(\"caleld\");\n            alert(\"Not uploaded\")\n            setStudentResultShow(false)\n\n            return false\n        } else {\n            console.log(\"else Called\");\n            var da = studentData.find(o => o.RollNo === e.RollNo)\n            console.log(da);\n            da.Marks.map(data => studentMarks.push(data))\n            setTotalObtainedMarks(da2.obtainedMarks)\n            setTotalMarks(da2.MaximumMarks)\n            setStudentResultShow(true)\n\n\n\n        }\n\n\n\n\n    }\n\n    console.log(studentMarks);\n    console.log(studentData);\n\n    function fetchClassDetails1(e) {\n        setSpin1(true)\n        setSpin(false)\n        e.preventDefault();\n        console.log(studentClass);\n        console.log(studentBranch);\n        console.log(studentSection);\n        console.log(examSelect);\n\n        var Data = {\n            Class: studentClass,\n            Branch: studentBranch,\n            Section: studentSection,\n            ExamId: examSelect.split(\"/\")[0]\n        }\n\n\n        axios.post(process.env.REACT_APP_SECURITY_API.concat(\"resultShow\"), Data, { headers: { Authorization: Cookies.get(\"Authorization\") } }).then((res) => {\n            console.log(res.data);\n            console.log(res.data.Marks);\n            setStudentData(res.data)\n            setSpin(true)\n        })\n\n    }\n    //***************ResultShow Functions Ended *******************/\n    console.log(studentData);\n\n    if (studentResultShow) {\n        return (\n            <div ref={wrapper} >\n                <Button variant=\"outline-danger\" style={{ marginLeft: '4%', marginTop: '-5%' }} onClick={back}>Previous Page</Button>\n                <Button variant=\"outline-danger\" style={{ marginTop: '-5%' }} onClick={back1}>back</Button>\n\n                <div style={{ textAlign: 'center' }}>\n                    <p style={{ fontSize: 30, fontWeight: 'bolder', fontFamily: 'initial', color: '#001529', textAlign: 'center' }}>Result</p><hr />\n\n\n                    <table className=\"table\" >\n                        <tbody style={{ fontSize: 18, backgroundColor: '#001529', color: 'white' }}>\n                            <tr>\n                                <th>Student Name : </th>\n                                <th>{studentName}</th>\n                                <th>Student Roll No. :</th>\n                                <th>{studentRollNo}</th>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <div style={{ border: '2px solid grey' }}>    <table className=\"table\">\n                        <thead >\n                            <tr>\n                                <th>Subject</th>\n                                <th>Obtained Marks</th>\n                                <th>Practical Marks</th>\n                                <th>Maximum Marks</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {studentMarks.map(data => (\n                                <tr>\n                                    <td>{data.Subject}</td>\n                                    <td>{data.obtainedMarks}</td>\n                                    <td>{data.MaximumMarks}</td>\n                                    <td>{data.MaximumMarks}</td>\n                                </tr>\n\n                            ))}\n\n\n                        </tbody>\n                        <tfoot  >\n                            <tr style={{ color: 'red' }} >\n\n                                <td></td>\n                                <td></td>\n                                <td >Total Marks </td>\n                                <td>{totalObtainedMarks}/{totalMarks}</td>\n\n                            </tr>\n                        </tfoot>\n                    </table></div>\n\n\n                </div>\n\n\n            </div>\n        )\n\n    }\n    //**************Result Show Ended ********************** */\n\n    //**************Result Fetch Start********************** */\n\n    if (ResultShow) {\n\n        return (\n            <div ref={wrapper}>\n                <Button variant=\"outline-danger\" style={{ marginLeft: '4%', marginTop: '-5%' }} onClick={back}>Previous Page</Button>\n                <Card className=\"text-center\" style={{ width: \"50%\", marginLeft: '25%', border: '2px solid grey' }}>\n                    <Card.Header>  Student Result</Card.Header>\n                    <form onSubmit={fetchClassDetails1}   >\n                        <Card.Body>\n\n\n\n                            <FormControl ref={wrapper} required className={classes.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Class</InputLabel>\n                                <Select\n                                    labelId=\"demo-controlled-open-select-label\"\n                                    id=\"demo-controlled-open-select\"\n                                    open={open}\n                                    onClose={handleClose}\n                                    onOpen={handleOpen}\n                                    value={studentClass}\n                                    onChange={(e) => {\n                                        setStudentClass(e.target.value)\n                                        classClick(e.target.value)\n                                    }\n                                    }\n                                >\n\n                                    <MenuItem value={\"1\"}>Class I</MenuItem>\n                                    <MenuItem value={\"2\"}>Class II</MenuItem>\n                                    <MenuItem value={\"3\"}>Class III</MenuItem>\n                                    <MenuItem value={\"4\"}>Class IV</MenuItem>\n                                    <MenuItem value={\"5\"}>Class V</MenuItem>\n                                    <MenuItem value={\"6\"}>Class VI</MenuItem>\n                                    <MenuItem value={\"7\"}>Class VII</MenuItem>\n                                    <MenuItem value={\"8\"}>Class VIII</MenuItem>\n                                    <MenuItem value={\"9\"}>Class IX</MenuItem>\n                                    <MenuItem value={\"10\"}>Class X</MenuItem>\n                                    <MenuItem value={\"11\"}>Class XI</MenuItem>\n                                    <MenuItem value={\"12\"}>Class XII</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl disabled={branchDisable} required={!branchDisable} className={classes.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Branch</InputLabel>\n                                <Select\n                                    labelId=\"demo-controlled-open-select-label\"\n                                    id=\"demo-controlled-open-select\"\n                                    open={open2}\n                                    onClose={handleClose2}\n                                    onOpen={handleOpen2}\n                                    value={studentBranch}\n                                    onChange={(e) => {\n                                        setStudentBranch(e.target.value)\n                                        branchClick(e.target.value)\n                                    }}\n                                >\n                                    {branchName.map(data => (\n\n                                        <MenuItem key={data} value={data}>{data}</MenuItem>\n                                    ))}\n\n                                </Select>\n                            </FormControl>\n                            <br />\n                            <FormControl required className={classes.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Section</InputLabel>\n                                <Select\n                                    labelId=\"demo-controlled-open-select-label\"\n                                    id=\"demo-controlled-open-select\"\n                                    open={open1}\n                                    onClose={handleClose1}\n                                    onOpen={handleOpen1}\n                                    value={studentSection}\n                                    onChange={(e) => setStudentSection(e.target.value)}\n                                >\n                                    {sectionName.map(data => (\n\n                                        <MenuItem key={data} value={data}>{data}</MenuItem>\n                                    ))}\n\n                                </Select>\n                            </FormControl>\n                            <FormControl required className={classes.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Exam Name</InputLabel>\n                                <Select onChange={(e) => {\n\n                                    setExamSelect(e.target.value)\n                                    setSpin1(false)\n                                }}\n                                >\n                                    {examName1.map(data => (\n\n                                        <MenuItem key={data.ExamId} value={data.ExamId + \"/\" + data.ExamName}>{data.ExamName}  </MenuItem>\n                                    ))}\n\n                                </Select>\n                            </FormControl>\n\n                            <br />\n\n\n\n                        </Card.Body>\n                        <Card.Footer >\n                            <button type=\"submit\" className=\"btn btn-primary text-center\">Fetch Class Details</button>\n\n                        </Card.Footer>\n                    </form>\n                </Card>\n\n\n\n                <br />\n\n\n                {spin1 ? spin ? <table style={{ textAlign: 'center', border: '5px solid #001529' }} className=\"table\">\n                    <thead style={{ fontSize: 18, backgroundColor: '#001529', color: 'white' }}>\n                        <tr>\n                            <th>Name</th>\n                            <th>Roll No</th>\n                            <th>Fetch Result</th>\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {studentData.map(data => (\n                            <tr>\n                                <td>{data.Name}</td>\n                                <td>{data.RollNo}</td>\n\n                                <td> <button onClick={(e) => {\n                                    resultShow(data)\n                                    e.preventDefault()\n                                }} className=\"btn btn-primary text-center\" >Fetch </button> </td>\n\n                            </tr>\n\n                        ))}\n\n                    </tbody>\n                </table> : <div style={{ textAlign: 'center', marginTop: '4%' }}><Spin indicator={antIcon} /></div> : null} <hr />\n\n\n\n\n            </div>\n        )\n    }\n    //**************Result Fetch Ended********************** */\n\n\n\n\n\n\n\n    // ************************** Main Page **********************//\n    return (\n        <div ref={wrapper} style={{ marginLeft: '20%', width: '50%' }}>\n            <br />\n            <CardDeck>\n                {/* firstCard */}\n                <Card>\n                    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n                    <Card.Body>\n                        <Card.Title>Upload Result</Card.Title>\n\n                    </Card.Body>\n                    <Card.Footer style={{ textAlign: 'center' }}>\n                        <Button onClick={() => setUploadShow(true)}>Upload</Button>\n                    </Card.Footer>\n                </Card>\n                <Card>\n                    <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n                    <Card.Body>\n                        <Card.Title>Fetch Result</Card.Title>\n\n                    </Card.Body>\n                    <Card.Footer style={{ textAlign: 'center' }}>\n                        <Button onClick={() => setResultShow(true)}> Fetch </Button>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br />\n        </div>\n    )\n}\n\nexport default ResultPage\n","/home/pranjul/Desktop/pratham/hello/src/Component/ManageMentDashboard/TImeTableMenu/TimeTableCard.jsx",["456"],"/home/pranjul/Desktop/pratham/hello/src/Component/TeacherDashboard/TeacherCalender/TeacherCalender.jsx",[],"/home/pranjul/Desktop/pratham/hello/src/Component/SadminDashboard/SuperAdmin/UpdateandDelete/DeletePage.jsx",["457"],"/home/pranjul/Desktop/pratham/hello/src/Component/StudentDashboard/Calender/DateSearcher.jsx",[],{"ruleId":"458","severity":1,"message":"459","line":9,"column":8,"nodeType":"460","messageId":"461","endLine":9,"endColumn":15},{"ruleId":"462","replacedBy":"463"},{"ruleId":"464","replacedBy":"465"},{"ruleId":"458","severity":1,"message":"466","line":6,"column":10,"nodeType":"460","messageId":"461","endLine":6,"endColumn":14},{"ruleId":"458","severity":1,"message":"467","line":6,"column":16,"nodeType":"460","messageId":"461","endLine":6,"endColumn":19},{"ruleId":"458","severity":1,"message":"468","line":12,"column":12,"nodeType":"460","messageId":"461","endLine":12,"endColumn":22},{"ruleId":"458","severity":1,"message":"469","line":13,"column":12,"nodeType":"460","messageId":"461","endLine":13,"endColumn":16},{"ruleId":"458","severity":1,"message":"470","line":14,"column":12,"nodeType":"460","messageId":"461","endLine":14,"endColumn":16},{"ruleId":"458","severity":1,"message":"471","line":15,"column":12,"nodeType":"460","messageId":"461","endLine":15,"endColumn":20},{"ruleId":"458","severity":1,"message":"472","line":16,"column":12,"nodeType":"460","messageId":"461","endLine":16,"endColumn":17},{"ruleId":"458","severity":1,"message":"473","line":17,"column":12,"nodeType":"460","messageId":"461","endLine":17,"endColumn":17},{"ruleId":"458","severity":1,"message":"474","line":18,"column":12,"nodeType":"460","messageId":"461","endLine":18,"endColumn":15},{"ruleId":"458","severity":1,"message":"475","line":19,"column":12,"nodeType":"460","messageId":"461","endLine":19,"endColumn":18},{"ruleId":"458","severity":1,"message":"476","line":20,"column":12,"nodeType":"460","messageId":"461","endLine":20,"endColumn":17},{"ruleId":"458","severity":1,"message":"477","line":21,"column":12,"nodeType":"460","messageId":"461","endLine":21,"endColumn":18},{"ruleId":"458","severity":1,"message":"478","line":22,"column":12,"nodeType":"460","messageId":"461","endLine":22,"endColumn":17},{"ruleId":"458","severity":1,"message":"479","line":23,"column":12,"nodeType":"460","messageId":"461","endLine":23,"endColumn":20},{"ruleId":"458","severity":1,"message":"480","line":24,"column":12,"nodeType":"460","messageId":"461","endLine":24,"endColumn":19},{"ruleId":"458","severity":1,"message":"481","line":25,"column":12,"nodeType":"460","messageId":"461","endLine":25,"endColumn":19},{"ruleId":"462","replacedBy":"482"},{"ruleId":"464","replacedBy":"483"},{"ruleId":"462","replacedBy":"484"},{"ruleId":"464","replacedBy":"485"},{"ruleId":"486","severity":1,"message":"487","line":284,"column":107,"nodeType":"488","endLine":284,"endColumn":230},{"ruleId":"486","severity":1,"message":"487","line":322,"column":138,"nodeType":"488","endLine":322,"endColumn":262},{"ruleId":"462","replacedBy":"489"},{"ruleId":"464","replacedBy":"490"},{"ruleId":"458","severity":1,"message":"491","line":21,"column":12,"nodeType":"460","messageId":"461","endLine":21,"endColumn":22},{"ruleId":"458","severity":1,"message":"492","line":24,"column":21,"nodeType":"460","messageId":"461","endLine":24,"endColumn":31},{"ruleId":"458","severity":1,"message":"493","line":37,"column":11,"nodeType":"460","messageId":"461","endLine":37,"endColumn":15},{"ruleId":"458","severity":1,"message":"494","line":14,"column":24,"nodeType":"460","messageId":"461","endLine":14,"endColumn":37},{"ruleId":"495","severity":1,"message":"496","line":48,"column":8,"nodeType":"497","endLine":48,"endColumn":10,"suggestions":"498"},{"ruleId":"499","severity":1,"message":"500","line":56,"column":23,"nodeType":"501","messageId":"502","endLine":56,"endColumn":25},{"ruleId":"503","severity":1,"message":"504","line":129,"column":86,"nodeType":"505","messageId":"506","endLine":129,"endColumn":88},{"ruleId":"495","severity":1,"message":"507","line":19,"column":8,"nodeType":"497","endLine":19,"endColumn":10,"suggestions":"508"},{"ruleId":"458","severity":1,"message":"509","line":2,"column":53,"nodeType":"460","messageId":"461","endLine":2,"endColumn":62},{"ruleId":"458","severity":1,"message":"510","line":2,"column":64,"nodeType":"460","messageId":"461","endLine":2,"endColumn":72},{"ruleId":"458","severity":1,"message":"511","line":2,"column":74,"nodeType":"460","messageId":"461","endLine":2,"endColumn":90},{"ruleId":"458","severity":1,"message":"512","line":3,"column":10,"nodeType":"460","messageId":"461","endLine":3,"endColumn":18},{"ruleId":"458","severity":1,"message":"513","line":47,"column":24,"nodeType":"460","messageId":"461","endLine":47,"endColumn":37},{"ruleId":"458","severity":1,"message":"514","line":53,"column":26,"nodeType":"460","messageId":"461","endLine":53,"endColumn":41},{"ruleId":"495","severity":1,"message":"515","line":75,"column":8,"nodeType":"497","endLine":75,"endColumn":15,"suggestions":"516"},{"ruleId":"503","severity":1,"message":"504","line":124,"column":57,"nodeType":"505","messageId":"506","endLine":124,"endColumn":59},{"ruleId":"499","severity":1,"message":"517","line":131,"column":47,"nodeType":"501","messageId":"518","endLine":131,"endColumn":49},{"ruleId":"503","severity":1,"message":"504","line":140,"column":58,"nodeType":"505","messageId":"506","endLine":140,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":145,"column":48,"nodeType":"501","messageId":"518","endLine":145,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":162,"column":54,"nodeType":"505","messageId":"506","endLine":162,"endColumn":56},{"ruleId":"503","severity":1,"message":"504","line":163,"column":65,"nodeType":"505","messageId":"506","endLine":163,"endColumn":67},{"ruleId":"458","severity":1,"message":"519","line":1,"column":38,"nodeType":"460","messageId":"461","endLine":1,"endColumn":44},{"ruleId":"458","severity":1,"message":"520","line":16,"column":24,"nodeType":"460","messageId":"461","endLine":16,"endColumn":37},{"ruleId":"503","severity":1,"message":"504","line":269,"column":82,"nodeType":"505","messageId":"506","endLine":269,"endColumn":84},{"ruleId":"458","severity":1,"message":"521","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":25},{"ruleId":"458","severity":1,"message":"522","line":2,"column":13,"nodeType":"460","messageId":"461","endLine":2,"endColumn":24},{"ruleId":"458","severity":1,"message":"513","line":61,"column":22,"nodeType":"460","messageId":"461","endLine":61,"endColumn":35},{"ruleId":"458","severity":1,"message":"523","line":64,"column":10,"nodeType":"460","messageId":"461","endLine":64,"endColumn":24},{"ruleId":"495","severity":1,"message":"524","line":83,"column":6,"nodeType":"497","endLine":83,"endColumn":13,"suggestions":"525"},{"ruleId":"503","severity":1,"message":"504","line":121,"column":51,"nodeType":"505","messageId":"506","endLine":121,"endColumn":53},{"ruleId":"499","severity":1,"message":"517","line":126,"column":39,"nodeType":"501","messageId":"518","endLine":126,"endColumn":41},{"ruleId":"503","severity":1,"message":"504","line":135,"column":52,"nodeType":"505","messageId":"506","endLine":135,"endColumn":54},{"ruleId":"499","severity":1,"message":"517","line":140,"column":40,"nodeType":"501","messageId":"518","endLine":140,"endColumn":42},{"ruleId":"503","severity":1,"message":"504","line":152,"column":50,"nodeType":"505","messageId":"506","endLine":152,"endColumn":52},{"ruleId":"503","severity":1,"message":"504","line":153,"column":61,"nodeType":"505","messageId":"506","endLine":153,"endColumn":63},{"ruleId":"499","severity":1,"message":"517","line":90,"column":46,"nodeType":"501","messageId":"518","endLine":90,"endColumn":48},{"ruleId":"503","severity":1,"message":"504","line":100,"column":58,"nodeType":"505","messageId":"506","endLine":100,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":106,"column":48,"nodeType":"501","messageId":"518","endLine":106,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":123,"column":65,"nodeType":"505","messageId":"506","endLine":123,"endColumn":67},{"ruleId":"503","severity":1,"message":"504","line":124,"column":65,"nodeType":"505","messageId":"506","endLine":124,"endColumn":67},{"ruleId":"458","severity":1,"message":"526","line":2,"column":10,"nodeType":"460","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"458","severity":1,"message":"527","line":2,"column":22,"nodeType":"460","messageId":"461","endLine":2,"endColumn":30},{"ruleId":"458","severity":1,"message":"528","line":2,"column":32,"nodeType":"460","messageId":"461","endLine":2,"endColumn":38},{"ruleId":"458","severity":1,"message":"529","line":2,"column":40,"nodeType":"460","messageId":"461","endLine":2,"endColumn":51},{"ruleId":"458","severity":1,"message":"530","line":4,"column":10,"nodeType":"460","messageId":"461","endLine":4,"endColumn":14},{"ruleId":"495","severity":1,"message":"531","line":75,"column":8,"nodeType":"497","endLine":75,"endColumn":15,"suggestions":"532"},{"ruleId":"533","severity":1,"message":"534","line":266,"column":17,"nodeType":"488","endLine":266,"endColumn":107},{"ruleId":"533","severity":1,"message":"534","line":512,"column":17,"nodeType":"488","endLine":512,"endColumn":110},{"ruleId":"499","severity":1,"message":"517","line":75,"column":38,"nodeType":"501","messageId":"518","endLine":75,"endColumn":40},{"ruleId":"458","severity":1,"message":"535","line":9,"column":3,"nodeType":"460","messageId":"461","endLine":9,"endColumn":22},{"ruleId":"458","severity":1,"message":"536","line":420,"column":59,"nodeType":"460","messageId":"461","endLine":420,"endColumn":71},{"ruleId":"486","severity":1,"message":"487","line":426,"column":109,"nodeType":"488","endLine":426,"endColumn":232},{"ruleId":"486","severity":1,"message":"487","line":452,"column":138,"nodeType":"488","endLine":452,"endColumn":262},{"ruleId":"458","severity":1,"message":"466","line":27,"column":10,"nodeType":"460","messageId":"461","endLine":27,"endColumn":14},{"ruleId":"458","severity":1,"message":"467","line":27,"column":16,"nodeType":"460","messageId":"461","endLine":27,"endColumn":19},{"ruleId":"486","severity":1,"message":"487","line":269,"column":109,"nodeType":"488","endLine":269,"endColumn":232},{"ruleId":"486","severity":1,"message":"487","line":293,"column":138,"nodeType":"488","endLine":293,"endColumn":262},{"ruleId":"537","severity":1,"message":"538","line":205,"column":1,"nodeType":"539","messageId":"540","endLine":280,"endColumn":4},{"ruleId":"458","severity":1,"message":"513","line":66,"column":24,"nodeType":"460","messageId":"461","endLine":66,"endColumn":37},{"ruleId":"503","severity":1,"message":"504","line":98,"column":57,"nodeType":"505","messageId":"506","endLine":98,"endColumn":59},{"ruleId":"499","severity":1,"message":"517","line":103,"column":47,"nodeType":"501","messageId":"518","endLine":103,"endColumn":49},{"ruleId":"503","severity":1,"message":"504","line":111,"column":58,"nodeType":"505","messageId":"506","endLine":111,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":116,"column":48,"nodeType":"501","messageId":"518","endLine":116,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":126,"column":54,"nodeType":"505","messageId":"506","endLine":126,"endColumn":56},{"ruleId":"503","severity":1,"message":"504","line":127,"column":65,"nodeType":"505","messageId":"506","endLine":127,"endColumn":67},{"ruleId":"458","severity":1,"message":"541","line":10,"column":24,"nodeType":"460","messageId":"461","endLine":10,"endColumn":37},{"ruleId":"458","severity":1,"message":"542","line":30,"column":24,"nodeType":"460","messageId":"461","endLine":30,"endColumn":37},{"ruleId":"458","severity":1,"message":"513","line":51,"column":22,"nodeType":"460","messageId":"461","endLine":51,"endColumn":35},{"ruleId":"495","severity":1,"message":"531","line":71,"column":6,"nodeType":"497","endLine":71,"endColumn":13,"suggestions":"543"},{"ruleId":"503","severity":1,"message":"504","line":83,"column":51,"nodeType":"505","messageId":"506","endLine":83,"endColumn":53},{"ruleId":"499","severity":1,"message":"517","line":89,"column":39,"nodeType":"501","messageId":"518","endLine":89,"endColumn":41},{"ruleId":"503","severity":1,"message":"504","line":98,"column":52,"nodeType":"505","messageId":"506","endLine":98,"endColumn":54},{"ruleId":"499","severity":1,"message":"517","line":103,"column":40,"nodeType":"501","messageId":"518","endLine":103,"endColumn":42},{"ruleId":"503","severity":1,"message":"504","line":118,"column":50,"nodeType":"505","messageId":"506","endLine":118,"endColumn":52},{"ruleId":"503","severity":1,"message":"504","line":119,"column":61,"nodeType":"505","messageId":"506","endLine":119,"endColumn":63},{"ruleId":"499","severity":1,"message":"517","line":95,"column":46,"nodeType":"501","messageId":"518","endLine":95,"endColumn":48},{"ruleId":"458","severity":1,"message":"509","line":6,"column":10,"nodeType":"460","messageId":"461","endLine":6,"endColumn":19},{"ruleId":"499","severity":1,"message":"517","line":72,"column":42,"nodeType":"501","messageId":"518","endLine":72,"endColumn":44},{"ruleId":"458","severity":1,"message":"544","line":32,"column":21,"nodeType":"460","messageId":"461","endLine":32,"endColumn":31},{"ruleId":"458","severity":1,"message":"513","line":40,"column":24,"nodeType":"460","messageId":"461","endLine":40,"endColumn":37},{"ruleId":"458","severity":1,"message":"545","line":46,"column":28,"nodeType":"460","messageId":"461","endLine":46,"endColumn":45},{"ruleId":"458","severity":1,"message":"546","line":47,"column":28,"nodeType":"460","messageId":"461","endLine":47,"endColumn":45},{"ruleId":"458","severity":1,"message":"547","line":48,"column":25,"nodeType":"460","messageId":"461","endLine":48,"endColumn":39},{"ruleId":"503","severity":1,"message":"504","line":72,"column":57,"nodeType":"505","messageId":"506","endLine":72,"endColumn":59},{"ruleId":"499","severity":1,"message":"517","line":79,"column":47,"nodeType":"501","messageId":"518","endLine":79,"endColumn":49},{"ruleId":"503","severity":1,"message":"504","line":87,"column":58,"nodeType":"505","messageId":"506","endLine":87,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":92,"column":48,"nodeType":"501","messageId":"518","endLine":92,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":103,"column":54,"nodeType":"505","messageId":"506","endLine":103,"endColumn":56},{"ruleId":"503","severity":1,"message":"504","line":104,"column":65,"nodeType":"505","messageId":"506","endLine":104,"endColumn":67},{"ruleId":"503","severity":1,"message":"504","line":133,"column":58,"nodeType":"505","messageId":"506","endLine":133,"endColumn":60},{"ruleId":"503","severity":1,"message":"504","line":134,"column":69,"nodeType":"505","messageId":"506","endLine":134,"endColumn":71},{"ruleId":"503","severity":1,"message":"504","line":179,"column":54,"nodeType":"505","messageId":"506","endLine":179,"endColumn":56},{"ruleId":"499","severity":1,"message":"517","line":180,"column":40,"nodeType":"501","messageId":"518","endLine":180,"endColumn":42},{"ruleId":"499","severity":1,"message":"517","line":187,"column":43,"nodeType":"501","messageId":"518","endLine":187,"endColumn":45},{"ruleId":"499","severity":1,"message":"517","line":217,"column":26,"nodeType":"501","messageId":"518","endLine":217,"endColumn":28},{"ruleId":"499","severity":1,"message":"517","line":220,"column":28,"nodeType":"501","messageId":"518","endLine":220,"endColumn":30},{"ruleId":"499","severity":1,"message":"500","line":239,"column":33,"nodeType":"501","messageId":"502","endLine":239,"endColumn":35},{"ruleId":"537","severity":1,"message":"538","line":184,"column":1,"nodeType":"539","messageId":"540","endLine":184,"endColumn":17},{"ruleId":"458","severity":1,"message":"513","line":75,"column":22,"nodeType":"460","messageId":"461","endLine":75,"endColumn":35},{"ruleId":"458","severity":1,"message":"548","line":82,"column":10,"nodeType":"460","messageId":"461","endLine":82,"endColumn":12},{"ruleId":"503","severity":1,"message":"504","line":146,"column":51,"nodeType":"505","messageId":"506","endLine":146,"endColumn":53},{"ruleId":"499","severity":1,"message":"517","line":151,"column":39,"nodeType":"501","messageId":"518","endLine":151,"endColumn":41},{"ruleId":"503","severity":1,"message":"504","line":159,"column":52,"nodeType":"505","messageId":"506","endLine":159,"endColumn":54},{"ruleId":"499","severity":1,"message":"517","line":164,"column":40,"nodeType":"501","messageId":"518","endLine":164,"endColumn":42},{"ruleId":"503","severity":1,"message":"504","line":174,"column":50,"nodeType":"505","messageId":"506","endLine":174,"endColumn":52},{"ruleId":"503","severity":1,"message":"504","line":175,"column":61,"nodeType":"505","messageId":"506","endLine":175,"endColumn":63},{"ruleId":"533","severity":1,"message":"534","line":380,"column":9,"nodeType":"488","endLine":380,"endColumn":99},{"ruleId":"549","severity":1,"message":"550","line":392,"column":13,"nodeType":"488","endLine":392,"endColumn":108},{"ruleId":"495","severity":1,"message":"551","line":30,"column":8,"nodeType":"497","endLine":30,"endColumn":10,"suggestions":"552"},{"ruleId":"499","severity":1,"message":"517","line":102,"column":46,"nodeType":"501","messageId":"518","endLine":102,"endColumn":48},{"ruleId":"503","severity":1,"message":"504","line":111,"column":58,"nodeType":"505","messageId":"506","endLine":111,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":119,"column":48,"nodeType":"501","messageId":"518","endLine":119,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":132,"column":65,"nodeType":"505","messageId":"506","endLine":132,"endColumn":67},{"ruleId":"503","severity":1,"message":"504","line":133,"column":65,"nodeType":"505","messageId":"506","endLine":133,"endColumn":67},{"ruleId":"499","severity":1,"message":"517","line":94,"column":46,"nodeType":"501","messageId":"518","endLine":94,"endColumn":48},{"ruleId":"503","severity":1,"message":"504","line":103,"column":58,"nodeType":"505","messageId":"506","endLine":103,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":108,"column":48,"nodeType":"501","messageId":"518","endLine":108,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":124,"column":65,"nodeType":"505","messageId":"506","endLine":124,"endColumn":67},{"ruleId":"503","severity":1,"message":"504","line":125,"column":65,"nodeType":"505","messageId":"506","endLine":125,"endColumn":67},{"ruleId":"495","severity":1,"message":"553","line":64,"column":8,"nodeType":"497","endLine":64,"endColumn":10,"suggestions":"554"},{"ruleId":"555","severity":1,"message":"556","line":79,"column":13,"nodeType":"460","messageId":"557","endLine":79,"endColumn":14},{"ruleId":"458","severity":1,"message":"558","line":28,"column":11,"nodeType":"460","messageId":"461","endLine":28,"endColumn":18},{"ruleId":"458","severity":1,"message":"559","line":31,"column":12,"nodeType":"460","messageId":"461","endLine":31,"endColumn":27},{"ruleId":"458","severity":1,"message":"560","line":36,"column":12,"nodeType":"460","messageId":"461","endLine":36,"endColumn":16},{"ruleId":"495","severity":1,"message":"531","line":70,"column":8,"nodeType":"497","endLine":70,"endColumn":15,"suggestions":"561"},{"ruleId":"458","severity":1,"message":"513","line":13,"column":24,"nodeType":"460","messageId":"461","endLine":13,"endColumn":37},{"ruleId":"499","severity":1,"message":"517","line":68,"column":46,"nodeType":"501","messageId":"518","endLine":68,"endColumn":48},{"ruleId":"503","severity":1,"message":"504","line":79,"column":58,"nodeType":"505","messageId":"506","endLine":79,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":85,"column":48,"nodeType":"501","messageId":"518","endLine":85,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":103,"column":54,"nodeType":"505","messageId":"506","endLine":103,"endColumn":56},{"ruleId":"503","severity":1,"message":"504","line":104,"column":65,"nodeType":"505","messageId":"506","endLine":104,"endColumn":67},{"ruleId":"499","severity":1,"message":"517","line":129,"column":24,"nodeType":"501","messageId":"518","endLine":129,"endColumn":26},{"ruleId":"458","severity":1,"message":"530","line":2,"column":21,"nodeType":"460","messageId":"461","endLine":2,"endColumn":25},{"ruleId":"458","severity":1,"message":"513","line":11,"column":24,"nodeType":"460","messageId":"461","endLine":11,"endColumn":37},{"ruleId":"495","severity":1,"message":"562","line":25,"column":15,"nodeType":"501","endLine":38,"endColumn":6},{"ruleId":"495","severity":1,"message":"531","line":38,"column":8,"nodeType":"497","endLine":38,"endColumn":15,"suggestions":"563"},{"ruleId":"503","severity":1,"message":"504","line":49,"column":57,"nodeType":"505","messageId":"506","endLine":49,"endColumn":59},{"ruleId":"499","severity":1,"message":"517","line":55,"column":47,"nodeType":"501","messageId":"518","endLine":55,"endColumn":49},{"ruleId":"503","severity":1,"message":"504","line":64,"column":58,"nodeType":"505","messageId":"506","endLine":64,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":69,"column":48,"nodeType":"501","messageId":"518","endLine":69,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":84,"column":54,"nodeType":"505","messageId":"506","endLine":84,"endColumn":56},{"ruleId":"503","severity":1,"message":"504","line":85,"column":65,"nodeType":"505","messageId":"506","endLine":85,"endColumn":67},{"ruleId":"499","severity":1,"message":"517","line":82,"column":46,"nodeType":"501","messageId":"518","endLine":82,"endColumn":48},{"ruleId":"503","severity":1,"message":"504","line":92,"column":58,"nodeType":"505","messageId":"506","endLine":92,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":98,"column":48,"nodeType":"501","messageId":"518","endLine":98,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":115,"column":65,"nodeType":"505","messageId":"506","endLine":115,"endColumn":67},{"ruleId":"503","severity":1,"message":"504","line":116,"column":65,"nodeType":"505","messageId":"506","endLine":116,"endColumn":67},{"ruleId":"486","severity":1,"message":"487","line":239,"column":107,"nodeType":"488","endLine":239,"endColumn":230},{"ruleId":"486","severity":1,"message":"487","line":271,"column":136,"nodeType":"488","endLine":271,"endColumn":260},{"ruleId":"458","severity":1,"message":"564","line":48,"column":27,"nodeType":"460","messageId":"461","endLine":48,"endColumn":43},{"ruleId":"458","severity":1,"message":"565","line":49,"column":26,"nodeType":"460","messageId":"461","endLine":49,"endColumn":41},{"ruleId":"458","severity":1,"message":"566","line":50,"column":24,"nodeType":"460","messageId":"461","endLine":50,"endColumn":37},{"ruleId":"458","severity":1,"message":"513","line":53,"column":24,"nodeType":"460","messageId":"461","endLine":53,"endColumn":37},{"ruleId":"458","severity":1,"message":"567","line":59,"column":12,"nodeType":"460","messageId":"461","endLine":59,"endColumn":24},{"ruleId":"458","severity":1,"message":"568","line":59,"column":26,"nodeType":"460","messageId":"461","endLine":59,"endColumn":41},{"ruleId":"458","severity":1,"message":"514","line":64,"column":26,"nodeType":"460","messageId":"461","endLine":64,"endColumn":41},{"ruleId":"495","severity":1,"message":"515","line":84,"column":8,"nodeType":"497","endLine":84,"endColumn":15,"suggestions":"569"},{"ruleId":"503","severity":1,"message":"504","line":149,"column":57,"nodeType":"505","messageId":"506","endLine":149,"endColumn":59},{"ruleId":"499","severity":1,"message":"517","line":156,"column":47,"nodeType":"501","messageId":"518","endLine":156,"endColumn":49},{"ruleId":"503","severity":1,"message":"504","line":165,"column":58,"nodeType":"505","messageId":"506","endLine":165,"endColumn":60},{"ruleId":"499","severity":1,"message":"517","line":170,"column":48,"nodeType":"501","messageId":"518","endLine":170,"endColumn":50},{"ruleId":"503","severity":1,"message":"504","line":187,"column":54,"nodeType":"505","messageId":"506","endLine":187,"endColumn":56},{"ruleId":"503","severity":1,"message":"504","line":188,"column":65,"nodeType":"505","messageId":"506","endLine":188,"endColumn":67},{"ruleId":"499","severity":1,"message":"517","line":271,"column":36,"nodeType":"501","messageId":"518","endLine":271,"endColumn":38},{"ruleId":"503","severity":1,"message":"504","line":272,"column":60,"nodeType":"505","messageId":"506","endLine":272,"endColumn":62},{"ruleId":"533","severity":1,"message":"534","line":330,"column":17,"nodeType":"488","endLine":330,"endColumn":108},{"ruleId":"458","severity":1,"message":"570","line":1,"column":10,"nodeType":"460","messageId":"461","endLine":1,"endColumn":35},{"ruleId":"458","severity":1,"message":"571","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":26},"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","no-native-reassign",["572"],"no-negated-in-lhs",["573"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'profileImg' is assigned a value but never used.","'name' is assigned a value but never used.","'role' is assigned a value but never used.","'enrollNo' is assigned a value but never used.","'email' is assigned a value but never used.","'phone' is assigned a value but never used.","'dob' is assigned a value but never used.","'aadhar' is assigned a value but never used.","'caste' is assigned a value but never used.","'gender' is assigned a value but never used.","'panNo' is assigned a value but never used.","'religion' is assigned a value but never used.","'address' is assigned a value but never used.","'pincode' is assigned a value but never used.",["572"],["573"],["572"],["573"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["572"],["573"],"'resultShow' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'back' is assigned a value but never used.","'setAttendence' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'attendence'. Either include it or remove the dependency array.","ArrayExpression",["574"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'props.Branch' and 'props.Class'. Either include them or remove the dependency array.",["575"],"'TextField' is defined but never used.","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'CardDeck' is defined but never used.","'setBranchName' is assigned a value but never used.","'setStudentMarks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classData' and 'examName'. Either include them or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.",["576"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'useRef' is defined but never used.","'setUserAnswer' is assigned a value but never used.","'useState' is defined but never used.","'dataStorage' is defined but never used.","'studentDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'classData'. Either include it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.",["577"],"'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'Axios'. Either exclude it or remove the dependency array. Outer scope values like 'Axios' aren't valid dependencies because mutating them doesn't re-render the component.",["578"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'VideoCameraOutlined' is defined but never used.","'parentsEmail' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setProfileImg' is assigned a value but never used.","'setUpdateShow' is assigned a value but never used.",["579"],"'setPromote' is assigned a value but never used.","'setPromoteSection' is assigned a value but never used.","'setFinalPromotion' is assigned a value but never used.","'setBranchName1' is assigned a value but never used.","'go' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-readonly is not supported by the role form. This role is implicit on the element form.","React Hook useEffect has a missing dependency: 'props.Class'. Either include it or remove the dependency array.",["580"],"React Hook useEffect has missing dependencies: 'a' and 'history'. Either include them or remove the dependency array.",["581"],"no-redeclare","'e' is already defined.","redeclared","'classes' is assigned a value but never used.","'studentFullName' is assigned a value but never used.","'edit' is assigned a value but never used.",["582"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["583"],"'setObtainedMarks' is assigned a value but never used.","'setMaximumMarks' is assigned a value but never used.","'setFinalMarks' is assigned a value but never used.","'examSelectId' is assigned a value but never used.","'setExamSelectId' is assigned a value but never used.",["584"],"'FormatListBulletedTwoTone' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"593","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"593","fix":"600"},{"desc":"593","fix":"601"},{"desc":"589","fix":"602"},"Update the dependencies array to be: [attendence]",{"range":"603","text":"604"},"Update the dependencies array to be: [props.Branch, props.Class]",{"range":"605","text":"606"},"Update the dependencies array to be: [classData, examName]",{"range":"607","text":"608"},"Update the dependencies array to be: [classData]",{"range":"609","text":"610"},"Update the dependencies array to be: []",{"range":"611","text":"612"},{"range":"613","text":"612"},"Update the dependencies array to be: [props.Class]",{"range":"614","text":"615"},"Update the dependencies array to be: [a, history]",{"range":"616","text":"617"},{"range":"618","text":"612"},{"range":"619","text":"612"},{"range":"620","text":"608"},[1658,1660],"[attendence]",[709,711],"[props.Branch, props.Class]",[2805,2812],"[classData, examName]",[2395,2402],"[classData]",[2998,3005],"[]",[2627,2634],[1012,1014],"[props.Class]",[2334,2336],"[a, history]",[2638,2645],[1365,1372],[3431,3438]]